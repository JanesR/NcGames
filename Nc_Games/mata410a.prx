#INCLUDE "MATA410.CH"
#INCLUDE "PROTHEUS.CH"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ MATA410A	³ Rev.  ³ Eduardo Riera          ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcoes de Validacao do Pedido de Venda                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ MATA410                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410Produt³ Autor ³Eduardo Riera          ³ Data ³ 20.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Efetua a Valida‡„o do Codigo do Produto e Inicializa as     ³±±
±±³          ³variaveis do acols.                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Se o Produto eh valido                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Produto                                    ³±±
±±³          ³ExpL1: Codigo de Barra                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function A410Produto(cProduto,lCB)

Local aDadosCfo     := {}

Local lRetorno		:= .T.
Local lContinua		:= .T.
Local lReferencia	:= .F.
Local lDescSubst	:= .F.
Local lGrade		:= MaGrade()
Local lTabCli       := (SuperGetMv("MV_TABCENT",.F.,"2") == "1")
Local lGrdMult	  	:= FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")

Local nPProduto		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPGrade		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_GRADE"})
Local nPItem		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPItemGrd		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMGRD"})
Local nPQtdVen		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPPrcVen		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPOpcional	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_OPC"})
Local nPDescon		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_DESCONT"})
Local nPContrat     := aScan(aHeader,{|x| AllTrim(x[2])=="C6_CONTRAT"})
Local nPItemCon     := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMCON"})
Local nPLoteCtl     := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPNumLote     := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nPEstFis      := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TPESTR"})
Local nPEndPad      := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ENDPAD"})
Local nPLocal       := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPTes         := GdFieldPos("C6_TES")
Local nITEMED 		:= aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEMED"})
Local nCntFor     	:= 0   
Local nPosTes1 		:= 0 

Local nPrcTab		:= 0
Local nBytes := IIf(SuperGetMv("MV_CONSBAR")>Len(SB1->B1_COD),Len(SB1->B1_COD),SuperGetMv("MV_CONSBAR") )

Local cProdRef		:= ""
Local cCFOP			:= Space(Len(SC6->C6_CF))
Local cDescricao	:= ""                                      
Local cCliTab     := ""
Local cLojaTab    := ""

Local cEstado	  := SuperGetMv("MV_ESTADO") 

// Indica se o preco unitario sera arredondado em 0 casas decimais ou nao. Se .T. respeita MV_CENT (Apenas Chile).
Local lPrcDec   := SuperGetMV("MV_PRCDEC",,.F.)  

If cPaisLoc == "BRA"
	lDescSubst	:= IF(mv_par02==1,.T.,.F.)  //mv_par02 parametro para deduzir ou nao a Subst. Trib.
EndIf

mv_par01 := If(ValType(mv_par01)==NIL.or.ValType(mv_par01)!="N",1,mv_par01)
mv_par02 := If(ValType(mv_par02)==NIL.or.ValType(mv_par02)!="N",1,mv_par02)

DEFAULT lCb	:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao utilizada para verificar a ultima versao dos fontes      ³
//³ SIGACUS.PRW, SIGACUSA.PRX e SIGACUSB.PRX, aplicados no rpo do   |
//| cliente, assim verificando a necessidade de uma atualizacao     |
//| nestes fontes. NAO REMOVER !!!							        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF !(FindFunction("SIGACUS_V") .and. SIGACUS_V() >= 20050512)
    Final("Atualizar SIGACUS.PRW !!!")
Endif
IF !(FindFunction("SIGACUSA_V") .and. SIGACUSA_V() >= 20050512)
    Final("Atualizar SIGACUSA.PRX !!!")
Endif
IF !(FindFunction("SIGACUSB_V") .and. SIGACUSB_V() >= 20050512)
    Final("Atualizar SIGACUSB.PRX !!!")
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Compatibiliza a Entrada Via Codigo de Barra com a Entrada via getdados  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lCB )
	dbSelectArea("SB1")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SB1")+Substr(aCols[Len(aCols)][nPProduto],1,nBytes),.F.) )
		cProduto := SB1->B1_COD
	Else
		Help(" ",1,"C6_PRODUTO")
		Return .F.
	EndIf
	n := Len(aCols)
Else
	cProduto := IIF(cProduto == Nil,&(ReadVar()),cProduto)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Produto foi Alterado                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !( Type("l410Auto") != "U" .And. l410Auto )
	If ( nPOpcional > 0 )
		If ( Empty(aCols[n][nPOpcional]) )
			If ( RTrim(aCols[n][nPProduto]) == RTrim(cProduto) .And. !lCB)
				lContinua := .F.
			EndIf
		EndIf
	Else
		If ( RTrim(aCols[n][nPProduto]) == RTrim(cProduto) .And. !lCB)
			lContinua := .F.
		EndIf
	EndIf
EndIf
cProdRef := cProduto
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se a grade esta ativa e se o produto digitado eh uma referencia³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lContinua .And. lGrade )
	lReferencia := MatGrdPrrf(@cProdRef)
	If ( lReferencia )
		If lGrdMult .And. !(FindFunction("MATA410_V") .And. MATA410_V() >= 20110131)
			Final(STR0171)	//"Atualizar MATA410.PRX !!!"
		EndIf
		If ( M->C5_TIPO $ "D" )
			Help(" ",1,"A410GRADEV")
			lContinua := .F.
			lRetorno	 := .T.
		EndIf
		If ( nPGrade > 0 )
			aCols[n][nPGrade] := "S"
			lReferencia := .T.
		EndIf
		aCols[n,nPItemGrd] := StrZero(1,TamSX3("C6_ITEMGRD")[1])
	Else
		If ( nPGrade > 0 )
			aCols[n][nPGrade] := "N"
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o AcolsGrade e o AheadGrade para este item     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
	If FindFunction("MsMatGrade") .And. IsAtNewGrd()
		oGrade:MontaGrade(n,cProdRef,.T.,,lReferencia,.T.) 
	Else
		MatGrdMont(n,cProdRef,.T.)
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verificar se o Produto eh valido                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lContinua )
	dbSelectArea("SB1")
	dbSetOrder(1)
	If !lReferencia .And. ( !MsSeek(xFilial("SB1")+cProdRef,.F.) )
		Help(" ",1,"C6_PRODUTO")
		lContinua := .F.
		lRetorno  := .F.
	Else
		If !lReferencia .And. !RegistroOk("SB1")	
			lContinua := .F.
			lRetorno  := .F.
		Endif	
	EndIf
EndIf

If INCLUI .And. !Empty(M->C5_MDCONTR) .And. !Empty(aCols[n,nITEMED]) .And. M->C6_PRODUTO # aCols[n,nPProduto]
	Aviso(STR0127,STR0128,{"Ok"}) //SIGAGCT - Este pedido foi vinculado a um contrato e por isto não pode ter este campo alterado.
	lContinua := .F.
	lRetorno  := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Checar se este item do pedido nao foi faturado total -³
//³mente ou parcialmente                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lContinua .And. ALTERA )
	dbSelectArea("SC6")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SC6")+M->C5_NUM+aCols[n][nPItem]+aCols[n][nPProduto]) )
		If ( SC6->C6_QTDENT != 0  .And. cProduto != aCols[n][nPProduto] .And. !lCB )
			Help(" ",1,"A410ITEMFT")
			lRetorno 	:= .F.
			lContinua 	:= .F.
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Checar se este item do pedido esta amarrado com       ³
//³alguma Ordem de Producao                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lContinua .And. ALTERA )
	dbSelectArea("SC6")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SC6")+M->C5_NUM+aCols[n][nPItem]+aCols[n][nPProduto]) )
		If ( SC6->C6_OP $ "01#03" )
			If (SuperGetMV("MV_ALTPVOP") == "N") .And. !(!Empty(SC5->C5_PEDEXP) .And. SuperGetMv("MV_EECFAT") .And. FindFunction("AVINTEMB") .And. AvIntEmb())
				Help(" ",1,"A410TEMOP")
				lRetorno 	:= .F.
				lContinua 	:= .F.
			EndIf
		EndIf
		If ( SC6->C6_OP == "05" )
			If (SuperGetMV("MV_ALTPVOP") == "N") .And. !(!Empty(SC5->C5_PEDEXP) .And. SuperGetMv("MV_EECFAT") .And. FindFunction("AVINTEMB") .And. AvIntEmb())
				Aviso(STR0038,STR0039,{STR0040}) //"Atencao!"###"Este item foi marcado para gerar uma Ordem de Producao mas nao gerou, pois havia saldo disponivel em estoque. Este Pedido de Venda ja comprometeu o saldo necessario."###'Ok'
			EndIf
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica o contrato de parceria                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nPContrat > 0 .And. nPItemCon > 0
	dbSelectArea("ADB")
	dbSetOrder(1)
	If MsSeek(xFilial("ADB")+aCols[N][nPContrat]+aCols[N][nPItemCon])
		If ADB->ADB_CODPRO <> M->C6_PRODUTO
			aCols[n][nPContrat] := Space(Len(aCols[n][nPContrat]))
			aCols[n][nPItemCon] := Space(Len(aCols[n][nPItemCon]))
		EndIf		
	Else
		aCols[n][nPContrat] := Space(Len(aCols[n][nPContrat]))
		aCols[n][nPItemCon] := Space(Len(aCols[n][nPItemCon]))
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica os Opcionais e a Tabela de Precos           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lContinua )
	
	dbSelectArea(IIF(M->C5_TIPO$"DB","SA2","SA1"))
	dbSetOrder(1)
	MsSeek(xFilial()+IIf(!Empty(M->C5_CLIENT),M->C5_CLIENT,M->C5_CLIENTE)+M->C5_LOJAENT) 
				
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Posicionar o TES para calcular o CFOP                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   	If !lReferencia .And. nPTes > 0 
   		If ( Type("l410Auto") != "U" .And. l410Auto .And. Type("aAutoItens[n]") !=  "U")
	       		nPosTes1 := aScan(aAutoItens[n],{|x| AllTrim(x[1])=="C6_TES"})
	   	   	If nPosTes1 > 0
	   		   aCols[n][nPTes] := aAutoItens[n][nPosTes1][2]
	   		Endif
	   		If Empty(aCols[n][nPTes])
	   			aCols[n][nPTes] := RetFldProd(SB1->B1_COD,"B1_TS")
	   		Endif
	   	Else	
	   		aCols[n][nPTes] := RetFldProd(SB1->B1_COD,"B1_TS")
		EndIF
	ElseIf lReferencia .And. nPTes > 0 .And. MatOrigGrd() == "SB4" 
		aCols[n][nPTes] := SB4->B4_TS
	Endif
	
	dbSelectArea("SF4")
	dbSetOrder(1)
	If ( MsSeek(xFilial()+aCols[n][nPTes],.F.) )
		if cPaisLoc=="BRA"		
		 	Aadd(aDadosCfo,{"OPERNF","S"})
		 	Aadd(aDadosCfo,{"TPCLIFOR",M->C5_TIPOCLI})
		 	Aadd(aDadosCfo,{"UFDEST",Iif(M->C5_TIPO$"DB", SA2->A2_EST,SA1->A1_EST)})
		 	Aadd(aDadosCfo,{"INSCR", If(M->C5_TIPO$"DB", SA2->A2_INSCR,SA1->A1_INSCR)})
			If SA1->(FieldPos("A1_CONTRIB")) > 0 		 	
				Aadd(aDadosCfo,{"CONTR", SA1->A1_CONTRIB})
			EndIf	
			cCfop := MaFisCfo(,SF4->F4_CF,aDadosCfo)
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Atualiza CFO de devido a nao correspondencia do CFO estadual  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Left(cCfop,4) == "6405"
				cCfop := "6404"+SubStr(cCfop,5,Len(cCfop)-4)
			Endif	

			
		Else
			cCfop:=SF4->F4_CF
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Trazer descricao do Produto                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SA7")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SA7")+IIf(!Empty(M->C5_CLIENT),M->C5_CLIENT,M->C5_CLIENTE)+M->C5_LOJAENT+cProdRef,.F.) ) .And. !Empty(SA7->A7_DESCCLI)
		cDescricao := SA7->A7_DESCCLI
	Else
		If ( lReferencia )   
			If FindFunction("MsMatGrade") .And. IsAtNewGrd()
				cDescricao := oGrade:GetDescProd(cProdRef) 
			Else
				dbSelectArea("SB4")
				dbSetOrder(1)
				If ( MsSeek(xFilial("SB4")+cProdRef) )
					cDescricao := SB4->B4_DESC
				EndIf  
			EndIf	
		Else
			cDescricao := SB1->B1_DESC
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inicializar os campos a partir do produto digitado.                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lTabCli
		Do Case
			Case !Empty(M->C5_LOJAENT) .And. !Empty(M->C5_CLIENT)
				cCliTab   := M->C5_CLIENT
				cLojaTab  := M->C5_LOJAENT
			Case Empty(M->C5_CLIENT) 
				cCliTab   := M->C5_CLIENTE
				cLojaTab  := M->C5_LOJAENT
			OtherWise
				cCliTab   := M->C5_CLIENTE
				cLojaTab  := M->C5_LOJACLI
		EndCase					
	Else
		cCliTab   := M->C5_CLIENTE
		cLojaTab  := M->C5_LOJACLI
	Endif
	
	
	For nCntFor :=1 To Len(aHeader)
		Do Case
		Case AllTrim(aHeader[nCntFor][2]) == "C6_UM"
			If !lReferencia
				aCols[n][nCntFor] := SB1->B1_UM
			ElseIf MatOrigGrd() == "SB4"
				aCols[n][nCntFor] := SB4->B4_UM
			Else
				aCols[n][nCntFor] := SBR->BR_UM
			EndIf
		Case AllTrim(aHeader[nCntFor][2]) == "C6_LOCAL"
			If !lReferencia
				aCols[n][nCntFor] := RetFldProd(SB1->B1_COD,"B1_LOCPAD")
			ElseIf MatOrigGrd() == "SB4"
				aCols[n][nCntFor] := SB4->B4_LOCPAD
			Else
				aCols[n][nCntFor] := SBR->BR_LOCPAD
			EndIf
		Case AllTrim(aHeader[nCntFor][2]) == "C6_DESCRI"
			aCols[n][nCntFor] := PadR(cDescricao,TamSx3("C6_DESCRI")[1])
		Case AllTrim(aHeader[nCntFor][2]) == "C6_SEGUM"
			If !lReferencia
				aCols[n][nCntFor] := SB1->B1_SEGUM
			ElseIf MatOrigGrd() == "SB4"
				aCols[n][nCntFor] := SB4->B4_SEGUM
			EndIf
		Case AllTrim(aHeader[nCntFor][2]) == "C6_PRUNIT" .And. !(lReferencia .And. lGrdMult)
			nPrcTab:=A410Tabela(	cProdRef,;
									M->C5_TABELA,;
									n,;
									aCols[n][nPQtdVen],;                                   
									cCliTab,;
									cLojaTab,;
									If(nPLoteCtl>0,aCols[n][nPLoteCtl],""),;
									If(nPNumLote>0,aCols[n][nPNumLote],""),;
									NIL,;
									NIL,;
									.T.)				
			aCols[n][nCntFor] := A410Arred(nPrcTab,"C6_PRUNIT")
		Case AllTrim(aHeader[nCntFor][2]) == "C6_PRCVEN" .And. !(lReferencia .And. lGrdMult)
			nPrcTab:=A410Tabela(	cProdRef,;
									M->C5_TABELA,;
									n,;
									aCols[n][nPQtdVen],;
									cCliTab,;
									cLojaTab,;
									If(nPLoteCtl>0,aCols[n][nPLoteCtl],""),;
									If(nPNumLote>0,aCols[n][nPNumLote],""),;
									NIL,;
									NIL,;
									.F.)				
			If !(lReferencia .And. lGrdMult) .Or. nPrcTab <> 0
				If ( !lDescSubst)
					aCols[n][nCntFor] := A410Arred(FtDescCab(nPrcTab,{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4})*(1-(aCols[n][nPDescon]/100)),"C6_PRCVEN",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
				Else
					aCols[n][nCntFor] := FtDescCab(nPrcTab,{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4},If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
				EndIf
			EndIf
		Case AllTrim(aHeader[nCntFor][2]) == "C6_UNSVEN"
			A410SegUm(.T.)
		Case AllTrim(aHeader[nCntFor][2]) == "C6_CF"
			aCols[n][nCntFor] := cCFOP
		Case "C6_COMIS" $ AllTrim(aHeader[nCntFor][2])  
				aCols[n][nCntFor] := SB1->B1_COMIS	
		Case AllTrim(aHeader[nCntFor][2]) == "C6_QTDLIB"
			aCols[n][nCntFor] := 0
		Case AllTrim(aHeader[nCntFor][2]) == "C6_QTDVEN"
			aCols[n][nCntFor] := If(lCB,aCols[n][nPQtdVen],0)
		Case AllTrim(aHeader[nCntFor][2]) == "C6_VALOR"
			aCols[n][nCntFor] := A410Arred(aCols[n,nPPrcVen]*aCols[n,nPQtdVen],"C6_VALOR")
		Case AllTrim(aHeader[nCntFor][2]) == "C6_VALDESC"
			aCols[n][nCntFor] := 0
		Case AllTrim(aHeader[nCntFor][2]) == "C6_DESCONT"
			aCols[n][nCntFor] := 0
		Case AllTrim(aHeader[nCntFor][2]) == "C6_NUMLOTE"
			aCols[n][nCntFor] := CriaVar("C6_NUMLOTE")
		Case AllTrim(aHeader[nCntFor][2]) == "C6_LOTECTL"
			aCols[n][nCntFor] := CriaVar("C6_LOTECTL")
		Case AllTrim(aHeader[nCntFor][2]) == "C6_CODISS"
			aCols[n][nCntFor] := RetFldProd(SB1->B1_COD,"B1_CODISS")
		Case AllTrim(aHeader[nCntFor][2]) == "C6_NFORI"
			aCols[n][nCntFor] := CriaVar("C6_NFORI")
		Case AllTrim(aHeader[nCntFor][2]) == "C6_SERIORI"
			aCols[n][nCntFor] := CriaVar("C6_SERIORI")
		Case AllTrim(aHeader[nCntFor][2]) == "C6_ITEMORI"
			aCols[n][nCntFor] := CriaVar("C6_ITEMORI")
		Case AllTrim(aHeader[nCntFor][2]) == "C6_FCICOD" .And. FindFunction( "XFciGetOrigem" ) //SIGAFIS
			aCols[n][nCntFor] := Upper( XFciGetOrigem( SB1->B1_COD , M->C5_EMISSAO )[2] )
		EndCase
	Next nCntFor
	If ( MV_PAR01 == 1 .And. lCB )
		MaIniLiber(M->C5_NUM,aCols[n][nPQtdVen],n,lCB)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inicializar os campos de enderecamento do WMS para uso na carga         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(M->C5_TRANSP)
		SA4->(DbSetOrder(1))
		If SA4->(MsSeek(xFilial("SA4")+M->C5_TRANSP))
			If !Empty(SA4->A4_ESTFIS) .And. !Empty(SA4->A4_ENDPAD) .And. !Empty(SA4->A4_LOCAL) .And.;
				nPEndPad > 0 .And. nPEstFis > 0 .And. nPLocal > 0			
				aCols[n][nPEstFis] := SA4->A4_ESTFIS
				aCols[n][nPEndPad] := SA4->A4_ENDPAD
				aCols[n][nPLocal]  := SA4->A4_LOCAL
			Endif
		Endif
	Endif							
	
EndIf                                                     

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona nas tabelas SB1 e SF4 para o preenchimento correto da ³
//³ classificação fiscal dos itens C6_CLASFIS através dos gatilhos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lContinua .And. RTrim(cProdRef) <> RTrim(SB1->B1_COD)
	SB1->(dbSetOrder(1))
	SB1->(MsSeek(xFilial("SB1")+cProdRef))
	SF4->(dbSetOrder(1))
	SF4->(MsSeek(xFilial("SF4")+aCols[n][nPTes]))
EndIf

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410Local ³ Autor ³ Eduardo Riera         ³ Data ³ 23.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Avaliar o Almoxarifado Digitado                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Logico                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Local()

Local cProduto
Local cVar 			:= &(ReadVar())
Local lGrade 		:= MaGrade()
Local lContinua	:= .T.
Local lRetorno 	:= .T.
Local nPLocal		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPProduto	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPReserva	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_RESERVA"})
Local nPNumLote	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nPLoteCtl	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPLocaliz 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCALIZ"})
Local nPNumSer		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMSER"})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Almoxarifado foi alterado                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( aCols[n][nPLocal] == Trim(cVar) )
	lContinua := .F.
EndIf

If ( lContinua .And. nPProduto != 0 )
	cProduto := aCols[n][nPProduto]
	If ( lGrade )
		cProduto := aCols[n][nPProduto]
		If ( lGrade )
			lGrade := MatGrdPrrf(@cProduto)
		EndIf
	EndIf
	If !lGrade
		dbSelectArea("SB2")
		dbSetOrder(1)
		If ( !MsSeek(xFilial("SB2")+cProduto+cVar,.F.) )
			Help(" ",1,"C6_LOCAL")
			lRetorno := .F.
			lContinua:= .F.
		EndIf
	EndIf
EndIf
If ( lContinua .And. nPReserva != 0 )
	If ( !Empty(aCols[n][nPReserva]) )
		dbSelectArea("SC0")
		dbSetOrder(1)
		If !MsSeek(xFilial("SC0")+aCols[n][nPReserva]+cProduto+cVar,.F.)
			Help(" ",1,"A410RES")
			lRetorno := .F.
			lContinua:= .F.
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Reinicializa os campos de estoque                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !lRetorno )
	If ( nPNumLote	!= 0 )
		aCols[n][nPNumLote]	:= CriaVar("C6_NUMLOTE")
	EndIf
	If ( nPLoteCtl	!= 0 )
		aCols[n][nPLoteCtl]	:= CriaVar("C6_LOTECTL")
	EndIf
	If ( nPLocaliz	!= 0 )
		aCols[n][nPLocaliz]	:= CriaVar("C6_LOCALIZ")
	EndIf
	If ( nPNumSer	!= 0 )
		aCols[n][nPNumSer]	:= CriaVar("C6_NUMSER")
	EndIf
EndIf
Return(lRetorno)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A410ValTES³ Autor ³ Claudinei Benzi       ³ Data ³ 24.10.91 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Esta fun‡ o valida algumas informacoes pertinentes ao TES  ³±±
±±³          ³ informado em relacao ao do primeiro item. Ex. Ao informar  ³±±
±±³          ³ o TES a geracao ou nao da duplicata deve ser igual.        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void A410ValTES(ExpC1,ExpC2)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo do TES a ser comparado.                     ³±±
±±³          ³ ExpC2 = Codigo do TES do primeiro item (padrao para Nota)  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410ValTES(cTesCor,cTes)

Local aArea		:= GetArea()
Local aAreaF4	:= SF4->(GetArea())
//Local cDestaca	:= ""
Local lRetorno	:= .T.
Local nRecSF4	:=	0
dbSelectArea("SF4")
dbSetOrder(1)
If ( MsSeek(xFilial()+cTesCor,.F.) )

	If ( SF4->F4_TIPO == 'S' )

		If ( cTes != NIL )
			nRecSF4	:=	SF4->(Recno())
			//cDestaca := SF4->F4_DESTACA
			cTipo    := F4_TIPO
			If MsSeek(xFilial("SF4")+cTes,.F.)
				If !( /*cDestaca == SF4->F4_DESTACA .And.*/ cTipo == SF4->F4_TIPO )
					Help(" ",1,"A410NAOTES")
					lRetorno := .F.
				EndIf
			Else
				Help(" ",1,"A410TE")
				lRetorno := .F.
			EndIf
			SF4->(MsGoTo(nRecSF4))							
		EndIf

		If cPaisLoc <> "BRA" .And. lRetorno
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Se usa entrega futura, o TES nao deve movimentar estoques³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If  SF4->F4_ESTOQUE == 'S'	.And.(Type("M->C5_DOCGER") <> "U" .And. M->C5_DOCGER == '3')
				Help(" ",1,"A410RMFUT")
				lRetorno := .F.
			EndIf			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Se o pedido e de consignacao, deve estar preenchido o campo que³
			//³define o TES que deve ser usado no remito, e este TES deve con-³
			//³trolar poder de terceiros.                                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno	.And. Type("M->C5_TIPOREM") <> 'U' .And. M->C5_TIPOREM == "A"
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verificar se esta vazio o campo que define o TES que deve ser usado³
				//³para envio para poder de 3ros e o campo para devolucao             ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If M->C5_DOCGER <> "1" .And. Empty(SF4->F4_TESENV)
					Help(" ",1,"A410TES001")
					lRetorno := .F.
				Endif
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verificar se os TES configurados para envios existem e sao corretos³
				//³(tipo "R" para a saida e "D" para a entrada).                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nRecSF4	:=	SF4->(Recno())
				If lRetorno .And. M->C5_DOCGER <> "1" .And. (!SF4->(MsSeek(xFilial()+SF4->F4_TESENV)) .Or. SF4->F4_PODER3 <> "R" )
					Help(" ",1,"A410TES003")
					lRetorno := .F.
				Endif
				SF4->(MsGoTo(nRecSF4))							
			Endif   	
		Endif

	Else
		Help(" ",1,"A410NAOTES")
		lRetorno := .F.
	EndIf

Else
	Help(" ",1,"A410TE")
	lRetorno := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a entrada da rotina                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaF4)
RestArea(aArea)
Return(lRetorno)



/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410Reserv³ Autor ³Eduardo Riera          ³ Data ³02.03.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao da Reserva                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Logico                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Reserv()

Local aArea  		:= GetArea()
Local aAreaC6		:= SC6->(GetArea())
Local aAreaF4		:= SF4->(GetArea())
Local nPProduto		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO" })
Local nPLocal		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPQtdVen		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPNumLote	    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nPLoteCtl		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPLocaliz  	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCALIZ"})
Local nPNumSer		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMSERI"})
Local nPReserva		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_RESERVA"})
Local nPTes			:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local lGrade		:= MaGrade()
Local lRetorna		:= .T.
Local nQtdRes		:= 0
Local nCntFor 		:= 0

cProduto	:= aCols[n][nPProduto]
cLocal   := aCols[n][nPLocal]
cReserva	:= aCols[n][nPReserva]
If ( ReadVar() $ "M->C6_RESERVA"  )
	cReserva	:= &(ReadVar())
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Nao pode  haver  reserva  com grade                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lGrade )
	If ( MatGrdPrrf(aCols[n][nPProduto]) )
		Help(" ",1,"A410NGRADE")
		lRetorna := .F.
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³O tes deve movimentar estoque                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SF4")
dbSetOrder(1)
If ( MsSeek(xFilial("SF4")+aCols[n][nPTes]) )
	If ( SF4->F4_ESTOQUE=="N" )
		Help(" ",1,"A410TEEST")
		lRetorna := .F.
	EndIf
EndIf

If ( lRetorna )
	dbSelectArea("SC0")
	dbSetOrder( 1 )
	If !MsSeek(xFilial("SC0")+cReserva+cProduto+cLocal)
		Help(" ",1,"A410RES")
		lRetorna := .F.
	ElseIf cPaisLoc$"EUA|POR" .and. SC0->C0_TIPO == "LW" //Tratamento para Lay-Away
		Help(" ",1,"A410RES")
		lRetorna := .F.
	ElseIf GetNewPar("MV_CHCLRES",.F.)
			If SC0->C0_TIPO == "CL"
				If SC0->C0_DOCRES <> M->C5_CLIENTE
					MsgAlert(STR0093 + Alltrim(cReserva) + STR0094 + SC0->C0_DOCRES)
					lRetorna := .F.
				Endif
			Endif
	Else
		nQtdRes := SC0->C0_QUANT
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³  Verifica Saldo da Reserva                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorna )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica a quantidade utilizada neste pedido                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC6")
	dbSetOrder(2)
	MsSeek(xFilial("SC6")+cProduto+M->C5_NUM,.F.)
	While ( !Eof() .And. xFilial("SC6")==SC6->C6_FILIAL .And.;
			SC6->C6_PRODUTO== cProduto 	 .And.;
			SC6->C6_NUM		==M->C5_NUM )
		If ( cReserva 	== SC6->C6_RESERVA .And.;
				cLocal	== SC6->C6_LOCAL )
			nQtdRes += SC6->C6_QTDRESE
		EndIf
		dbSelectArea("SC6")
		dbSkip()
	EndDo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica a quantidade utilizada no Acols                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nCntFor := 1 To Len(aCols)
		If ( !aCols[nCntFor][Len(aHeader)+1] 			.And.;
				cReserva==aCols[nCntFor][nPReserva] 	.And.;
				cLocal	==aCols[nCntFor][nPLocal] 		.And.;
				cProduto==aCols[nCntFor][nPProduto] 	.And.;
				n 		!=nCntFor)
			nQtdRes -= Min(aCols[nCntFor][nPQtdVen],nQtdRes)
		EndIf
	Next nCntFor
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Quantida utilizada no item                                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( nQtdRes == 0 )
		nQtdRes -= aCols[n][nPQtdVen]
	Else
		nQtdRes -= Min(aCols[n][nPQtdVen],nQtdRes)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Valida a Reserva                                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( nQtdRes < 0 )
		Help(" ",1,"A410RESERV")
		lRetorna := .F.
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³  Atualiza Quantidade e Nro do Lote                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorna )
	If !(Acols[n][nPQtdVen] > 0)
		Acols[n][nPQtdVen] 	:= SC0->C0_QUANT
	EndIf
	If ( nPNumLote != 0 )
		Acols[n][nPNumLote]  := SC0->C0_NUMLOTE
	EndIf
	If ( nPLoteCtl != 0 )
		Acols[n][nPLoteCtl]	:= SC0->C0_LOTECTL
	EndIf
	If ( nPLocaliz != 0 )
		Acols[n][nPLocaliz]	:= SC0->C0_LOCALIZ
	EndIf
	If ( nPNumSer != 0 )
		Acols[n][nPNumSer ] 	:= SC0->C0_NUMSERI
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Retorna os registros alterados                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaF4)
RestArea(aAreaC6)
RestArea(aArea)

Return(lRetorna)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410Vend  ³ Autor ³Eduardo Riera          ³ Data ³27.02.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao  do  Codigo  do  Vendedor                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Logico                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Vend()
Local cCampoGet	 := ReadVar()
Local cConteudo	 := &(ReadVar())  
Local cContra    := M->C5_MDCONTR
Local cVendedores:= ""
Local cVend		 := "1"
Local cComissao	 := ""
Local nNumVend	 := Fa440CntVen()
Local nComissao	 := 0
Local nCntFor	 := 0
Local nEndereco	 := 0
Local bVendedor	 := {|x| "M->C5_VEND"+x}
Local lRetorna	 := .T.

cConteudo := If(Empty(cConteudo),"",cConteudo)

dbSelectArea("SA3")
dbSetOrder(1)
If ( !MsSeek(xFilial("SA3")+cConteudo) )
	Help(" ",1,"REGNOIS")
	lRetorna := .F.
Else
	lRetorna := RegistroOk("SA3")
EndIf   

If lRetorna .And. INCLUI .And. !Empty(cContra) .And. !Empty(cConteudo)
	CNU->(dbSetOrder(1))
	If !CNU->(dbSeek(xFilial("CNU")+cContra+cConteudo))
		Aviso(STR0127,STR0129,{"Ok"}) //SIGAGCT - Este pedido foi vinculado a um contrato e este vendedor não consta no mesmo.
		lRetorna := .F.
	EndIf
EndIf

If lRetorna
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Analisa todos os vendedores                                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nCntFor := 1 To nNumVend
		If ( !Empty(&(Eval(bVendedor,cVend))) .And. cCampoGet != EVAL(bVendedor,cVend) )
			cVendedores := cVendedores + "\" + &(EVAL(bVendedor,cVend))
		EndIf
		cVend  :=  Soma1(cVend,1)
	Next nCntFor
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Valida o Vendedor, para nao  permitir duplicacao de codigos             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( cConteudo $ cVendedores )
		Help(" ",1,"VENDED")
		lRetorna	:= .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Coloca na tela o percentual da comissao conforme o vendedor   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IF ( lRetorna )
	If ( !Empty(cConteudo) )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza comissao       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cVend		 := Substr(cCampoGet,11,1)
		M->&("C5_COMIS"+cVend) := IF(Empty(SA3->A3_COMIS),M->&("C5_COMIS"+cVend),SA3->A3_COMIS)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Limpa campo de comissao      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cVend		 := Substr(cCampoGet,11,1)
		M->&("C5_COMIS"+cVend) := 0.00
	EndIf
	cComissao :="M->C5_COMIS" + cVend
	cComissao := Substr(cComissao,4,9)
	nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) ==cComissao  } )
	If ( nEndereco > 0 )
		aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := If(!Empty(cConteudo),TransNum("A3_COMIS"),TransNum("C5_COMIS"+cVend))
	EndIf
EndIf
Return(lRetorna)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410NfOrig³ Autor ³Eduardo Riera          ³ Data ³01.03.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao e Inicializacao da Nota Fiscal Original           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Logico                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function A410NfOrig()

Local aArea		:= GetArea()
Local aAreaSB8  := SB8->(GetArea())
Local aValor    := {}
Local cNfOri 	:= ""
Local cSeriOri	:= ""
Local cItemOri	:= ""
Local nPProduto	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPLocal   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPQtdVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPPrcVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPValor  	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPNumLote	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nPLoteCtl	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPDtValid	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_DTVALID"})
Local nPTES		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPNfori	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NFORI"})
Local nPSeriori	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_SERIORI"})
Local nPItemOri	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMORI"})
Local nPIdentB6	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_IDENTB6"})
Local nPSegum  	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_SEGUM"})
Local nPQtdSeg 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_UNSVEN"})
Local nSldJaDev	:= 0
Local nCntFor	:= 0
Local lRetorno 	:= .T.
Local cLocCQ    := SuperGetMv('MV_CQ')
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa Nota,Serie e Item                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Empty(cNfOri) )
	cNfOri  	:= aCols[n][nPNfori]
EndIf
If ( Empty(cSeriOri) )
	cSeriOri := aCols[n][nPSeriori]
EndIf
If ( Empty(cItemOri) )
	cItemOri := aCols[n][nPItemOri]
EndIf
If ( AllTrim(ReadVar()) == "M->C6_NFORI" )
	cNfOri 	:= &(ReadVar())
EndIf
If ( AllTrim(ReadVar()) == "M->C6_SERIORI" )
	cSeriOri	:= &(ReadVar())
EndIf
If ( AllTrim(ReadVar()) == "M->C6_ITEMORI" )
	cItemOri	:= &(ReadVar())
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Avalia Notas de Devolucao                                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( M->C5_TIPO == "D" .And.;
		nPNfOri != 0 .And. nPSeriOri !=0 .And. nPItemOri != 0 )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Somente Valida a Nota de Devolucao quando for  informado o Nr.Nota,     ³
	//³a serie e o item da nota original.                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SD1")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SD1")+cNfOri+cSeriOri+M->C5_CLIENTE+M->C5_LOJACLI+aCols[n][nPProduto]+cItemOri) )
		aValor := A410SNfOri(SD1->D1_FORNECE,SD1->D1_LOJA,SD1->D1_DOC,SD1->D1_SERIE,SD1->D1_ITEM,SD1->D1_COD,,aCols[n][nPLocal],"SD1")
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica o Almoxarifado de Entrada                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nPLocal <> 0 )
			If SD1->D1_LOCAL == cLocCQ
				aCols[n,nPLocal] := If(!Empty(aCols[n,nPLocal]),aCols[n,nPLocal],SD1->D1_LOCAL)
				M->C6_LOCAL	     := aCols[n,nPLocal]
			Else
				aCols[n,nPLocal] := SD1->D1_LOCAL
				M->C6_LOCAL	     := SD1->D1_LOCAL
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica o Preco Unitario de Entrada                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
		If ( nPPrcVen != 0 )
			If Abs(aCols[n][nPPrcVen]-a410Arred(aValor[2]/IIf(aValor[1]==0,1,aValor[1]),"C6_PRCVEN"))>0.01
				aCols[n][nPPrcVen] := a410Arred(aValor[2]/IIf(aValor[1]==0,1,aValor[1]),"C6_PRCVEN")
				A410MultT("C6_PRCVEN",aCols[N,nPPrcVen])
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a quantidade ja devolvida deste item                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If  ( aCols[n][nPQtdVen] > aValor[1] .Or. aCols[n][nPQtdVen] == 0)
			aCols[n][nPQtdVen]  := aValor[1]
			A410MultT("C6_QTDVEN",aCols[N,nPQtdVen])
		EndIf
		If ( nPSegum != 0 )
			aCols[n][nPSegum] := SD1->D1_SEGUM
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica o Lote de Entrada                                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SF4->(dbSeek(xFilial("SF4")+aCols[N][nPTES])) .And. SF4->F4_ESTOQUE == 'S'
			If ( nPNumLote != 0 ) .And. (SD1->D1_LOCAL<>cLocCQ .Or. (SD1->D1_LOCAL==cLocCQ .And. Empty(aCols[n,nPNumLote])) )
				aCols[n][nPNumLote] := SD1->D1_NUMLOTE
			EndIf
			If ( nPLoteCtl != 0 ) .And. (SD1->D1_LOCAL<>cLocCQ .Or. (SD1->D1_LOCAL==cLocCQ .And. Empty(aCols[n,nPLoteCtl])) )
				aCols[n][nPLoteCtl] := SD1->D1_LOTECTL
			EndIf
			If ( nPDtValid != 0 ) .And. (SD1->D1_LOCAL<>cLocCQ .Or. (SD1->D1_LOCAL==cLocCQ .And. Empty(aCols[n,nPDtValid])) )
				aCols[n][nPDtValid] := SD1->D1_DTVALID
				SB8->(dbSetOrder(3))
				If SB8->(MsSeek(xFilial("SB8")+SD1->D1_COD+SD1->D1_LOCAL+SD1->D1_LOTECTL+IIf(Rastro(SD1->D1_COD,"S"),SD1->D1_NUMLOTE,"")))
					aCols[n][nPDtValid] := SB8->B8_DTVALID
				EndIf
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza o Valor Total                                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( MV_PAR01 == 1 ) //Sugere Qtd.Liberada
			MaIniLiber(M->C5_NUM,aCols[n][nPQtdVen],n)
		EndIf
	Else
		If ( !Empty(cItemOri) )
			Help(" ",1,"A100NF")
			lRetorno := .F.
		EndIf
		aCols[n][nPNfOri]	:= cNfOri
		aCols[n][nPSeriOri]	:= cSeriOri
		aCols[n][nPItemOri]	:= CriaVar("D1_ITEM",.F.)
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Avalia Complementos                                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( M->C5_TIPO == "CIP" .And.;
		nPNfOri != 0 .And. nPSeriOri !=0 .And. nPItemOri != 0 )
	dbSelectArea("SD2")
	dbSetOrder(3)
	If (!MsSeek(xFilial()+cNfOri+cSeriOri+M->C5_CLIENTE+M->C5_LOJACLI+aCols[n][nPProduto]+cItemOri) )
		If ( !Empty(cItemOri)  )
			Help(" ",1,"A410NF")
			lRetorno := .F.
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Avalia Poder de Terceiros                                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nPTes  != 0 )
	dbSelectArea("SF4")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SF4")+aCols[n][nPTes]) )
		If ( SF4->F4_PODER3 == "D" )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica o Identificador do Poder de/em Terceiro                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nPIdentB6 != 0 .And. Empty(cNfOri) )
				aCols[n][nPIdentB6] := ""
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica o Preco Unitario de Entrada                                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If nPIdentB6 <> 0 .And. !Empty(aCols[n][nPIdentB6])

				SD1->(dbSetOrder(4))
				If SD1->(MsSeek(xFilial("SD1")+aCols[n][nPIdentB6]))
			
					If ( nPPrcVen != 0 )
						aCols[n][nPPrcVen] := a410Arred((SD1->D1_TOTAL-SD1->D1_VALDESC)/SD1->D1_QUANT,"C6_PRCVEN")
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Atualiza o Valor Total                                                  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					aCols[n][nPValor ]  := a410Arred(aCols[n][nPQtdVen]*aCols[n][nPPrcVen],"C6_VALOR")
					If ( MV_PAR01 == 1 ) //Sugere Qtd.Liberada
						MaIniLiber(M->C5_NUM,aCols[n][nPQtdVen],n)
					EndIf
				EndIf
			Endif
		Endif		
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a workarea de entrada                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaSB8)
RestArea(aArea)

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410Limpa ³ Autor ³ Eduardo Riera         ³ Data ³27.02.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Efetua o tratamento da Troca de Clientes.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Sempre .T.                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhuma                                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Limpa(lLimpa,cVar)

Local aArea     := GetArea()
Local aTexto    := {}
Local nEndereco := 0
Local nCntFor	:= 0
Local nPIpiDev  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_IPIDEV"})
Local oDlg
Local lVersao10	:= Left(GetVersao(.F.),3) == "P10"
Local IsEnchOld := GetMv("MV_ENCHOLD",,"2") == "1"
Local nPosTela	:= 0
Local nPos    	:= 0
Local nPosCpo   := 0
Local nPos1     := 0
Local nPos2     := 0
Local cText	    := ""	

DEFAULT lLimpa := .T.
DEFAULT cVar   := &(ReadVar())

If  !( Type("l410Auto") <> "U" .And. l410Auto )
	oDlg := GetWndDefault()
	If lVersao10
		aadd(aTexto,{RetTitle("C5_CLIENTE"),RetTitle("C7_FORNECE")})
		For nCntFor := 1 To Len(oDlg:aControls)
			If oDlg:aControls[nCntFor]:ClassName() == "TSAY"
				nX := aScan(aTexto,{|x| x[1]==oDlg:aControls[nCntFor]:cCaption .Or. x[2]==oDlg:aControls[nCntFor]:cCaption})
				If nX <> 0
					oDlg:aControls[nCntFor]:SetText(aTexto[nX][IIf(cVar$"DB",2,1)])
				EndIf
			EndIf	
		Next nCntFor
	else 		
		If IsEnchOld
			nPosCpo := aScan(oGetPV:aGets, {|x| "C5_CLIENTE" $ x })
			nPos1   := Val(SubStr(oGetPV:aGets[nPosCpo],1,2))
			nPos2   := Val(SubStr(oGetPV:aGets[nPosCpo],3,1))
			If nPos2 = 2
				nPos2 := 3
			Endif
			
			cText	:= aTela[nPos1][nPos2]	
		Else 
			cText := oGetPV:GetText("C5_CLIENTE")		
		Endif
		
		If M->C5_Tipo $ "DB"
			cText := STRTRAN(cText,AllTrim(RetTitle("C5_CLIENTE")),AllTrim(RetTitle("C7_FORNECE")))
		Else
			cText := STRTRAN(cText,AllTrim(RetTitle("C7_FORNECE")),AllTrim(RetTitle("C5_CLIENTE")))
		EndIf
		
		If IsEnchOld
			oGetPV:aTela[nPos1][nPos2]:= cText
		Else 
	    	oGetPV:SetText("C5_CLIENTE", cText )
    	Endif
    
	Endif
EndIf

If lLimpa
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Array criado para trocar o F3 do cliente quando tipo ³
	//³ do pedido de venda for D ou B                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IF ( cVar$"DB" )
		aTrocaF3 := {{"C5_CLIENTE","FOR"}}
	Else
		aTrocaF3 = {}
	EndIf
	
	M->C5_CLIENTE :=  Space(Len(M->C5_CLIENTE))
	nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_CLIENTE" } )
	If nEndereco > 0
		aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := Space(Len(M->C5_CLIENTE))
	EndIf
	
	M->C5_LOJACLI :=Space(Len(M->C5_LOJACLI))
	nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_LOJACLI" } )
	If nEndereco > 0
		aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := Space(Len(M->C5_LOJACLI))
	EndIf
	For nCntFor := 1 to Len(aCols)
		If nPIPIDev <> 0
			aCols[nCntFor][nPIpiDev] := 0.00
		EndIf
	Next nCntFor
EndIf
lRefresh := .T.
RestArea(aArea)
Return .T.


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a410Trava  ³ Autor ³ Rosane L. Chene       ³ Data ³ 05.12.95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Tratamento de DEAD-LOCK - Arquivo SB2                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MatA410                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410Trava()
Local ni     := 0
Local aTrava := {}
Local nPosPrd:= 0
Local nPosLoc:= 0
Local lTrava := .T.

If ( __TTSInUse )
	nPosPrd:=aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRODUTO"})
	nPosLoc:=aScan(aHeader,{|x| AllTrim(x[2]) == "C6_LOCAL"})
	
	For ni := 1 to Len(aCols)
		IF ( Len(aCols[nI]) > Len(aHeader) ) .And. !(aCols[ni][Len(aCols[ni])])
			AADD(aTrava,aCols[ni,nPosPrd]+aCols[ni,nPosLoc])
		EndIf
	Next
	If M->C5_TIPO $ "DB"
		lTrava := MultLock("SB2",aTrava,1) .And.;
			MultLock("SA2",{M->C5_CLIENTE+M->C5_LOJACLI},1) .And.;
			MultLock("SA2",{M->C5_CLIENTE+M->C5_LOJAENT},1)
	Else
		lTrava := MultLock("SB2",aTrava,1) .And.;
			MultLock("SA1",{M->C5_CLIENTE+M->C5_LOJACLI},1) .And.;
			MultLock("SA1",{M->C5_CLIENTE+M->C5_LOJAENT},1)
	EndIf
	If ( !lTrava )
		If !InTransact()
			SB2->(MsRUnLock())
			SA1->(MsRUnLock())
			SA2->(MsRUnLock())
		EndIf
	EndIf
	Return ( lTrava )
Else
	Return(lTrava)
EndIf
/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ A410Quant³ Autor ³ Claudinei M. Benzi    ³ Data ³ 10.01.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Inicializa Seg. Unidade de Medida pelo Fator de Conversao  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MatA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410Quant()
Local nSegUM	:= &(ReadVar())
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPItem	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPQtdVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nQtdConv  := 0
Local lGrade    := MaGrade()
Local cProduto  := ""
Local cItem	    := ""
Local lRet	 	:= .T.

If ( nSegUm != cCampo )
	cProduto := aCols[n][nPProduto]
	cItem		:= aCols[n][nPItem]
	If ( lGrade )
		MatGrdPrrf(@cProduto)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Posiciona no Item atual do Pedido de Venda                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC6")
	dbSetOrder(1)
	MsSeek(xFilial("SC6")+M->C5_NUM+cItem+cProduto)
	
	nQtdConv  := Round( ConvUm(cProduto,aCols[n,nPQtdVen],nSegUm,1), TamSX3( "C6_QTDVEN" )[2] )
	lRet := A410MultT("C6_QTDVEN",nQtdConv)
	
	If lRet
		aCols[n,nPQtdVen] := nQtdConv
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Nao aceita qtde. inferior `a qtde ja' faturada               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SC6->(dbEval({|| lRet := If(aCols[n,nPQtdVen] < SC6->C6_QTDENT,.F.,lRet)},Nil,;
			{|| 	xFilial("SC6")	==	SC6->C6_FILIAL 	.And.;
			M->C5_NUM		==	SC6->C6_NUM			.And.;
			cItem				== SC6->C6_ITEM		.And.;
			cProduto			== SC6->C6_PRODUTO },Nil,Nil,.T.))
	
		If ( !lRet )
			Help(" ",1,"A410PEDJFT")
		EndIf
    
	Endif

Else
	lRet := .T.
EndIf
Return(lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410SegUm ³ Autor ³ Eduardo Riera         ³ Data ³ 26.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Convercao da Primeira para a segunda unidade de medida      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Logico                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExPL1: Indica se deve ser realizado o  recalculo            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410SegUm(lRecalc)
Local nPrimUm	:= 0
Local nPProduto:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPQtdVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPQtdVen2:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_UNSVEN"})
lRecalc := IIF(lRecalc==NIL,.F.,lRecalc)
If ( Altera .Or. Inclui )
	If ( lRecalc )
		nPrimUm := aCols[n][nPQtdVen]
	Else
		nPrimUm := &(ReadVar())
	EndIf
	If ( nPQtdVen2 > 0 )
		aCols[n,nPQtdVen2] := ConvUm(aCols[n,nPProduto],nPrimUm,aCols[n,nPQtdVen2],2)
	EndIf
EndIf
Return .T.

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a410IPIDEV³  Autor³ Claudinei M. Benzi    ³ Data ³ 10.01.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Quando o pedido de venda for devolucao o usuario pode      ³±±
±±³          ³ digitar o valor do ipi                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410DevIpi()
If M->C5_TIPO != "D"
	Help(" ",1,"A410DevIpi")
	Return .F.
EndIf
Return .T.

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a410Refr  ³  Autor³ Wilson Godoy          ³ Data ³ 10.01.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Quando acionada a getdados da grade, ele da o refresh para ³±±
±±³          ³ voltar todos os objetos da getdados principal              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cCampo -> indica quando e' C6_QTDVEN ou C6_QTDLIB          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410Refr(cCampo)
Local ni,nCol,cItemGrade:=""

If ( MaGrade() )
	For ni:= 1 to Len(aHeader)
		IF Alltrim(aHeader[ni,2]) == cCampo
			nCol := ni
		ElseIf Alltrim(aHeader[ni,2]) == "C6_GRADE"
			If acols[n][ni] == "S"
				cItemGrade := "S"
			EndIf
		EndIf
	Next
EndIf

Return .t.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410LOTCTL³ Autor ³Rodrigo de A. Sartorio ³ Data ³03.03.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida o Lote de Controle digitado pelo usuario             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Logico                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410LotCTL()

Local aArea		:= GetArea()
Local aAreaF4	:= SF4->(GetArea())
Local aAreaSB8	:= {}
Local nPItem	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPLocal	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPLoteCtl := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPNumLote := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nPDtValid := aScan(aHeader,{|x| AllTrim(x[2])=="C6_DTVALID"})
Local nPQtdLib	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB"})
Local nPQtdVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPTes		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPPrcVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPPrcLis  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
Local nPDescon	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_DESCONT"})
Local nVlrTabela:= 0
Local cProduto	:= aCols[n][nPProduto]
Local cLocal	:= aCols[n][nPLocal]
Local cNumLote	:= ""
Local cLoteCtl  := ""
Local cCliTab  := ""
Local cLojaTab := ""
Local nQtdLib	:= aCols[n,nPQtdLib]
Local lRetorna  := .T.
Local nSaldo	:= 0
Local lGrade 	:= MaGrade()
Local lTabCli     := (SuperGetMv("MV_TABCENT",.F.,"2") == "1")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Obtem conteudo do Lote e do Sub-Lote                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If UPPER(ALLTRIM(Readvar())) == "M->C6_LOTECTL"
	cNumLote	:= aCols[n][nPNumLote]
	cLoteCtl := &(ReadVar())
ElseIf UPPER(ALLTRIM(Readvar())) == "M->C6_NUMLOTE"
	cNumLote	:= &(ReadVar())
	cLoteCtl := aCols[n][nPLoteCtl]
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se Movimenta Estoque                                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SF4")
dbSetOrder(1)
If ( MsSeek(xFilial("SF4")+aCols[n][nPTes]) .And. SF4->F4_ESTOQUE=="N" )
	If UPPER(ALLTRIM(Readvar())) == "M->C6_LOTECTL" .And. !Empty(cLoteCtl+aCols[n][nPNumLote])
		Help(" ",1,"A410TEEST")
		lRetorna := .F.	
	ElseIf UPPER(ALLTRIM(Readvar())) == "M->C6_NUMLOTE" .And. !Empty(aCols[n][nPLoteCtl]+cNumLote)
		Help(" ",1,"A410TEEST")
		lRetorna := .F.
	EndIf	
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Produto eh uma referencia                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If  ( lRetorna .And. lGrade )
	If ( MatGrdPrrf(cProduto) )
		Help(" ",1,"A410NGRADE")
		lRetorna := .F.
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Produto possui rastreabilidade                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorna .And. !Rastro(cProduto) )
	If (!Empty(&(ReadVar())))
		Help( " ", 1, "NAORASTRO" )
		aCols[n,nPNumLote] 	:= CriaVar( "C6_NUMLOTE" )
		aCols[n,nPLoteCtl]	:= CriaVar( "C6_LOTECTL" )
		aCols[n,nPDtValid]	:= CriaVar( "C6_DTVALID" )
		lRetorna := .F.
	Else
		aCols[n,nPNumLote]	:= CriaVar( "C6_NUMLOTE" )
		aCols[n,nPLoteCtl]	:= CriaVar( "C6_LOTECTL" )
		aCols[n,nPDtValid]	:= CriaVar( "C6_DTVALID" )
	EndIf
Else
	If ( lRetorna ) .And. (!Empty(ReadVar()))
		nSaldo := SldAtuEst(cProduto,cLocal,nQtdLib,cLoteCtl)
		
		If ALTERA .And. AtIsRotina("MATA410")
			dbSelectArea("SC6")
			dbSetOrder(1)
			MsSeek(xFilial("SC6")+M->C5_NUM+aCols[n,nPItem]+aCols[n,nPProduto])
			nSaldo += SC6->C6_QTDEMP
		Endif
		
		If ( nQtdLib > nSaldo )
			Help(" ",1,"A440ACILOT")
			lRetorna  := .F.
		EndIf
		
		If lRetorna
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Caso lote exista, obtem a data de validade                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aAreaSB8 := GetArea()
			SB8->(dbSetOrder(3))
			If SB8->(dbSeek(xFilial("SB8")+cProduto+cLocal+cLoteCtl+IF(Rastro(cProduto,"S"),cNumLote,"")))
				If aCols[n, nPDtValid] # SB8->B8_DTVALID 
					If Type('lMSErroAuto') <> 'L'
						Help(" ",1,"A240DTVALI")
					EndIf	
					M->C6_DTVALID		:= SB8->B8_DTVALID
					aCols[n,nPDtValid]	:= SB8->B8_DTVALID						
				EndIf			
			Endif		
			RestArea(aAreaSB8)
		EndIf
	EndIf
EndIf

If lRetorna                  

	If lTabCli
		Do Case
			Case !Empty(M->C5_LOJAENT) .And. !Empty(M->C5_CLIENT)
				cCliTab   := M->C5_CLIENT
				cLojaTab  := M->C5_LOJAENT
			Case Empty(M->C5_CLIENT) 
				cCliTab   := M->C5_CLIENTE
				cLojaTab  := M->C5_LOJAENT
			OtherWise
				cCliTab   := M->C5_CLIENTE
				cLojaTab  := M->C5_LOJACLI
		EndCase					
	Else
		cCliTab   := M->C5_CLIENTE
		cLojaTab  := M->C5_LOJACLI
	Endif

	nVlrTabela := A410Tabela(cProduto,M->C5_TABELA,n,aCols[n][nPQtdVen],cCliTab,cLojaTab,cLoteCtl,cNumLote,.T.)	
	If nVlrTabela <> 0
		aCols[n][nPPrcVen] := A410Arred(FtDescCab(nVlrTabela,{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4})*(1-(aCols[n][nPDescon]/100)),"C6_PRCVEN")
		aCols[n][nPPrcLis] := nVlrTabela 
		A410MultT("C6_PRCVEN",aCols[n][nPPrcVen])
	Endif
Endif	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a Entrada da Rotina                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaF4)
RestArea(aArea)
Return(lRetorna)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A410FldOk ³  Autor³ Ben-Hur M Castilho    ³ Data ³ 12/12/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Impede Alteracoes dos Campos Durante a Visualizacao         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function A410FldOk(nOpc)
Local lBack   := .T.
Local cMenVar := &(ReadVar())
Default nOpc := 1

If nOpc == 1
	If !(cMenVar == cCampo)
		Help( " ",1,"A410VISUAL" )
		lBack := .F.
	EndIf
ElseIf Type("lShowOpc") == "L"
	lShowOpc := .T.
EndIf

Return( lBack )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410Blq   ³ Autor ³ Eduardo Riera         ³ Data ³ 24.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida item com bloqueio por (R) Residuo ou (S) Manual      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Logico ( Permite alteracao do Status do Bloqueio )   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function A410Blq()

Local lRetorno	:= .T.
Local nPosBlq	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_BLQ"})
If ( nPosBlq > 0 )
	If ( aCols[n][nPosBlq]$"R #S " .And. SuperGetMv("MV_RSDOFAT")=="N" )
		Help(" ",1,"A410ELIM")
		lRetorno := .F.
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Pedido foi Totalmente Faturado                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorno )
	lRetorno := A410PedFat()
EndIf
If Type("lShowOpc") == "L"
	lShowOpc := .T.
EndIf
Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410PedFat³ Autor ³ Eduardo Riera         ³ Data ³ 24.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se um Pedido Foi Totalmente Faturado              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: Indica se o Pedido foi faturado                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function A410PedFat(cProduto,lVldGrade,nQuantDig,lQtdVen)

Local aArea 	:= GetArea()
Local lRetorno	:= .T.
Local nPItem	:= 0
Local nPProduto	:= 0
Local cItem		:= "" 
Local nTes      := 0
Local cTes      := ""

DEFAULT cProduto  := ""
DEFAULT lVldGrade := .F.
DEFAULT nQuantDig := 0 
DEFAULT lQtdVen	  := .F.	

If (( Altera .And. SuperGetMv("MV_ALTPED")=="N" ) .And. !(SC5->C5_TIPO $ "CIP"))  .And. !(!Empty(SC5->C5_PEDEXP) .And. SuperGetMv("MV_EECFAT") .And. FindFunction("AVINTEMB") .And. AvIntEmb())
	If !lVldGrade
		nPItem		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
		nPProduto	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
		nTes 		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
		cItem		:= aCols[n][nPItem]
		cProduto	:= aCols[n][nPProduto]
		cTes 		:= aCols[n][nTes]
	Else
		nPItem 		:= aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_ITEM"})
		nPProduto 	:= aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_PRODUTO"})
		nTes 		:= aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_TES"})
		cItem		:= oGrade:aColsAux[oGrade:nPosLinO][nPItem]
		cTes 		:= oGrade:aColsAux[oGrade:nPosLinO][nTes]
	EndIf  
	
    dbSelectArea("SF4")
	dbSetOrder(1)
	dbSeek(xFilial("SF4")+cTes)
		
 	dbSelectArea("SC6")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SC6")+M->C5_NUM+cItem+cProduto) )
		If (lVldGrade) .Or. (!lVldGrade .And. SC6->C6_GRADE <> "S" )
			If ( SC6->C6_QTDENT >= SC6->C6_QTDVEN .And. SF4->F4_QTDZERO <> "1" ) .Or.;
  		 		(SC6->C6_QTDENT == SC6->C6_QTDVEN .AND. SF4->F4_QTDZERO == "1" .AND. !Empty(SC6->C6_NOTA))
				Help(" ",1,"A410PRODFA")
				lRetorno := .F.
			EndIf
			If (lRetorno) .And. (lVldGrade) .And. (lQtdVen) .And. (nQuantDig < SC6->C6_QTDENT)
				Help(" ",1,"A410PEDJFT")	
				lRetorno := .F.			
			EndIf	
		EndIf
	EndIf
EndIf

RestArea(aArea)

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410ReCalc³ Autor ³ Eduardo Riera         ³ Data ³ 19.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Esta funcao corrige os dados entre o cabecalho e a GetDados ³±±
±±³          ³avaliando Desconto, CFOP , Tipo do Pedido e Tabela de Preco ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Sempre .T.                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpL1: Indica se o recalculo eh somente do desconto de cabe ³±±
±±³          ³calho.                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³12/11/99  ³ Alves         ³ Quando estiver sendo executada a partir de ³±±
±±³          ³               ³ uma rotina automatica nao deixar sobrescre-³±±
±±³          ³               ³ ver o aCols                                ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410ReCalc(lDescCab)

Local aArea		:= GetArea()
Local aAreaSX3	:= SX3->(GetArea())
Local aCont    := {}
Local aStruSC6 := {}     
Local aDadosCfo := {}
Local cEstado   :=SuperGetMv("MV_ESTADO")
Local cAliasQry:= ""
Local cAltPreco:= GetNewPar( "MV_ALTPREC", "T" )
Local cCliTab  := ""
Local cLojaTab := ""
Local lAltPreco:= .F.
Local nDesc		:= 0
Local ni		:= 0
Local nTmp	:=	1
Local nx		:= 0
Local nCntFor 	:= 0
Local nPCFOP 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_CF" })
Local nPTes		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPProd	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPPrUnit	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
Local nPPrcVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPDescon	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_DESCONT"})
Local nPVlDesc	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALDESC"})
Local nPQtdVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPValor	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPLoteCtl	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPNumLote	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nPItem	:= GDFieldPos( "C6_ITEM" )
Local nPGrdQtd	:= 0
Local nPGrdPrc	:= 0
Local nPGrdTot	:= 0
Local nPGrdVDe	:= 0
Local nPGrdPrU	:= 0
Local nVlrTabela:= 0
Local nScan    := 0
Local nLinha	:= 0
Local nColuna	:= 0
Local lGrade	:= MaGrade()
Local lGradeReal:= .F.
Local cProduto	:= ""
Local lCondPg   := (ReadVar()=="M->C5_CONDPAG")
Local lCondTab  := .F. 							// Verifica se a condicao escolhida esta na tabela de precos
Local nDescont	:= 0

Local lDescEsca	:=	GetNewPar("MV_DESCLOT",.F.)
Local lTabCli   	:= (SuperGetMv("MV_TABCENT",.F.,"2") == "1")
Local lGrdMult  	:= FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")

// Indica se o preco unitario sera arredondado em 0 casas decimais ou nao. Se .T. respeita MV_CENT (Apenas Chile).
Local lPrcDec   	:= SuperGetMV("MV_PRCDEC",,.F.)
Local lMsMatGrade	:= FindFunction("MsMatGrade") // Se verdadeiro, existe a funcao 
l410Auto := If (Type("l410Auto") == "U", .F., l410Auto)
DEFAULT lDescCab := GetNewPar("MV_PVRECAL",.F.) //Desabilita o recalculo automatico do Pedido de Venda.
If Type("lShowOpc") == "L"
	lShowOpc := .T.
EndIf

If !lDescCab
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Zera os descontos caso o Pedido seja de Complemento.          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( At(M->C5_TIPO,"CIP") != 0 )
		M->C5_DESC1 := M->C5_DESC2 := M->C5_DESC3 := M->C5_DESC4 := 0
		For nCntFor := 1 To 4
			nDesc := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_DESC"+Str(nCntFor,1,0)+"  " } )
			If nDesc != 0
				ni := Val(Subs(aGets[nDesc],1,2))


				nx := Val(Subs(aGets[nDesc],3,1))*2
				If Val(aTela[ni][nx]) != 0
					dbSelectArea("SX3")
					dbSetOrder(2)
					MsSeek("C5_DESC"+Str(nCntFor,1,0)+"  ")
					aTela[ni][nx] := Str(0,SX3->X3_DECIMAL+3,SX3->X3_DECIMAL)
				EndIf
			EndIf
		Next nCntFor
	EndIf
EndIf
If ( INCLUI .Or. ALTERA )


	dbSelectArea(IIF(M->C5_TIPO$"DB","SA2","SA1"))
	dbSetOrder(1)
	MsSeek(xFilial()+IIf(!Empty(M->C5_CLIENT),M->C5_CLIENT,M->C5_CLIENTE)+M->C5_LOJAENT)
	
	For nCntFor := 1 to Len(aCols)
		dbSelectArea("SF4")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SF4")+aCols[nCntFor][nPTes],.F.) )
			If At(M->C5_TIPO,"DB") == 0
				
			 	Aadd(aDadosCfo,{"OPERNF","S"})
			 	Aadd(aDadosCfo,{"TPCLIFOR",M->C5_TIPOCLI})
			 	Aadd(aDadosCfo,{"UFDEST",SA1->A1_EST})
				Aadd(aDadosCfo,{"INSCR" ,SA1->A1_INSCR})
				If SA1->(FieldPos("A1_CONTRIB")) > 0 		 						
					Aadd(aDadosCfo,{"CONTR", SA1->A1_CONTRIB})
				EndIf	
				aCols[nCntFor][nPCFOP] := MaFisCfo(,SF4->F4_CF,aDadosCfo)
	
			Else
			 	Aadd(aDadosCfo,{"OPERNF","S"})
			 	Aadd(aDadosCfo,{"TPCLIFOR",M->C5_TIPOCLI})					
				Aadd(aDadosCfo,{"UFDEST",SA2->A2_EST})	 
				Aadd(aDadosCfo,{"INSCR" ,SA2->A2_INSCR})
				aCols[nCntFor][nPCFOP] := MaFisCfo(,SF4->F4_CF,aDadosCfo)
			EndIf
		EndIf
	Next nCntFor
EndIf

If cAltPreco <> "T"
	
	aCont := {}
	
	#IFDEF TOP
		
		cAliasQry := GetNextAlias()
		
		cQuery := "SELECT C6_NUM, C6_ITEM, C6_QTDENT, C6_QTDEMP FROM " + SC6->( RetSqlName( "SC6" ) ) + " "
		cQuery += "WHERE "
		cQuery += "C6_FILIAL='" + xFilial("SC6") + "' AND "
		cQuery += "C6_NUM='" + M->C5_NUM      + "' AND "
		cQuery += "D_E_L_E_T_=' '"
		
		cQuery := ChangeQuery( cQuery )
		
		dbUseArea( .T., "TOPCONN", TcGenQry( ,,cQuery ), cAliasQry, .F., .T. )
		
		aStruSC6 := SC6->( dbStruct())
		
		If !Empty( nScan := AScan( aStruSC6, { |x| x[1]=="C6_QTDENT" } ) )
			TcSetField( cAliasQry, aStruSC6[ nScan, 1 ], aStruSC6[ nScan, 2 ], 	aStruSC6[ nScan, 3 ], 	aStruSC6[ nScan, 4 ] )
		EndIf			
		
		If !Empty( nScan := AScan( aStruSC6, { |x| x[1]=="C6_QTDEMP" } ) )
			TcSetField( cAliasQry, aStruSC6[ nScan, 1 ], aStruSC6[ nScan, 2 ], 	aStruSC6[ nScan, 3 ], 	aStruSC6[ nScan, 4 ] )
		EndIf			
		
		While !Eof()
			AAdd( aCont, { C6_NUM + C6_ITEM, C6_QTDENT, C6_QTDEMP  } )
			dbSkip()  					
		EndDo
		
		dbCloseArea()
		
		dbSelectArea( "SC6" )
		
	#ELSE
		
		SC6->( dbSetOrder( 1 ) )
		If SC6->( dbSeek( xFilial( "SC6" ) + M->C5_NUM ) )
			While !SC6->( Eof() ) .And. xFilial( "SC6" ) + M->C5_NUM == SC6->C6_FILIAL + SC6->C6_NUM
				AAdd( aCont, { SC6->C6_NUM + SC6->C6_ITEM, SC6->C6_QTDENT, SC6->C6_QTDEMP  } )
				SC6->( dbSkip() )          	
			EndDo 				
		EndIf
		
	#ENDIF 	 	
	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Corrige o preco de tabela e preco unitario p/ tab.alterada    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If (M->C5_TIPO == "N" .And. !("M->C5_CLIENT"==Alltrim(ReadVar()).Or."M->C5_LOJAENT"==ReadVar()) ) .Or.;
	(M->C5_TIPO == "N" .And. lTabCli)
    
	If lCondPg
		dbSelectArea("DA0")
		dbSetOrder(1) 
		If MsSeek(xFilial("DA0")+M->C5_TABELA)
			lCondTab := DA0_CONDPG == M->C5_CONDPAG
		Endif
	Endif

	nTmp	:=	n
	For nCntFor := 1 to Len(aCols)
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se deve atualizar os precos conforme a regra         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cAltPreco == "T"	
			lAltPreco := .T. 		
		ElseIf  cAltPreco $ "LF"
			lAltPreco := .T. 				
			
			If !Empty( nScan := AScan( aCont, { |x| x[1] == M->C5_NUM + aCols[nCntFor,nPItem] } ) )
				If cAltPreco == "L"
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Nao permite itens liberados                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					lAltPreco := Empty( aCont[ nScan, 2 ] ) .And. Empty( aCont[ nScan, 3 ] )
				ElseIf cAltPreco == "F"
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Nao permite itens faturados                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					lAltPreco := Empty( aCont[ nScan, 2 ] )
				EndIf
			EndIf			
		Else
			lAltPreco := .F.
		EndIf 	
		
		If lAltPreco
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se eh grade para calcular o valor total por item da grade³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cProduto := aCols[nCntFor][nPProd]
			If lGrade .And.	MatGrdPrrf(@cProduto)
				lGradeReal := .T.
			Else
				lGradeReal := .F.
			Endif
						
			If lTabCli
				Do Case
					Case !Empty(M->C5_LOJAENT) .And. !Empty(M->C5_CLIENT)
						cCliTab   := M->C5_CLIENT
						cLojaTab  := M->C5_LOJAENT
					Case Empty(M->C5_CLIENT) 
						cCliTab   := M->C5_CLIENTE
						cLojaTab  := M->C5_LOJAENT
					OtherWise
						cCliTab   := M->C5_CLIENTE
						cLojaTab  := M->C5_LOJACLI
				EndCase					
			Else
				cCliTab   := M->C5_CLIENTE
				cLojaTab  := M->C5_LOJACLI
			Endif
			
			If !lDescCab			
                If !(lGrdMult .And. lMsMatGrade .And. IsAtNewGrd() .And. lGrade .And. lGradeReal)
					nVlrTabela := A410Tabela(	aCols[nCntFor][nPProd],;
												M->C5_TABELA,;
												nCntFor,;
												aCols[nCntFor][nPQtdVen],;
												cCliTab,;
												cLojaTab,;
												If(nPLoteCtl>0,aCols[nCntFor][nPLoteCtl],""),;
												If(nPNumLote>0,aCols[nCntFor][nPNumLote],"")	)
				EndIf
			Else
				nVlrTabela := aCols[nCntFor][nPPrUnit]
			EndIf
			
			If !(lGrdMult .And. lMsMatGrade .And. IsAtNewGrd() .And. lGrade .And. lGradeReal)
				   
			   	If lCondPg  
					n	:=	nCntFor
					If ( nPPrcVen > 0 ) 
		
						nDescont := FtRegraDesc(1)
					  				
						If(lCondTab .And. aPesqDA1(M->C5_TABELA,aCols[nCntFor][nPProd])) .Or. M->C5_DESC4 > 0 .Or. nDescont >0
							aCols[nCntFor][nPPrcVen] := FtDescCab(nVlrTabela,{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4},If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
							aCols[nCntFor][nPValor]  := a410Arred( aCols[nCntFor][nPQtdVen]*aCols[nCntFor][nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
							aCols[nCntFor,nPDescon]  := 0
							aCols[nCntFor,nPVlDesc]  := 0
						
							If ( nPPrUnit > 0 )
							    aCols[nCntFor][nPPrUnit] := nVlrTabela
							EndIf
								
							aCols[nCntFor,nPDescon] := nDescont
							
							If ( nPDescon > 0 .And. nPVlDesc > 0 .And. nPPrcVen > 0 .And. nPValor > 0 .And. nPPrUnit>0 )
								aCols[nCntFor][nPPrcVen] := FtDescItem(If(aCols[nCntFor][nPPrUnit] == 0, aCols[nCntFor][nPPrUnit],@aCols[nCntFor][nPPrcVen]),;				
									@aCols[nCntFor,nPPrcVen],;
									aCols[nCntFor,nPQtdVen],;
									@aCols[nCntFor,nPValor],;
									@aCols[nCntFor,nPDescon],;
									@aCols[nCntFor,nPVlDesc],;
									@aCols[nCntFor,nPVlDesc],1,,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
							EndIf
						EndIf					
					EndIf					
				Else					
					If ( nPPrcVen > 0 ) 
						aCols[nCntFor][nPPrcVen] := FtDescCab(nVlrTabela,{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4},If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
					EndIf
					If ( nPPrUnit > 0 )
						aCols[nCntFor][nPPrUnit] := nVlrTabela
					EndIf

					n	:=	nCntFor
					nDescont := FtRegraDesc(1)
	
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Tratamento efetuado para não zerar o desconto do item, para quando houver uma regra de desconto, e ³
					//³informar um novo desconto de cabeçalho caso chamado do C5_DESC"?"	  														  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !"C5_DESC" $ ReadVar() 
						aCols[nCntFor,nPDescon] := nDescont
					Else
						If nDescont > 0
							aCols[nCntFor,nPDescon] := nDescont		
						EndIf	
					EndIf
						
					If ( nPDescon > 0 .And. nPVlDesc > 0 .And. nPPrcVen > 0 .And. nPValor > 0 .And. nPPrUnit>0 )
						aCols[nCntFor][nPPrcVen] := FtDescItem(If(aCols[nCntFor][nPPrUnit] == 0, aCols[nCntFor][nPPrUnit],@aCols[nCntFor][nPPrcVen]),;				
							@aCols[nCntFor,nPPrcVen],;
							aCols[nCntFor,nPQtdVen],;
							@aCols[nCntFor,nPValor],;
							@aCols[nCntFor,nPDescon],;
							@aCols[nCntFor,nPVlDesc],;
							@aCols[nCntFor,nPVlDesc],1,,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
					EndIf		
				EndIf
			EndIf
			
			If lMsMatGrade .And. IsAtNewGrd()
			   	If lGrade .And. lGradeReal .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade) > 0
					If !lGrdMult
			   			aCols[nCntFor,nPValor] := 0
			   			nPGrdQtd := oGrade:GetFieldGrdPos("C6_QTDVEN")
						For nLinha := 1 To Len(oGrade:aColsGrade[nCntFor])
							For nColuna := 2 To Len(oGrade:aHeadGrade[nCntFor])
								If ( oGrade:aColsGrade[nCntFor,nLinha,nColuna][nPGrdQtd] <> 0 )  
									aCols[nCntFor,nPValor]  += a410Arred( oGrade:aColsGrade[nCntFor,nLinha,nColuna][nPGrdQtd]*aCols[nCntFor,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
								Endif	
							Next nColuna
						Next nLinha		
					Else
						n	:=	nCntFor
			   			aCols[n,nPValor] := 0
			   			nPGrdQtd := oGrade:GetFieldGrdPos("C6_QTDVEN")
			   			nPGrdPrc := oGrade:GetFieldGrdPos("C6_PRCVEN")
			   			nPGrdTot := oGrade:GetFieldGrdPos("C6_VALOR")
			   			nPGrdVDe := oGrade:GetFieldGrdPos("C6_VALDESC")
			   			nPGrdPrU := oGrade:GetFieldGrdPos("C6_PRUNIT")
						For nLinha := 1 To Len(oGrade:aColsGrade[n])
							For nColuna := 2 To Len(oGrade:aHeadGrade[n])
								If ( oGrade:aColsGrade[n,nLinha,nColuna,nPGrdQtd] <> 0 )  
								
									nVlrTabela := A410Tabela(	oGrade:GetNameProd(,nLinha,nColuna),;
																M->C5_TABELA,;
																nCntFor,;
																oGrade:aColsFieldByName("C6_QTDVEN",,nLinha,nColuna),;
																cCliTab,;
																cLojaTab,;
																,;
																,;
																,;
																,;
																,;
																oGrade:aColsGrade[n,nLinha,nColuna,oGrade:GetFieldGrdPos("C6_OPC")])
										
									If nVlrTabela <> 0
										oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrU] := nVlrTabela
										oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc] := FtDescCab(nVlrTabela,{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4},If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
										oGrade:aColsGrade[n,nLinha,nColuna,nPGrdVDe] := A410Arred((nVlrTabela - oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc])*oGrade:aColsGrade[n,nLinha,nColuna,nPGrdQtd],"C6_VALOR")
										oGrade:aColsGrade[n,nLinha,nColuna,nPGrdTot] := A410Arred(oGrade:aColsGrade[n,nLinha,nColuna,nPGrdQtd] * oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc],"C6_VALOR")
									EndIf										
								Endif	
							Next nColuna
						Next nLinha		
						
						aCols[n,nPPrcVen] := oGrade:SomaGrade("C6_PRCVEN",n)			
						aCols[n,nPDescon] := FtRegraDesc(1)
						
						If ( nPDescon > 0 .And. nPVlDesc > 0 .And. nPPrcVen > 0 .And. nPValor > 0 .And. nPPrUnit>0 )
							For nLinha := 1 To Len(oGrade:aColsGrade[n])
								For nColuna := 2 To Len(oGrade:aHeadGrade[n])		
									oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc] := FtDescItem(0,;				
										@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc],;
										oGrade:aColsGrade[n,nLinha,nColuna,nPGrdQtd],;
										@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdTot],;
										@aCols[nCntFor,nPDescon],;
										@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdVDe],;
										0,1,,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
								Next nColuna
							Next nLinha
						EndIf
						aCols[n,nPPrcVen] := oGrade:SomaGrade("C6_PRCVEN",n)
						aCols[n,nPValor] := oGrade:SomaGrade("C6_VALOR",n)
						aCols[n,nPVlDesc] := oGrade:SomaGrade("C6_VALDESC",n)
					EndIf
				EndIf
			Else
			   	If lGrade .And. lGradeReal .And. Len(aColsGrade) > 0
		   			aCols[nCntFor,nPValor] := 0
					For nLinha := 1 To Len(aColsGrade[nCntFor])
						For nColuna := 2 To Len(aHeadGrade[nCntFor])
							If ( aColsGrade[nCntFor][nLinha][nColuna][1] <> 0 )
								aCols[nCntFor,nPValor]  += a410Arred(aColsGrade[nCntFor][nLinha][nColuna][1]*aCols[nCntFor,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
							Endif	
						Next nColuna
					Next nLinha		
				EndIf 
			EndIf
					
		EndIf 	
		
	Next nCntFor
	n	:=	nTmp
EndIf

If Type('oGetDad:oBrowse')<>"U"
	oGetDad:oBrowse:Refresh()
	Ma410Rodap()
Endif


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Retorna o estado de entrada da rotina                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaSX3)
RestArea(aArea)

Return (.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³A410Titulo³ Autor ³ Jose Lucas		 	³ Data ³ 25/08/98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica o Tipo do titulo informado (Argentina...).		  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A410Titulo() 							 				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATA410													  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Titulo(cCampo)
Local lRet := .T.
Local cSavAreaCur := Alias()

If cCampo == NIL
	cCampo := &(ReadVar())
EndIf

dbSelectArea("SX5")
dbSetOrder(1)
If ! MsSeek( xFilial("SX5")+"05"+cCampo )
	lRet := .F.
Else
	If M->C5_TIPO == "D"
		If Empty( cCampo )
			lRet := .F.
		EndIf
	EndIf
EndIf
If ! lRet
	Help(" ",1,"C5_TIPOTIT")
EndIf
dbSelectArea( cSavAreaCur )
Return( lRet )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410Tipo9 ³ Autor ³ Eduardo Riera         ³ Data ³ 25.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao da Condicao de Pagamento Tipo 9                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Logico                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Tipo9()

Local aArea     := GetArea()
Local aAreaSE4  := SE4->(GetArea())

Local cParcela  := "123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ0"
Local cMv1Dup   := GetMV( "MV_1DUP" )
Local dParc     := Ctod("")
Local nParc     := 0
Local nAux      := 0
Local nTotLib9  := 0
Local nTot9     := 0
Local nTotal    := 0
Local nQtdLib   := 0
Local nQtdVen   := 0
Local nValor    := 0
Local nOrder    := IndexOrd() 
Local nY        := 0 
Local nX        := 0     
Local nMaxTipo9 := 26     
Local nParcelas := SuperGetMv("MV_NUMPARC")

Local lRet      :=.T.
Local lIPI      := (GetMV("MV_IPITP9") == "S")
Local lMt410Parc:= Existblock("MT410PC")
Local lParc     := .T.
Local lGCT      := !Empty(M->C5_MDNUMED)

Local cChave 		:= ""
Local cChave1		:= ""
Local aAreaSX3		:= SX3->(GetArea())

If lGCT
   	Return(.T.)
EndIf
If nParcelas > 4
	cChave := "C5_DATA"+Subs(cParcela,nParcelas,1)
	cChave1:= "C5_PARC"+Subs(cParcela,nParcelas,1)
	aAreaSX3 := SX3->(GetArea())
	
	DbSelectArea("SX3")
	DbSetOrder(2)
	If !DbSeek(cChave) .or. !DbSeek(cChave1)
		Help(" ",1,"TMKTIP905") //"A quantidade de parcelas nao esta compativel. Verificar junto ao administrador do sistema relacao entre parametro MV_NUMPARC e dicionario de dados"
		Return(.F.)        
	EndIf
	
	Restarea(aAreaSX3)
	
EndIf


If ( ExistBlock("M410TIP9") )
	lRet := ExecBlock("M410TIP9",.F.,.F.)
Else
	
	For nX := 1 to Len(aCols)
		If !aCols[nx][Len(aCols[nx])]
			For ny := 1 to Len(aHeader)
				If Trim(aHeader[ny][2]) == "C6_QTDVEN"
					nQtdVen := aCols[nx][ny]
				ElseIf Trim(aHeader[ny][2]) == "C6_QTDLIB"
					nQtdLib := aCols[nx][ny]
				ElseIf Trim(aHeader[ny][2]) == "C6_VALOR"
					nValor := aCols[nx][ny]
				EndIf
			Next ny
			
			nTotal   +=  nValor
			nTotLib9 +=  nQtdLib
			nTot9    +=  nQtdVen
		EndIf
	Next nX
	
	nTotal := nTotal + M->C5_FRETE + M->C5_DESPESA + M->C5_SEGURO + M->C5_FRETAUT
	
	// permite que o numero de parcela possa se manipulado por customização, independente do parametro
	If lMt410Parc
		nParcelas := Execblock("MT410PC",.F.,.F.)
	Endif
	
	For nX:=1 to nParcelas
		nParc := &("M->C5_PARC"+Substr(cParcela,nx,1))
		dParc := &("M->C5_DATA"+Substr(cParcela,nx,1))
		If nParc > 0 .And. Empty(dParc)
			lParc := .F.
		EndIf
		nAux  += nParc
	Next nX
	
	If !lParc
		Help(" ",1,"A410TIPO9")		
		lRet := .F.		
	Else	
		dbSelectArea("SE4")
		dbSetOrder(1)
		If MsSeek(xFilial()+M->C5_CONDPAG)
			If SE4->E4_TIPO =="9"
				If AllTrim(SE4->E4_COND) = "0"
				
					If	( lIpi .And. NoRound(nTotal,2) > NoRound(nAux,2) ) .Or. ;
						( !lIpi .And. NoRound(nTotal,2) <> NoRound(nAux,2) )
						
						Help(" ",1,"A410TIPO9")
						
						If ( ExistBlock("A410VTIP") )
							lRet := ExecBlock("A410VTIP",.F.,.F.,{lRet})
							If ValType(lRet) <> "L"
								lRet := .F.
							EndIf							
						EndIf
						
						If SuperGetMV("MV_TIPO9SP",,.T.)	// Tipo 9 Sem Parcela informada
							If lRet
								If ( Type("l410Auto") == "U" .or. ! l410Auto )
									OpcQW:=MsgYesNo(OemToAnsi(STR0013),OemToAnsi(STR0014))  //"Confirma a Inclusao do Pedido ?"###"Aten‡„o"
									If !OpcQW 				// Abandona
										lRet := .F.
									EndIf
								EndIf
							EndIf  
						Else 
							lRet := .F.
						EndIf
					EndIf
				ElseIf AllTrim(SE4->E4_COND) = "%" .And. nAux # 100
					Help(" ",1,"A410TIPO9P")
					
					If ( ExistBlock("A410VTIP") )
						lRet := ExecBlock("A410VTIP",.F.,.F.,{lRet})
						If ValType(lRet) <> "L"
							lRet := .F.
						EndIf							
					EndIf
					
					If SuperGetMV("MV_TIPO9SP",,.T.)		// Tipo 9 Sem Parcela informada
						If lRet
							If ( Type("l410Auto") == "U" .or. ! l410Auto )
								OpcQW:=MsgYesNo(OemToAnsi(STR0013),OemToAnsi(STR0014))  //"Confirma a Inclusao do Pedido ?"###"Aten‡„o"
								If !OpcQW 				// Abandona
									lRet := .F.
								EndIf
							EndIf
						EndIf					
					Else 
						lRet := .F.
					EndIf
					
				EndIf
			EndIf
		EndIf
	EndIf	
Endif

RestArea(aAreaSE4)
RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410MultT ³ Autor ³ Eduardo Riera (Rev.)  ³ Data ³ 16.12.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Efetua a Validacao dos campos digitados quanto a quantidade³±±
±±³          ³,preco, desconto e quantidade liberada.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Logico                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410MultT(cReadVar,xConteudo,lHelp)
Local aArea     := GetArea()
Local aDadosCfo := {}
Local aContrato := {}                     
Local cEstado   := SuperGetMv("MV_ESTADO")
Local cProdRef  := ""
Local cMascara  := SuperGetMv("MV_MASCGRD")      
Local cCliTab   := ""
Local cLojaTab  := ""

Local nPProd    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPItem    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPQtdVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPSegum   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_UNSVEN"})
Local nPQtdLib  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB"})
Local nPPrcVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPPrUnit  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
Local nPValor   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPValDes  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALDESC"})
Local nPDescont := aScan(aHeader,{|x| AllTrim(x[2])=="C6_DESCONT"})
Local nPTES     := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPCFO     := aScan(aHeader,{|x| AllTrim(x[2])=="C6_CF"})
Local nPIdentB6 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_IDENTB6"})
Local nPContrat := aScan(aHeader,{|x| AllTrim(x[2])=="C6_CONTRAT"})
Local nPItContr := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMCON"})
Local nPLoteCtl := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPNumLote := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nPDtEnt 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ENTREG"})
Local nITEMED   := Ascan(aHeader,{|x| Alltrim(x[2])=="C6_ITEMED"})
Local nPosBlq	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_BLQ"})
Local nPGrdQtd	:= 0
Local nPGrdPrc	:= 0
Local nPGrdTot	:= 0
Local nPGrdVDet	:= 0
Local nUsado    := Len(aHeader)
Local nPrcOld   := 0
Local nX        := 0
Local nY        := 0
Local nRecSC6   := 0
Local nQtdOri   := 0
Local nTamRef   := Val(Substr(cMascara,1,2))
Local nQtdAnt   := 0
Local nLinha    := 0
Local nColuna   := 0
Local nValorTot := 0
Local nQtdOC	:= 0

Local lMata410	:= AtIsRotina("MATA410")
Local lRetorno  := .T.
Local lGrade    := MaGrade()
Local lGradeReal:= .F.
Local lTabCli   := (SuperGetMv("MV_TABCENT",.F.,"2") == "1")
Local lCfo      := .F.    
Local cTesVend  := SuperGetMV("MV_TESVEND",,"")
Local lAtuSGJ	:= SuperGetMV("MV_PVCOMOP",.F.,.F.) .And. FindFunction("ALIASINDIC") .And. AliasIndic("SGJ")
Local lGrdMult	:= FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")



// Indica se o preco unitario sera arredondado em 0 casas decimais ou nao. Se .T. respeita MV_CENT (Apenas Chile).
Local lPrcDec   := SuperGetMV("MV_PRCDEC",,.F.)
DEFAULT cReadVar := ReadVar()
DEFAULT xConteudo:= &(cReadVar)
DEFAULT lHelp    := .T.

//-- Desativa exibição de alertas da grade
If lGrdMult .And. FindFunction("MsMatGrade") .And. IsAtNewGrd()
	oGrade:lShowMsgDiff := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona os registros                                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ    
Pergunte("MTA410",.F.)
dbSelectArea(IIF(M->C5_TIPO$"DB","SA2","SA1"))
dbSetOrder(1)
MsSeek(xFilial()+IIf(!Empty(M->C5_CLIENT),M->C5_CLIENT,M->C5_CLIENTE)+M->C5_LOJAENT)

cProduto := aCols[n][nPProd]

If lGrade .And.	MatGrdPrrf(@cProduto)   
	If FindFunction("MsMatGrade") .And. IsAtNewGrd()
		cProdRef   := cProduto	
	Else
		cProdRef   := SubStr(cProduto,1,nTamRef)
	EndIf
	lGradeReal := .T.
Else
	cProdRef := aCols[n][nPProd]	
Endif

dbSelectArea("SC6")
dbSetOrder(1)
MsSeek(xFilial("SC6")+M->C5_NUM+aCols[n,nPItem]+cProdRef)

If "C6_TES" $ cReadVar
	dbSelectArea("SF4")
	dbSetOrder(1)
	MsSeek(xFilial("SF4")+xConteudo)
	
	If !RegistroOk("SF4") .or. IIF( cPaisLoc=="ARG", !A410VldTes(), .F.)
		lRetorno	 := .F.
	Endif
	
Else
	dbSelectArea("SF4")
	dbSetOrder(1)
	MsSeek(xFilial("SF4")+aCols[n,nPTes])
	
	If !RegistroOk("SF4")
		lRetorno	 := .F.
	Endif	

EndIf       


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Efetua as validacoes referente ao que foi alterado                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorno .And. "C6_QTDVEN" $ cReadVar )
	If SC6->( Found() )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se o pedido ja foi faturado para inibir alteracao da qtde      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		If lGradeReal

			nRecSC6 := SC6->(Recno())

			dbSelectArea("SC6")
			dbSetOrder(1)
			MsSeek(xFilial("SC6")+M->C5_NUM+aCols[n][nPItem])

			SC6->(dbEval({|| nQtdOri +=SC6->C6_QTDENT},Nil,;
					{||	xFilial("SC6")	 ==	SC6->C6_FILIAL 	.And.;
						M->C5_NUM        ==	SC6->C6_NUM		.And.;
						aCols[n][nPItem] == SC6->C6_ITEM },Nil,Nil,.T.))
	
			SC6->(MsGoto(nRecSC6))
		Else
			nQtdOri := SC6->C6_QTDENT
		Endif	 
			
		If ( xConteudo < nQtdOri )
			If lHelp
				Help(" ",1,"A410PEDJFT")
			Endif	
			lRetorno := .F.
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se ha OP vinculado a este pedido de venda                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SC6->C6_OP $ "01#03#05#08"
				If (SuperGetMV("MV_ALTPVOP") == "N") .And. !(!Empty(SC5->C5_PEDEXP) .And. SuperGetMv("MV_EECFAT") .And. FindFunction("AVINTEMB") .And. AvIntEmb())
					Help(" ",1,"A410TEMOP")
					lRetorno := .F.
				Else
					If !( Type("l410Auto") != "U" .And. l410Auto ) 
						If lAtuSGJ .And. FindFunction("A650VldPV")
							lRetorno := A650VldPV()
						Endif
						If lRetorno
							Help(" ",1,"A410ALTPOP")
						Endif
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
	If lRetorno .And. MaTesSel(aCols[n][nPTes])
		aCols[N][nPQtdVen] := 0
		xConteudo := 0
		M->C6_QTDVEN := 0
		If nPSegum > 0
			aCols[n][nPSegum] := 0
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica a integridade da quantidade qdo ha contrato de parceria        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. nPContrat > 0 .And. nPItContr > 0
		If !Empty(aCols[n][nPContrat]) .And. !Empty(aCols[n][nPItContr])
			dbSelectArea("ADB")
			dbSetOrder(1)
			If !Empty(aCols[n][nPContrat]) .And. MsSeek(xFilial("ADB")+aCols[n][nPContrat]+aCols[n][nPItContr])
				If Empty(ADB->ADB_PEDCOB) .And. !Empty(ADB->ADB_TESCOB)
					If xConteudo <> ADB->ADB_QUANT
						Help(" ",1,"A410CTRQT1")
						lRetorno := .F.
					EndIf
				EndIf
			Else
				aCols[n][nPContrat] := CriaVar("C6_CONTRAT",.F.)
				aCols[n][nPItContr] := CriaVar("C6_ITEMCON",.F.)
			EndIf		
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a integridade da quantidade qdo ha contrato de parceria        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRetorno
			If !Empty(aCols[n][nPContrat]) .And. !Empty(aCols[n][nPItContr])
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica o saldo de contratos deste pedido de venda  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
				For nY := 1 To Len(aCols)
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Busca quantidade do item da Ordem de Carregamento - SIGAAGR -UBS   	   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If AliasIndic("NPN")
						NPN->(dbSetOrder(3))
						If INCLUI .And. IsIncallStack("AGRA900")
							nQtdOC := aCols[nY][nPQtdVen]
						ElseIf ALTERA .And. NPN->(dbSeek(xFilial("NPN")+SC6->(C6_NUM+C6_ITEM)))
							nQtdOC := NPN->NPN_QUANT
				        EndIf
				     EndIf
	
					If !aCols[nY][nUsado+1] .And. N <> nY .And. !Empty(aCols[nY][nPContrat])
						nX := aScan(aContrato,{|x| x[1] == aCols[nY][nPContrat] .And. x[2] == aCols[nY][nPItContr]})
						If nX == 0
							aadd(aContrato,{aCols[nY][nPContrat],aCols[nY][nPItContr],aCols[nY][nPQtdVen]})
							nX := Len(aContrato)
						Else
							aContrato[nX][3] += aCols[nY][nPQtdVen]
						EndIf
					EndIf
					dbSelectArea("SC6")
					dbSetOrder(1)
					If MsSeek(xFilial("SC6")+M->C5_NUM+aCols[nY][nPItem]) .And. !Empty(SC6->C6_CONTRAT)
						nX := aScan(aContrato,{|x| x[1] == SC6->C6_CONTRAT .And. x[2] == SC6->C6_ITEMCON})					
						If nX == 0
							aadd(aContrato,{SC6->C6_CONTRAT,SC6->C6_ITEMCON,0})
							nX := Len(aContrato)
						EndIf
						aContrato[nX][3] -= SC6->C6_QTDVEN
					EndIf
				Next nY		
				nX := aScan(aContrato,{|x| x[1] == aCols[n][nPContrat] .And. x[2] == aCols[n][nPItContr]})
				dbSelectArea("ADB")
				dbSetOrder(1)
				If !Empty(aCols[n][nPContrat]) .And. MsSeek(xFilial("ADB")+aCols[n][nPContrat]+aCols[n][nPItContr])
					If !(Empty(ADB->ADB_PEDCOB) .And. !Empty(ADB->ADB_TESCOB))
						If xConteudo > ADB->ADB_QUANT - (ADB->ADB_QTDEMP-nQtdOC)-If(nX>0,aContrato[nX][3],0)
							Help(" ",1,"A410CTRQT2")
							lRetorno := .F.
						EndIf
					EndIf 
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Valida quantidade da ordem de carregamento - SIGAAGR(UBS)               ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lRetorno .And. AliasInDic("NPN") 
						NPN->(dbSetOrder(3))
						If NPN->(dbSeek(xFilial("NPN")+SC6->(C6_NUM+C6_ITEM)))
							If xConteudo <> If(nX>0,ABS(aContrato[nX][3]),0)
								Help(" ",1,"A410QTDOC")
								lRetorno := .F.
							EndIf
						EndIf	
					EndIf	 
				Else
					aCols[n][nPContrat] := CriaVar("C6_CONTRAT",.F.)
					aCols[n][nPItContr] := CriaVar("C6_ITEMCON",.F.)
				EndIf
			EndIf
		EndIf
		If lRetorno
			dbSelectArea("SC6")
			dbSetOrder(1)
			MsSeek(xFilial("SC6")+M->C5_NUM+aCols[n,nPItem]+aCols[n,nPProd])		
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica as validacoes referente ao que foi alterado                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. "C6_QTDVEN" $ cReadVar
	lRetorno := FtVldQtVen(aCols[n,nPProd],xConteudo,lHelp,M->C5_TIPO)
	//-- Caso integrado com GCT, valida quantidade com o saldo da planilha.
	If lRetorno .And. !Empty(nITEMED) .And. !Empty(aCols[n,nITEMED]) .And. INCLUI .And. Empty(M->C5_MDNUMED)
		CNB->(dbSetOrder(1))
		CNB->(dbSeek(xFilial("CNB")+cContra+cRevisa+cPlan+aCols[n,nITEMED]))
		If M->C6_QTDVEN > CNB->CNB_SLDMED
			Aviso(STR0127,STR0130,{"Ok"}) //SIGAGCT - Esta quantidade excede o saldo da planilha do contrato.
			lRetorno := .F.
		EndIf
	EndIf
Endif	

If lRetorno .And. !Empty(nITEMED) .And. !Empty(aCols[n,nITEMED]) .And. INCLUI .And. Empty(M->C5_MDNUMED) .And. ;
									(("C6_PRUNIT" $ cReadVar .And. M->C6_PRUNIT # aCols[n,nPPrUnit]) .Or. ;
									 ("C6_DESCONT" $ cReadVar .And. M->C6_DESCONT # aCols[n,nPDescont]) .Or. ;
									 ("C6_VALDESC" $ cReadVar .And. M->C6_VALDESC # aCols[n,nPValDes]))
	Aviso(STR0127,STR0128,{"Ok"}) //SIGAGCT - Este pedido foi vinculado a um contrato e por isto não pode ter este campo alterado.
	lRetorno := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a alteracao do valor unitario quando for poder de terceiro     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. "C6_PRCVEN" $ cReadVar
	If !Empty(nITEMED) .And. INCLUI .And. Empty(M->C5_MDNUMED) .And. !Empty(aCols[n,nITEMED]) .And. M->C6_PRCVEN # aCols[n,nPPrcVen]
		Aviso(STR0127,STR0128,{"Ok"}) //SIGAGCT - Este pedido foi vinculado a um contrato e por isto não pode ter este campo alterado.
		lRetorno := .F.
	EndIf
	If aCols[n,nPPrcVen] != xConteudo
		If ( SF4->F4_PODER3 == "D" .And. !Empty(aCols[n,nPIdentB6]) )
			Help(" ",1,"A100VALOR")
			lRetorno := .F.
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica o valor total calculado para este pedido de venda              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. "C6_VALOR" $ cReadVar

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se eh grade para calcular o valor total por item da grade³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nValorTot := 0   
	If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	   	If lGrade .And. lGradeReal .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade) > 0
	   		If lGrdMult
		   		nValorTot := a410Arred(oGrade:SomaGrade("C6_VALOR",n),"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
	   		Else   	
				nPGrdQtd := oGrade:GetFieldGrdPos("C6_QTDVEN")
				For nLinha := 1 To Len(oGrade:aColsGrade[n])
					For nColuna := 2 To Len(oGrade:aHeadGrade[n])
						If (  oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd] <> 0 )
							nValorTot += a410Arred( oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd]*aCols[n,nPPrcVen],"C6_VALOR")
						Endif	
					Next nColuna
				Next nLinha		
			EndIf
		Else 
			nValorTot := A410Arred(aCols[n,nPPrcVen]*aCols[n,nPQtdVen],"C6_VALOR")
		Endif
	Else
		If lGrade .And. lGradeReal .And. Len(aColsGrade) > 0
			For nLinha := 1 To Len(aColsGrade[n])
				For nColuna := 2 To Len(aHeadGrade[n])
					If ( aColsGrade[n][nLinha][nColuna][1] <> 0 )
						nValorTot += a410Arred(aColsGrade[n][nLinha][nColuna][1]*aCols[n,nPPrcVen],"C6_VALOR")
					Endif	
				Next nColuna
			Next nLinha		
		Else 
			nValorTot := A410Arred(aCols[n,nPPrcVen]*aCols[n,nPQtdVen],"C6_VALOR")
		Endif			
	EndIf	
	
	Do Case
	Case !M->C5_TIPO$"CIPD" .And. SF4->F4_PODER3<>"D"
		If (xConteudo <> nValorTot .And. !MaTesSel(aCols[n][nPTES])) .Or.;		
				(xConteudo <> A410Arred(aCols[n,nPPrcVen],"C6_VALOR") .And. MaTesSel(aCols[n][nPTES]))
			Help(" ",1,"TOTAL")
			lRetorno := .F.
		EndIf
	Case M->C5_TIPO=="D" .Or. SF4->F4_PODER3=="D"
		If (Abs(xConteudo - nValorTot ) > 0.49 .And. !MaTesSel(aCols[n][nPTES])) .Or.;		
			(xConteudo <> A410Arred(aCols[n,nPPrcVen],"C6_VALOR") .And. MaTesSel(aCols[n][nPTES]))
			Help(" ",1,"TOTAL")
			lRetorno := .F.
		EndIf
	OtherWise
		If xConteudo <> A410Arred(aCols[n,nPPrcVen],"C6_VALOR")
			Help(" ",1,"TOTAL")
			lRetorno := .F.
		EndIf			
	EndCase
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica o valor do desconto                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. "C6_VALDESC"$cReadVar .And. At(M->C5_TIPO,"CIP") == 0
	If xConteudo > (aCols[n,nPValor]+aCols[n,nPValDes])
		Help(" ",1,"410VALDESC")
		lRetorno := .F.
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a TES                                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. "C6_TES"$cReadVar
	If xConteudo <> aCols[n,nPTES] .And. SC6->C6_OP $ "01#03#05"
		If (SuperGetMV("MV_ALTPVOP") == "N") .And. !(!Empty(SC5->C5_PEDEXP) .And. SuperGetMv("MV_EECFAT") .And. FindFunction("AVINTEMB") .And. AvIntEmb())
			Help(" ",1,"A410TEMOP")
			lRetorno := .F.
		Else
			If !( Type("l410Auto") != "U" .And. l410Auto )
				Help(" ",1,"A410ALTPOP")
			Endif
		EndIf
	EndIf
	If ( SF4->(Found()) .And. xConteudo > "500" )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se tes for de poder de terceiros o tipo do  ³
		//³ pedido so pode ser N ou B                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( SF4->F4_PODER3 $ "RD" .And. M->C5_TIPO == "D" )
			Help(" ",1,"A410PODER3")
			lRetorno := .F.
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se e' um item de grade e o Tes se refere    ³
		//³ a poder de terceiros                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( SF4->F4_PODER3 $ "RD" )
			If ( MatGrdPrrf(aCols[n,nPProd]) )
				Help(" ",1,"A410GRATER")
				lRetorno := .F.
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se a TES for uma devolução de poder de terceiros,    ³
		//³ não permitte eliminar resíduo manualmente (C6_BLQ).  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( SF4->F4_PODER3 $ "D" .And. "R" $ aCols[n,nPosBlq] )
			Help(" ",1,"A410RESDEV",,STR0228,1,1)	//"Não é permitido eliminar resíduo de uma devolução de poder de terceiros."
			lRetorno := .F.
		EndIf
	Else
		Help (" ",1,"A410NOTES")
		lRetorno := .F.
	EndIf
	If lRetorno .And. MaTesSel(xConteudo)
		aCols[N][nPQtdVen] := 0
		If nPSegum > 0
			aCols[n][nPSegum] := 0
		EndIf
		aCols[N][nPValor] := aCols[N][nPPrcVen]
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a data de Entrega                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. "C6_ENTREG" $ cReadVar
	If xConteudo <> aCols[n,nPDtEnt]
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se ha OP vinculado a este pedido de venda                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SC6->C6_OP $ "01#03#05#08"
			If (SuperGetMV("MV_ALTPVOP") == "N") .And. !(!Empty(SC5->C5_PEDEXP) .And. SuperGetMv("MV_EECFAT") .And. FindFunction("AVINTEMB") .And. AvIntEmb())
				Help(" ",1,"A410TEMOP")
				lRetorno := .F.
			Else
				If !( Type("l410Auto") != "U" .And. l410Auto )
					Help(" ",1,"A410ALTPOP")
				EndIf
			EndIf
		EndIf	
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica o tipo de bloqueio                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. "C6_BLQ" $ cReadVar
	If xConteudo <> aCols[n,nPosBlq]
		If (!Empty(aCols[n,nPTes]) .And. SF4->F4_PODER3 $ "D" .And. "R" $ xConteudo)
			Help(" ",1,"A410RESDEV",,STR0228,1,1)	//"Não é permitido eliminar resíduo de uma devolução de poder de terceiros."
			lRetorno := .F.
		EndIf
	EndIf
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Dispara as atualizacoes com base nos dados alterados                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno
	Do Case
	Case "C6_PRCVEN"$cReadVar .And. At(M->C5_TIPO,"CPI") == 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se eh grade para calcular o valor total por item da grade³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   
		If FindFunction("MsMatGrade") .And. IsAtNewGrd()
		   	If lGrade .And. lGradeReal .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade) > 0
		   		If lGrdMult
		   			aCols[n,nPValor] := a410Arred(oGrade:SomaGrade("C6_VALOR",n),"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
					If !( Type("l410Auto") != "U" .And. l410Auto )
						oGrade:ZeraGrade("C6_VALDESC",n)
						aCols[n,nPValDes] := 0
						aCols[n,nPDescont]:= 0
					EndIf
		   		Else
		   			aCols[n,nPValor] 	:= 0          
					nPGrdQtd 			:= oGrade:GetFieldGrdPos("C6_QTDVEN")   			
					For nLinha := 1 To Len(oGrade:aColsGrade[n])
						For nColuna := 2 To Len(oGrade:aHeadGrade[n])
							If ( oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd] <> 0 )
								aCols[n,nPValor]  += a410Arred( oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd]*xConteudo,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
							EndIf
						Next nColuna
					Next nLinha		
				EndIf
			Else	
				aCols[n,nPValor]  := a410Arred(xConteudo * aCols[n,nPQtdVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
				If !( Type("l410Auto") != "U" .And. l410Auto )
					aCols[n,nPValDes] := 0
					aCols[n,nPDescont]:= 0
				EndIf
			Endif	
		Else
		   	If lGrade .And. lGradeReal .And. Len(aColsGrade) > 0
	   			aCols[n,nPValor] := 0
				For nLinha := 1 To Len(aColsGrade[n])
					For nColuna := 2 To Len(aHeadGrade[n])
						If ( aColsGrade[n][nLinha][nColuna][1] <> 0 )
							aCols[n,nPValor]  += a410Arred(aColsGrade[n][nLinha][nColuna][1]*xConteudo,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
						EndIf
					Next nColuna
				Next nLinha		
			Else	
				aCols[n,nPValor]  := a410Arred(xConteudo * aCols[n,nPQtdVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
				If !( Type("l410Auto") != "U" .And. l410Auto )
					aCols[n,nPValDes] := 0
					aCols[n,nPDescont]:= 0
				EndIf
			Endif	
		EndIf
	Case "C6_QTDVEN"$cReadVar .And. At(M->C5_TIPO,"CPI") == 0
		If xConteudo <> aCols[n,nPQtdVen] .Or. (lGrade .And. lGradeReal)		
			nQtdAnt            := aCols[n,nPQtdVen]				
			aCols[n,nPQtdVen ] := xConteudo
			If M->C5_TIPO=="N" .And. ( !Empty(M->C5_TABELA) .Or. aCols[n,nPPrcVen]==0 ) .And. SF4->F4_PODER3<>"D" .And. !(lGrdMult .And. FindFunction("MsMatGrade") .And. IsAtNewGrd() .And. lGrade .And. lGradeReal)
				If lTabCli
					Do Case
						Case !Empty(M->C5_LOJAENT) .And. !Empty(M->C5_CLIENT)
							cCliTab   := M->C5_CLIENT
							cLojaTab  := M->C5_LOJAENT
						Case Empty(M->C5_CLIENT) 
							cCliTab   := M->C5_CLIENTE
							cLojaTab  := M->C5_LOJAENT
						OtherWise
							cCliTab   := M->C5_CLIENTE
							cLojaTab  := M->C5_LOJACLI
					EndCase					
				Else
					cCliTab   := M->C5_CLIENTE
					cLojaTab  := M->C5_LOJACLI
				Endif
			
				nPrcOld := A410Tabela(	aCols[n,nPProd],;
										M->C5_TABELA,;
										n,;
										xConteudo,;
										cCliTab,;
										cLojaTab,;
										If(nPLoteCtl>0,aCols[n,nPLoteCtl],""),;
										If(nPNumLote>0,aCols[n,nPNumLote],"") )
										
				If nPrcOld<>aCols[n,nPPrUnit]
					aCols[n,nPPrUnit]  := nPrcOld
					aCols[n,nPValDes]  := 0
					aCols[n,nPDescont] := 0
				EndIf
				aCols[n,nPPrcVen]  := FtDescCab(aCols[n,nPPrUnit],{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4},If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
			EndIf                                                
			
			If FindFunction("MsMatGrade") .And. IsAtNewGrd()
			   	If lGrade .And. lGradeReal .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade) > 0
			   		If lGrdMult
			   			aCols[n,nPValor] := a410Arred(oGrade:SomaGrade("C6_VALOR",n),"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
			   		Else
				   		aCols[n,nPValor]	:= 0
				   		nPGrdQtd 			:= oGrade:GetFieldGrdPos("C6_QTDVEN") 
						For nLinha := 1 To Len(oGrade:aColsGrade[n])
							For nColuna := 2 To Len(oGrade:aHeadGrade[n])
								If ( oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd] <> 0 )
									aCols[n,nPValor]  += a410Arred(oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd]*aCols[n,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
								Endif	
							Next nColuna
						Next nLinha		
					EndIf
				Else	
					aCols[n,nPValor]   := a410Arred(aCols[n,nPPrcVen] * xConteudo,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
				Endif 
			Else
			   	If lGrade .And. lGradeReal .And. Len(aColsGrade) > 0
			   		aCols[n,nPValor] := 0
					For nLinha := 1 To Len(aColsGrade[n])
						For nColuna := 2 To Len(aHeadGrade[n])
							If ( aColsGrade[n][nLinha][nColuna][1] <> 0 )
								aCols[n,nPValor]  += a410Arred(aColsGrade[n][nLinha][nColuna][1]*aCols[n,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
							Endif	
						Next nColuna
					Next nLinha		
				Else	
					aCols[n,nPValor]   := a410Arred(aCols[n,nPPrcVen] * xConteudo,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
				Endif					
			EndIf
	
			If nPDescont > 0 .And. nPValDes > 0 .And. M->C5_TIPO=="N"
				aCols[n,nPDescont] := FtRegraDesc(1)
				If !(lGrdMult .And. FindFunction("MsMatGrade") .And. IsAtNewGrd() .And. lGrade .And. lGradeReal)
					If aCols[n,nPDescont]<>0 .And. nPPrUnit <> 0
						aCols[n,nPPrcVen] := FtDescItem(FtDescCab(aCols[n,nPPrUnit],{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4}),@aCols[n,nPPrcVen],xConteudo,@aCols[n,nPValor],@aCols[n,nPDescont],@aCols[n,nPValDes],@aCols[n,nPValDes],1,nQtdAnt,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
					Else
						If aCols[n,nPPrUnit] > 0 .And. !(IsInCallStack("Ft400Pv"))
							aCols[n,nPPrcVen]  := FtDescCab(aCols[n,nPPrUnit],{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4})
							aCols[n,nPValor]   := a410Arred(aCols[n,nPPrcVen] * aCols[n,nPQtdVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
						Else
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Calculo o Preco de Lista quando nao houver tabela de preco    ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							aCols[n,nPPrcVen] += a410Arred(aCols[n][nPValDes]/nQtdAnt,"C6_VALOR")
							aCols[n,nPValor]  := a410Arred(aCols[n,nPPrcVen] * aCols[n,nPQtdVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
						EndIf
						aCols[n][nPValDes] := 0
					EndIf
				EndIf
			EndIf
		EndIf
		If ( MV_PAR01 ==1 )
			MaIniLiber(M->C5_NUM,xConteudo-SC6->C6_QTDENT,n)
		EndIf	
	Case "C6_DESCONT"$cReadVar .And. At(M->C5_TIPO,"CPI") == 0
		If At(M->C5_TIPO,"CIP") == 0
			If !(lGrdMult .And. FindFunction("MsMatGrade") .And. IsAtNewGrd() .And. lGrade .And. lGradeReal)
				aCols[n,nPPrcVen] := FtDescItem(FtDescCab(aCols[n,nPPrUnit],{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4}),@aCols[n,nPPrcVen],aCols[n,nPQtdVen],@aCols[n,nPValor],@xConteudo,@aCols[n,nPValDes],@aCols[n,nPValDes],1,,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se eh grade para calcular o valor total por item da grade³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If FindFunction("MsMatGrade") .And. IsAtNewGrd()
				If lGrade .And. lGradeReal .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade) > 0
					If lGrdMult
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Atualiza o preco unitario na grade e tambem os totais no aCols ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nPGrdQtd := oGrade:GetFieldGrdPos("C6_QTDVEN")
						nPGrdPrc := oGrade:GetFieldGrdPos("C6_PRCVEN")
						nPGrdTot := oGrade:GetFieldGrdPos("C6_VALOR")
						nPGrdVDe := oGrade:GetFieldGrdPos("C6_VALDESC")
						
						For nLinha := 1 To Len(oGrade:aColsGrade[n])
							For nColuna := 2 To Len(oGrade:aHeadGrade[n])
								If !Empty(oGrade:aColsGrade[n,nLinha,nColuna][nPGrdPrc] > 0)
									oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc] := FtDescItem(0,@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc],oGrade:aColsGrade[n,nLinha,nColuna,nPGrdQtd],@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdTot],@xConteudo,@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdVDe],@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdVDe],1,,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
								Endif	
							Next nColuna
						Next nLinha
						
						aCols[n,nPPrcVen] := oGrade:SomaGrade("C6_PRCVEN",n)
						aCols[n,nPValor]  := oGrade:SomaGrade("C6_VALOR",n)
						aCols[n,nPValDes] := oGrade:SomaGrade("C6_VALDESC",n)
					Else
			   			aCols[n,nPValor]	:= 0 
						nPGrdQtd			:= oGrade:GetFieldGrdPos("C6_QTDVEN")	   			
						For nLinha := 1 To Len(oGrade:aColsGrade[n])
							For nColuna := 2 To Len(oGrade:aHeadGrade[n])
								If ( oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd] <> 0 )
									aCols[n,nPValor]  += a410Arred(oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd]*aCols[n,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
								Endif	
							Next nColuna
						Next nLinha
					EndIf 
				Endif 
			Else
			   	If lGrade .And. lGradeReal .And. Len(aColsGrade) > 0
		   			aCols[n,nPValor] := 0
					For nLinha := 1 To Len(aColsGrade[n])
						For nColuna := 2 To Len(aHeadGrade[n])
							If ( aColsGrade[n][nLinha][nColuna][1] <> 0 )
								aCols[n,nPValor]  += a410Arred(aColsGrade[n][nLinha][nColuna][1]*aCols[n,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
							Endif	
						Next nColuna
					Next nLinha
				Endif					
			EndIf	
		Else
			aCols[n][nPDescont] := 0
			aCols[n][nPValDes] := 0
			M->C6_DESCONT := 0
		EndIf
	Case "C6_VALDESC"$cReadVar .And. At(M->C5_TIPO,"CPI") == 0
		If At(M->C5_TIPO,"CIP") == 0
			If !(lGrdMult .And. FindFunction("MsMatGrade") .And. IsAtNewGrd() .And. lGrade .And. lGradeReal)
				aCols[n,nPPrcVen] := FtDescItem(FtDescCab(aCols[n,nPPrUnit],{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4}),@aCols[n,nPPrcVen],aCols[n,nPQtdVen],@aCols[n,nPValor],@aCols[n,nPDescont],@xConteudo,aCols[n,nPValDes],2,,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
			EndIf
			M->C6_VALDESC := xConteudo
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se eh grade para calcular o valor total por item da grade³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
			If FindFunction("MsMatGrade") .And. IsAtNewGrd()
				If lGrade .And. lGradeReal .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade) > 0
					If lGrdMult
						nPGrdQtd := oGrade:GetFieldGrdPos("C6_QTDVEN")	   			
						nPGrdPrc := oGrade:GetFieldGrdPos("C6_PRCVEN")
						nPGrdTot := oGrade:GetFieldGrdPos("C6_VALOR")
						nPGrdVDe := oGrade:GetFieldGrdPos("C6_VALDESC")
										
						For nLinha := 1 To Len(oGrade:aColsGrade[n])
							For nColuna := 2 To Len(oGrade:aHeadGrade[n])                               
								If ( oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd] <> 0 )
									//-- Retorna ao valor original para poder ratear
									oGrade:aColsGrade[n,nLinha,nColuna,nPGrdTot] += oGrade:aColsGrade[n,nLinha,nColuna,nPGrdVDe]
									oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc] := A410Arred(oGrade:aColsGrade[n,nLinha,nColuna,nPGrdTot] / oGrade:aColsGrade[n,nLinha,nColuna,nPGrdQtd],"C6_PRCVEN")
	
	                                //-- Rateia valor de desconto a partir do valor total dos itens
									nPrcOld := ((oGrade:aColsGrade[n,nLinha,nColuna,nPGrdTot]*100) / (aCols[n,nPValor]+aCols[n][nPValDes])/100) //Rateia C6_VALDESC
									oGrade:aColsGrade[n,nLinha,nColuna,nPGrdVDe] := A410Arred(xConteudo*nPrcOld,"C6_VALDESC")
									
									oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc] := FtDescItem(0,@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdPrc],oGrade:aColsGrade[n,nLinha,nColuna,nPGrdQtd],@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdTot],@aCols[n,nPDescont],@oGrade:aColsGrade[n,nLinha,nColuna,nPGrdVDe],0,2,,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
								Endif	
							Next nColuna
						Next nLinha
						
						aCols[n,nPPrcVen] := oGrade:SomaGrade("C6_PRCVEN",n)
						aCols[n,nPValor]  := oGrade:SomaGrade("C6_VALOR",n)
						aCols[n,nPValDes] := oGrade:SomaGrade("C6_VALDESC",n)
					Else
			   			aCols[n,nPValor]	:= 0
						nPGrdQtd			:= oGrade:GetFieldGrdPos("C6_QTDVEN")	   			
						For nLinha := 1 To Len(oGrade:aColsGrade[n])
							For nColuna := 2 To Len(oGrade:aHeadGrade[n])
								If ( oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd] <> 0 )
									aCols[n,nPValor]  += a410Arred(oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd]*aCols[n,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
								Endif	
							Next nColuna
						Next nLinha
					EndIf
				Endif	  
			Else
			   	If lGrade .And. lGradeReal .And. Len(aColsGrade) > 0
		   			aCols[n,nPValor] := 0
					For nLinha := 1 To Len(aColsGrade[n])
						For nColuna := 2 To Len(aHeadGrade[n])
							If ( aColsGrade[n][nLinha][nColuna][1] <> 0 )
								aCols[n,nPValor]  += a410Arred(aColsGrade[n][nLinha][nColuna][1]*aCols[n,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
							Endif	
						Next nColuna
					Next nLinha
				Endif		
			EndIf
		Else
			aCols[n][nPDescont] := 0
			aCols[n][nPValDes] := 0
			M->C6_VALDESC := 0
		EndIf
	Case "C6_BLQ" $ cReadVar .And. At(M->C5_TIPO,"CPI") == 0
		aCols[n][nPQtdLib] := 0
	Case "C6_PRODUTO" $ cReadVar .And. At(M->C5_TIPO,"CPI") == 0
		If xConteudo<>aCols[n,nPProd] .And. nPDescont > 0 .And. nPValDes > 0 .And. M->C5_TIPO=="N"
			aCols[n,nPDescont] := FtRegraDesc(1)
			If aCols[n,nPDescont]<>0 .And. nPPrUnit <> 0
				aCols[n,nPPrcVen] := FtDescItem(FtDescCab(aCols[n,nPPrUnit],{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4}),@aCols[n,nPPrcVen],aCols[n,nPQtdVen],@aCols[n,nPValor],@aCols[n,nPDescont],@aCols[n,nPValDes],@aCols[n,nPValDes],1,,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
			Else
				aCols[n,nPDescont] := 0
				aCols[n,nPValDes ] := 0
			EndIf
		EndIf
	Case "C6_TES" $ cReadVar
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
   		//³A Consultoria Tributária, por meio da Resposta à Consulta nº 268/2004, determinou a aplicação das seguintes alíquotas nas Notas Fiscais de venda emitidas pelo vendedor remetente:                                                                         ³
   		//³1) no caso previsto na letra "a" (venda para SP e entrega no PR) - aplicação da alíquota interna do Estado de São Paulo, visto que a operação entre o vendedor remetente e o adquirente originário é interna;                                              ³
   		//³2) no caso previsto na letra "b" (venda para o DF e entrega no PR) - aplicação da alíquota interestadual prevista para as operações com o Paraná, ou seja, 12%, visto que a circulação da mercadoria se dá entre os Estado de São Paulo e do Paraná.       ³
  		//³3) no caso previsto na letra "c" (venda para o RS e entrega no SP) - aplicação da alíquota interna do Estado de São Paulo, uma vez que se considera interna a operação, quando não se comprovar a saída da mercadoria do território do Estado de São Paulo,³
  		//³ conforme previsto no art. 36, § 4º do RICMS/SP                                                                                                                                                                                                            ³
  		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		If cEstado == 'SP'
			If !Empty(M->C5_CLIENT) .And. M->C5_CLIENT <> M->C5_CLIENTE 			
				For nX := 1 To Len(aCols)
		   			If Alltrim(aCols[nX][nPTES])$ Alltrim(cTesVend) .Or. SF4->F4_CODIGO $ Alltrim(cTesVend)
		 				lCfo:= .T.
		 			EndIf
		   		Next 
		   		If lCfo
					dbSelectArea(IIF(M->C5_TIPO$"DB","SA2","SA1"))
					dbSetOrder(1)           
					MsSeek(xFilial()+M->C5_CLIENTE+M->C5_LOJAENT)
					If Iif(M->C5_TIPO$"DB", SA2->A2_EST,SA1->A1_EST) <> 'SP'
						MsSeek(xFilial()+IIf(!Empty(M->C5_CLIENT),M->C5_CLIENT,M->C5_CLIENTE)+M->C5_LOJAENT) 
					Else
						For nX := 1 To Len(aCols)
		   					If Len(aCols)>1
		 				   		If cPaisLoc=="BRA"
		 							Aadd(aDadosCfo,{"OPERNF","S"})
		 							Aadd(aDadosCfo,{"TPCLIFOR",M->C5_TIPOCLI})					
		 							Aadd(aDadosCfo,{"UFDEST",Iif(M->C5_TIPO $ "DB",SA2->A2_EST,SA1->A1_EST)})
		 							Aadd(aDadosCfo,{"INSCR" ,If(M->C5_TIPO$"DB",SA2->A2_INSCR,SA1->A1_INSCR)})
									If SA1->(FieldPos("A1_CONTRIB")) > 0 		 			 	
									 	Aadd(aDadosCfo,{"CONTR", SA1->A1_CONTRIB})
									EndIf	
									aCols[nX,nPCFO] := MaFisCfo(,Iif(!Empty(aCols[nX,nPCFO]),aCols[nX,nPCFO],SF4->F4_CF),aDadosCfo)
								EndIf
		 		   			EndIf
		   				Next
					EndIf
				EndIf 
			EndIf
		 EndIF
			 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Preenche o CFO                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cPaisLoc!="BRA"
			aCols[n,nPCFO]:=AllTrim(SF4->F4_CF)
		Else             
		 	Aadd(aDadosCfo,{"OPERNF","S"})
		 	Aadd(aDadosCfo,{"TPCLIFOR",M->C5_TIPOCLI})					
		 	Aadd(aDadosCfo,{"UFDEST",Iif(M->C5_TIPO $ "DB",SA2->A2_EST,SA1->A1_EST)})
		 	Aadd(aDadosCfo,{"INSCR" ,If(M->C5_TIPO$"DB",SA2->A2_INSCR,SA1->A1_INSCR)})
			If SA1->(FieldPos("A1_CONTRIB")) > 0 		 			 	
			 	Aadd(aDadosCfo,{"CONTR", SA1->A1_CONTRIB})
			EndIf
		 	Aadd(aDadosCfo,{"FRETE" ,M->C5_TPFRETE})	
			aCols[n,nPCFO] := MaFisCfo(,SF4->F4_CF,aDadosCfo)
		EndIf
	Case "C6_PRUNIT" $ cReadVar .AND. ( (!(Type("l410Auto") != "U" .And. l410Auto) )  .OR.  (Type("l410Auto") != "U" .And. l410Auto .And. aCols[n,nPValor] == 0 ) )
		If !(lGrdMult .And. FindFunction("MsMatGrade") .And. IsAtNewGrd() .And. lGrade .And. lGradeReal)
			aCols[n,nPPrcVen] := FtDescItem(FtDescCab(M->C6_PRUNIT,{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4}),@aCols[n,nPPrcVen],aCols[n,nPQtdVen],@aCols[n,nPValor],@aCols[n,nPDescont],@aCols[n,nPValDes],@aCols[n,nPValDes],1,,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se eh grade para calcular o valor total por item da grade³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
		If FindFunction("MsMatGrade") .And. IsAtNewGrd()
		   	If lGrade .And. lGradeReal .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade) > 0
		   		If lGrdMult
		   			&(cReadVar) := 0
		   		Else
					aCols[n,nPValor]	:= 0
					nPGrdQtd			:= oGrade:GetFieldGrdPos("C6_QTDVEN")	   			
					For nLinha := 1 To Len(oGrade:aColsGrade[n])
						For nColuna := 2 To Len(oGrade:aHeadGrade[n])
							If ( oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd] <> 0 )
								aCols[n,nPValor]  += a410Arred(oGrade:aColsGrade[n,nLinha,nColuna][nPGrdQtd]*aCols[n,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
							Endif	
						Next nColuna
					Next nLinha
				EndIf
			Endif	  
		Else
		   	If lGrade .And. lGradeReal .And. Len(aColsGrade) > 0
		  		aCols[n,nPValor] := 0
				For nLinha := 1 To Len(aColsGrade[n])
					For nColuna := 2 To Len(aHeadGrade[n])
						If ( aColsGrade[n][nLinha][nColuna][1] <> 0 )
							aCols[n,nPValor]  += a410Arred(aColsGrade[n][nLinha][nColuna][1]*aCols[n,nPPrcVen],"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
						Endif	
					Next nColuna
				Next nLinha
			Endif		
		EndIf		
	EndCase
	If ( M->C5_TIPO $ "CIP" )
		M->C6_QTDVEN := 0
		aCols[n,nPQtdVen] := 0
	EndIf
EndIf

If lRetorno .And. cPaisLoc == "BRA" .And. cEstado == "RN" .And. ("C6_PRODUTO" $ cReadVar .Or. "C6_TES" $ cReadVar)
	a410FrPIte(cReadVar,xConteudo)
Endif

//-- Desativa exibição de alertas da grade
If lGrdMult .And. FindFunction("MsMatGrade") .And. IsAtNewGrd()
	oGrade:lShowMsgDiff := .F.
EndIf

RestArea(aArea)

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410Tabela³ Autor ³ Eduardo Riera         ³ Data ³ 19.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao que retorna o preco de lista considerando grade de   ³±±
±±³          ³produtos.                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: Preco de Lista                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1:    Codigo do Produto                                 ³±±
±±³          ³ExpC2:    Tabela de Preco                                   ³±±
±±³          ³ExpN3:    Linha da Grade                                    ³±±
±±³          ³ExpN4:    Quantidade                                        ³±±
±±³          ³ExpC5:    Cliente                                           ³±±
±±³          ³ExpC6:    Loja                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Tabela(cProduto,cTabprec,nLin,nQtde,cCliente,cLoja,cLoteCtl,cNumLote,lLote,lExecb,lPrcTab,cOpcional)

Local aArea     := GetArea()
Local aContrato := {}
Local aOpcional := {}

Local cOpc      := ""
Local cGrade	:= ""
Local cPoder3   := ""
Local cAliasADA := "ADA"
Local cAliasADB := "ADB"

Local nPrcVen	:=0
Local lOpcPadrao:= SuperGetMv("MV_REPGOPC",.F.,"N") == "N"
Local nPosOpc   := aScan(aHeader,{|x| AllTrim(x[2])==IIf(lOpcPadrao,"C6_OPC","C6_MOPC")})
Local nPosTes   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPQtdVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPItem    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPContrat := aScan(aHeader,{|x| AllTrim(x[2])=="C6_CONTRAT"})
Local nPItemCon := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMCON"})
Local nPLocal   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nX        := 0
Local nY        := 0
Local nAux		:= 0
Local nUsado    := Len(aHeader)
Local nFator    := 1

Local lQuery    := .F.
Local lGrade	:= MaGrade()
Local lRet  	:= .T.
Local lValido   := .F.
Local lContrat  := SuperGetMV("MV_PRCCTR")
Local lPrcPod3  := ( GetNewPar( "MV_PRCPOD3", "1" ) == "2" )                    
Local lUsaVenc  := .F.
Local lAgricola	:= .F.

Local cLocal    := Iif(nPLocal > 0, aCols[n][nPLocal],Space(Len(SC6->C6_LOCAL)))
Local cCondPag  := M->C5_CONDPAG

DEFAULT nQtde    := 0
DEFAULT cCliente := M->C5_CLIENTE
DEFAULT cLoja    := M->C5_LOJACLI
DEFAULT cLoteCtl := ""
DEFAULT cNumLote := If(cNumLote == NIL .Or. Empty(cNumLote) .Or. Rastro(cProduto,"L"),"",cNumLote)
DEFAULT lLote    := .F.
DEFAULT lExecb   := .T.
DEFAULT lPrcTab  := .F.
DEFAULT cOpcional:= If(nPosOpc==0,"",AllTrim(aCols[nLin][nPosOpc]))

lUsaVenc  := If(!Empty(cLoteCtl+cNumLote),.T.,(SuperGetMv('MV_LOTVENC')=='S'))

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ PE para considerar Tabela Especial ou quando o Cliente usa a ³
//³ tabela de precos do SIGALOJA SB0.                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("A410TAB") .And. lExecb
	nPrcVen := ExecBlock("A410TAB",.F.,.F.,{cProduto,cTabprec,nLin,nQtde,cCliente,cLoja,cLoteCtl,cNumLote,lLote})
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³	Trecho especifico para as funcionalidade do modulo SIGAAGR.	  	   	   ³
	//³	Sempre considera o contrato da rotina automatica.					   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IsIncallStack("AGRA900") .Or. IsIncallStack("AGRA750")
		If ( Type("l410Auto") != "U" .And. l410Auto .And. Type("aAutoItens[n]") !=  "U") .And. Type("aAutoCab") != "U"  
			nPCtrAuto := aScan(aAutoItens[n], {|x| Alltrim(x[1]) == "C6_CONTRAT" })
			nPItemCon := aScan(aAutoItens[n], {|x| Alltrim(x[1]) == "C6_ITEMCON" })
			If nPCtrAuto > 0 .And. nPItemCon > 0
				aCols[n][nPContrat] := aAutoItens[n,nPCtrAuto,2]
				aCols[n][nPItemCon] := aAutoItens[n,nPItemCon,2]
				lAgricola := .T.
			EndIf	                  
		EndIf
	EndIf 
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se ha contrato de parceria                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lContrat .And. nPContrat<>0 .And. nPItemCon<>0 .And. !Empty(cProduto)
		If !lAgricola .And. !(FunName() $ "FATA400")
			dbSelectArea("ADA")
			dbSetOrder(1)		
			dbSelectArea("ADB")
			dbSetOrder(2)
			#IFDEF TOP
				aStruADB := ADB->(dbStruct())	
				lQuery := .T.
				cAliasADA := "A410TABELA"			
				cAliasADB := "A410TABELA"
				
				cQuery := "SELECT * "
				cQuery += "FROM "+RetSqlName("ADB")+" ADB, "
				cQuery += RetSqlName("ADA")+" ADA "
				cQuery += "WHERE ADB.ADB_FILIAL='"+xFilial("ADB")+"' AND "
				cQuery += "ADB.ADB_CODCLI='"+cCliente+"' AND "
				cQuery += "ADB.ADB_LOJCLI='"+cLoja+"' AND "
				cQuery += "ADB.ADB_CODPRO='"+cProduto+"' AND "
				cQuery += "ADB.D_E_L_E_T_=' ' AND "
				cQuery += "ADA.ADA_FILIAL='"+xFilial("ADA")+"' AND "
				cQuery += "ADA.ADA_NUMCTR=ADB.ADB_NUMCTR AND "
				cQuery += "ADA.ADA_STATUS IN ('B','C') AND "
				cQuery += "ADA.ADA_CONDPG='"+cCondPag+"' AND "			
				cQuery += "ADA.D_E_L_E_T_=' '  "		
				
				cQuery := ChangeQuery(cQuery)
				
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasADB)
				
				For nX := 1 To Len(aStruADB)
					If aStruADB[nX][2] <> "C"
						TcSetField(cAliasADB,aStruADB[nX][1],aStruADB[nX][2],aStruADB[nX][3],aStruADB[nX][4])
					EndIf
				Next nX
			#ELSE
				MsSeek(xFilial("ADB")+cCliente+cLoja+cProduto)
			#ENDIF
		Else 
			dbSelectArea("ADA")
			dbSetOrder(1)		
			dbSelectArea("ADB")
			dbSetOrder(1)                                      
			MsSeek(xFilial("ADB")+aCols[n][nPContrat]+aCols[n][nPItemCon])
		EndIf	        
		
		While ( !Eof() .And. xFilial("ADB") == (cAliasADB)->ADB_FILIAL .And.;
				(cAliasADB)->ADB_CODCLI == cCliente .And.;
				(cAliasADB)->ADB_LOJCLI == cLoja .And.;
				(cAliasADB)->ADB_CODPRO == cProduto )
			If !lQuery
				dbSelectArea("ADA")
				dbSetOrder(1)
				MsSeek(xFilial("ADA")+(cAliasADB)->ADB_NUMCTR)
				lValido := ADA->ADA_STATUS<>"A" .And. ADA->ADA_STATUS<>"D" .And. ADA->ADA_CONDPG == cCondPag
			Else
				lValido := .T.
			EndIf
			If lValido
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica o saldo de contratos deste orcamento        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
				If Empty(aContrato)
					For nY := 1 To Len(aCols)
						If !aCols[nY][nUsado+1] .And. N <> nY .And. !Empty(aCols[nY][nPContrat])
							nX := aScan(aContrato,{|x| x[1] == aCols[nY][nPContrat] .And. x[2] == aCols[nY][nPItemCon]})
							If nX == 0
								aadd(aContrato,{aCols[nY][nPContrat],aCols[nY][nPItemCon],aCols[nY][nPQtdVen]})
								nX := Len(aContrato)
							Else
								aContrato[nX][3] += aCols[nY][nPQtdVen]
							EndIf
						EndIf
						dbSelectArea("SC6")
						dbSetOrder(1)
						If MsSeek(xFilial("SC6")+M->C5_NUM+aCols[nY][nPItem]) .And. !Empty(SC6->C6_CONTRAT)
							nX := aScan(aContrato,{|x| x[1] == SC6->C6_CONTRAT .And. x[2] == SC6->C6_ITEMCON})
							If nX == 0
								aadd(aContrato,{SC6->C6_CONTRAT,SC6->C6_ITEMCON,0})
								nX := Len(aContrato)
							EndIf
							aContrato[nX][3] -= SC6->C6_QTDVEN
						EndIf
						If lAgricola
							Exit
						EndIf
					Next nY
				EndIf
				nX := aScan(aContrato,{|x| x[1] == (cAliasADB)->ADB_NUMCTR .And. x[2] == (cAliasADB)->ADB_ITEM})
				If (cAliasADB)->ADB_QUANT > (cAliasADB)->ADB_QTDEMP+IIf(nX>0,aContrato[nX][3],0)
					If lPrcTab
						nPrcVen := xMoeda((cAliasADB)->ADB_PRUNIT,(cAliasADA)->ADA_MOEDA,M->C5_MOEDA,dDataBase,TamSx3("C6_PRCVEN")[2])
					Else
						nPrcVen := xMoeda((cAliasADB)->ADB_PRCVEN,(cAliasADA)->ADA_MOEDA,M->C5_MOEDA,dDataBase,TamSx3("C6_PRCVEN")[2])
					EndIf
					If aCols[n][nPQtdVen] > (cAliasADB)->ADB_QUANT-(cAliasADB)->ADB_QTDEMP
						aCols[n][nPQtdVen] := (cAliasADB)->ADB_QUANT-(cAliasADB)->ADB_QTDEMP - IIf(nX>0,aContrato[nX][3],0)
						a410MultT("C6_QTDVEN",aCols[n][nPQtdVen])
					EndIf
					aCols[n][nPContrat] := (cAliasADB)->ADB_NUMCTR
					aCols[n][nPItemCon]  := (cAliasADB)->ADB_ITEM
					Exit
				EndIf
			EndIf
			dbSelectArea(cAliasADB)
			dbSkip()
		EndDo
		If lQuery
			dbSelectArea(cAliasADB)
			dbCloseArea()
			dbSelectArea("ADB")
		EndIf
	EndIf


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se existe preco para o lote caso tenha sido informado³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If SB8->(FieldPos("B8_PRCLOT")) > 0 
		
		If !Empty(cLoteCtl) .And. nPrcVen == 0
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Busca o preco do SB8 quando o lote for informado no pedido de ³
			//³venda                                                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
			SB8->(dbSetOrder(3))
			If SB8->(MsSeek(xFilial("SB8")+cProduto+cLocal+cLoteCtl+Alltrim(cNumLote)))		
				If lUsaVenc 
					If  dDataBase <= SB8->B8_DTVALID
						nPrcVen := SB8->B8_PRCLOT 
					Endif
				Else		                     
					nPrcVen := SB8->B8_PRCLOT
				Endif	
			Endif				

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Calcula o preco somente se o preco do lote no SB8 for informado ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			If nPrcVen <> 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verifica o fator de acrescimo ou desconto de acordo com os    ³
				//³dados informados para calculo sobre o preco do SB8            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nFator := MaTabPrVen(cTabPrec,cProduto,nQtde,cCliente,cLoja,M->C5_MOEDA,M->C5_EMISSAO,2)
				nPrcVen := nPrcVen * nFator
			Endif	
		Endif	
		
	Endif
	
	If nPrcVen == 0 .And. !lLote	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se a grade esta ativa, e se o produto digitado e'   ³
		//³ uma referencia                                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( lGrade )
			MatGrdPrrf(@cProduto)
		EndIf
		
		If nLin > 0 .And. nPosTes > 0
			dbSelectArea("SF4")
			dbSetOrder(1)
			If MsSeek(xFilial("SF4")+aCols[nLin][nPosTes])
				cPoder3 := SF4->F4_PODER3
			Else
				cPoder3 := "N"
			Endif
		Else
			cPoder3 := "N"
		Endif
		
		dbSelectArea("SB1")
		dbSetOrder(1)
		If ( !Empty(cProduto) .And. MsSeek(xFilial("SB1")+cProduto,.F.) .And. ( ( M->C5_TIPO=="N" .And. cPoder3 == "N" ) .Or. (lPrcPod3 .And. !(IsInCallStack("A410Devol"))) ) ) 
			nPrcVen := MaTabPrVen(cTabPrec,cProduto,nQtde,cCliente,cLoja,M->C5_MOEDA,M->C5_EMISSAO)
			A410RvPlan(cTabPrec,cProduto)
		EndIf
	EndIf

	If !lOpcPadrao
		aOpcional := STR2ARRAY(cOpcional,.F.)
		If ValType(aOpcional)=="A" .And. Len(aOpcional) > 0
			For nAux := 1 To Len(aOpcional)
				cOpcional += aOpcional[nAux][2]
			Next nAux
		EndIf	
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Aqui ‚ efetuado o tratamento diferencial de Precos para os   ³
	//³ Opcionais do Produto.                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
	If nPosOpc > 0
		If AllTrim(aCols[n][nPosOpc]) =='A' 
			aCols[n][nPosOpc] 	:= ""
			cOpcional			:= ""
		EndIf	
	EndIf
	While !Empty(cOpcional)
		cOpc      := SubStr(cOpcional,1,At("/",cOpcional)-1)
		cOpcional := SubStr(cOpcional,At("/",cOpcional)+1)
		dbSelectArea("SGA")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SGA")+cOpc) )
			nPrcVen += SGA->GA_PRCVEN
		EndIf
	EndDo
EndIf
RestArea(aArea)
Return(nPrcVen)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A410VldPrj³ Autor ³ Edson Maricate        ³ Data ³ 22/07/01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Validacao do codigo da tarefa digitada.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA410                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410VldPrj()
Local lRet	:= .F.
Local aArea		:= GetArea()
Local aAreaAF8	:= AF8->(GetArea())
Local aAreaAF9	:= AF9->(GetArea())
Local nPosEDT	:= aScan(aHeader,{|x| Alltrim(x[2])=="C6_EDTPMS" 	.Or.	Alltrim(x[2])=="D2_EDTPMS"})
Local nPosTrf	:= aScan(aHeader,{|x| Alltrim(x[2])=="C6_TASKPMS"	.Or.	Alltrim(x[2])=="D2_TASKPMS"})
Local cContVar	:=	&(ReadVar())
Local SnTipo   
Local lVldCgfNf := cPaisLoc<>"BRA" .And. Type("aCfgNF")=="A" .And. Len(aCfgNF)>0
Local lNFCred   := .F. // Nota de Crédito para paises Localizados

//////////////////////////////////
// Somente para paises Localizados
If lVldCgfNf
	//////////////////////////////////////////////////
	// Provem de um define da LocxNF.prw - LocxDlgNF()
	SnTipo  := If( Type("_SnTipo")<>"U",_SnTipo,1) 
	
	//////////////////////////////////////////
	// Definidas em LocxNf.prw
	// 7 = NCP - Nota de Credito do Fornecedor
	// 8 = NDI - Nota de Debito Interna
	lNFCred := aCfgNF[SnTipo]==7 .Or. aCfgNF[SnTipo]==8
Endif

AF8->(dbSetOrder(1))
If AF8->(dbSeek(xFilial()+aCols[n][aScan(aHeader,{|x| Alltrim(x[2])=="C6_PROJPMS" .Or. Alltrim(x[2])=="D2_PROJPMS"})]))
	If AllTrim(ReadVar())=="M->C6_TASKPMS" .Or. AllTrim(ReadVar())=="M->D2_TASKPMS"
		AF9->(dbSetOrder(1))
		If AF9->(dbSeek(xFilial()+AF8->AF8_PROJET+AF8->AF8_REVISA+cContVar))
			// tarefa pode ser faturada
			If	lNFCred .Or. (AF9->(AF9_FATURA) =="1") // Faturavel
				lRet := .T.
				If nPosEDT > 0
					aCols[n][nPosEDT]	:= SPACE(LEN(AFC->AFC_EDT))
				EndIf
			Else                          				
				HELP("   ",1,"VLDTSKRFAT")
			EndIf
		Else
			HELP("   ",1,"EXISTCPO")
		EndIf             
	Else
		AFC->(dbSetOrder(1))
		If AFC->(dbSeek(xFilial()+AF8->AF8_PROJET+AF8->AF8_REVISA+cContVar))
			// EDT pode ser faturada
			If AFC->(AFC_FATURA) =="1" 
				lRet := .T.
				aCols[n][nPosTrf]	:= SPACE(LEN(AF9->AF9_TAREFA))
			Else
				HELP("   ",1,"VLDEDTFAT")
			EndIf
		Else
			HELP("   ",1,"EXISTCPO")
		EndIf
	EndIf
Else
	HELP("   ",1,"EXISTCPO")
EndIf

RestArea(aAreaAF8)
RestArea(aAreaAF9)
RestArea(aArea)
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410Cli   ³ Autor ³Eduardo Riera          ³ Data ³ 21.01.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao de Cliente                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Cliente Valido                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome da Variavel do PV                               ³±±
±±³          ³ExpC2: Codigo do Cliente                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Cli(cA410CliV,cA410Cli,lInterface)

Local lRetorno  := .F.
Local cLoja     :=""
Local lConPadOk := .F.
Local nEndereco	:= 0
Local nX		:= 0
Local nProv		:= 0
Local oDlg
Local aArea  	:= {}
Local aArea2  := {}
Local cProxCli  := ""
Local cProvAnt	:= ""
Local cTes		:= ""
Local nPosProv  := Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_PROVENT"})
Local nPosTes   := Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_TES"})

DEFAULT lInterface := .T.

l410Auto := If (Type("l410Auto") == "U",.f.,l410Auto)
l416Auto := If (Type("l416Auto") == "U",.f.,l416Auto)

If !(l416Auto) .and. !(l410Auto) .And. lInterface
	oDlg	:=	GetWndDefault()
EndIf

cA410CliV	:=	If(cA410CliV==Nil,ReadVar(),cA410CliV)
cA410Cli		:= If(cA410Cli==Nil,&(cA410CliV),cA410Cli)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se cliente/fornecedor possui o mesmo codigo em lojas diferentes, ³
//³deixa campo C5_LOJACLI vazio para usuario preencher.             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(IIF(M->C5_TIPO$"DB","SA2","SA1"))
If l410Auto
	nPos := aScan( aAutoCab, {|x| Alltrim( Upper( x[1] ) ) == "C5_LOJACLI" } )
	If nPos > 0
		cLoja := aAutoCab[nPos][2]
	Endif
Else	
	cLoja := IIf(M->C5_TIPO$"DB",SA2->A2_LOJA,SA1->A1_LOJA)
EndIf

If !l410Auto

	aArea	:= GetArea()
	MsSeek( xFilial()+cA410Cli+cLoja,.F.) 
	aArea2	:= GetArea()
		
	dbSkip()
	cProxCli := &(IIF(M->C5_TIPO$"DB","SA2->A2_COD","SA1->A1_COD"))
	cProxCli := IIF(cProxCli <> cA410Cli,"",cProxcli)

	MsSeek( xFilial()+cA410Cli+cLoja,.F.)
	If (Recno() == aArea2[3]) .And. !Empty(M->C5_LOJACLI)
		cProxCli := ""
	EndIf	

	RestArea(aArea2)
	If Empty(cProxCli)
		cLoja := IIf(M->C5_TIPO$"DB",SA2->A2_LOJA,SA1->A1_LOJA)
	Else
		cLoja := Space( Len(SA2->A2_LOJA) )	
		M->C5_LOJACLI := cLoja
	EndIf	
	
	RestArea(aArea)
	
EndIf

If ( !Empty(cA410Cli) )
	dbSelectArea(IIF(M->C5_TIPO$"DB","SA2","SA1"))
	dbSetOrder(1)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Procura por Codigo + Loja                                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( !MsSeek( xFilial()+cA410Cli+cLoja,.F.) )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Procura por Codigo ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !MsSeek( xFilial()+cA410Cli,.F.)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Procura pelo nome do cliente                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSetOrder(2)
			If ( !MsSeek( xFilial()+Trim(cA410Cli),.F.) )
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Procura pelo CGC                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSetOrder(3)
				If ( MsSeek( xFilial()+Trim(cA410Cli),.F.) )
					lRetorno := .T.
				Else
					lRetorno := .F.
				EndIf
			Else
				lRetorno := .T.
			EndIf
			If lRetorno
				&(cA410CliV) := IF(M->C5_TIPO $ "DB",SA2->A2_COD,SA1->A1_COD)
			EndIf
		Else
			lRetorno := .T.
		EndIf
	Else
		lRetorno := .T.
	EndIf
EndIf
If ( lRetorno )
	If M->C5_TIPO $ "DB"
		cA410Cli  := SA2->A2_COD   
		cLoja    := IIf(Empty(cProxcli),SA2->A2_LOJA,Space(Len(SA2->A2_LOJA)))		
		lConPadOk := .T.
		If cPaisLoc =="ARG" .And. SC5->(FieldPos("C5_PROVENT")) > 0
			cProvAnt	  := M->C5_PROVENT
			M->C5_PROVENT := SA2->A2_EST // Provincia de Entrega do Fornecedor
		Endif	
	Else
		cA410Cli := SA1->A1_COD
		cLoja    := IIf(Empty(cProxcli),SA1->A1_LOJA,Space(Len(SA1->A1_LOJA)))		
		lConPadOk := .T.
		If cPaisLoc =="ARG" .And. SC5->(FieldPos("C5_PROVENT")) > 0
			cProvAnt	  := M->C5_PROVENT
			M->C5_PROVENT := SA1->A1_EST // Provincia de Entrega do Cliente
		Endif	
	EndIf
	If cPaisLoc == "COL" .And. SC5->(FieldPos("C5_CODMUN")) > 0
		If M->C5_TIPO $ "DB"
			M->C5_CODMUN := SA2->A2_COD_MUN // Municipio de Entrega do Fornecedor
		Else
			M->C5_CODMUN := SA1->A1_COD_MUN // Municipio de Entrega do Cliente
		EndIf
	Endif	
	If cPaisLoc == "ARG"
        If nPosProv > 0
   			If cProvAnt <> M->C5_PROVENT
				For nX := 1 to Len(aCols)
					cTes := aCols[n,nPosTes]
					If VerProEnIt(M->C5_PROVENT,cTes,.F.,.F.)
						aCols[nx,nPosProv]:= M->C5_PROVENT
					Else
						nProv++
					Endif
				Next
				If nProv > 0
					MsgAlert(STR0117,STR0118) //Alguns itens não tiveram a província alterada pois possuem impostos gravados em um mesmo campo.
				Endif
			Endif	
		Endif
	Endif
Else
	Help(" ",1,"A410NCLIE")
EndIf

If !Empty(M->C5_MDCONTR) .And. M->C5_CLIENTE+M->C5_LOJACLI # CN9->CN9_CLIENT+CN9->CN9_LOJACL
	Aviso(STR0127,STR0128,{"Ok"}) //SIGAGCT - Este pedido foi vinculado a um contrato e por isto não pode ter este campo alterado.
	lRetorno := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Quando for alteracao deve-se verificar se o pedido ja foi entregue, 		³
//³em caso afirmativo, nao deve-se permitir alterar o cliente.          	³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorno )
	dbSelectArea("SC5")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SC5")+M->C5_NUM,.F.) )
		If ( SC5->C5_CLIENTE != cA410Cli )
			dbSelectArea("SC6")
			dbSetOrder(1)
			MsSeek(xFilial("SC6")+M->C5_NUM)
			While ( !Eof() .And. xFilial("SC6") == SC6->C6_FILIAL .And.;
					SC6->C6_NUM 	== SC5->C5_NUM )
				If ( SC6->C6_QTDENT != 0 .Or. !Empty(SC6->C6_NOTA) )
					lRetorno := .F.
					Help(" ",1,"A410CLIOK")
					Exit
				EndIf
				dbSkip()
			EndDo
		EndIf
	Else
		If ( Found() .And. INCLUI )
			Help(" ",1,"A410PED")
			lRetorno := .F.
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Efetua o Acerto na Enchoice                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lConPadOk .And. lRetorno ) .And. ("C5_CLIENTE" $ cA410CliV)
	M->C5_CLIENTE := cA410Cli
	M->C5_CLIENT  := cA410Cli
	M->C5_LOJAENT := cLoja
	M->C5_LOJACLI := cLoja
	If lInterface
		nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_CLIENTE" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := cA410Cli
		EndIf
		nEndereco     := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_LOJAENT" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->C5_LOJAENT
		EndIf
		nEndereco     := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_LOJACLI" } )
		If nEndereco > 0
			aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->C5_LOJACLI
		EndIf
	EndIf
ElseIf ( lConPadOk .And. lRetorno ) .And. ("C5_CLIENT" $ cA410CliV)
	M->C5_LOJAENT := cLoja	
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Se o pedido estiver sendo gerado a partir de uma aprovacao de Orcamento³
//³o conteudo da READVAR sera limpo para a chamada da a410Loja()          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If l416Auto
	__READVAR := ""
EndIf
                   
If !Empty(cLoja)
	lRetorno := lRetorno .And. A410Loja(IIF("C5_CLIENTE"$cA410CliV,"C5_LOJACLI","C5_LOJAENT"),IIF("C5_CLIENTE"$cA410CliV,M->C5_LOJACLI,M->C5_LOJAENT),lInterface,Upper(AllTrim(cA410CliV)) == "M->C5_CLIENT" )
EndIf
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Atualiza o Rodape                                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. lInterface
	Ma410Rodap()
EndIf
Return ( lRetorno )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ A410Loja ³ Autor ³ Claudinei M. Benzi    ³ Data ³ 21.01.92 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Critica de Cliente                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Loja(cLojaV,cLoja,lInterface,lEntrega)

Local aArea		:= GetArea()
Local aAreaSA1 := SA1->(GetArea())
Local aSvArea  := {}
Local cCliAnt  := ""
Local cProvAnt := ""	
Local nPosicao := 0
Local nEndereco:= 0
Local nLojaCli := 0
Local nPosNfOri:= Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_NFORI"})
Local nPosSOri := Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_SERIORI"})
Local nPosItOri:= Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_ITEMORI"})
Local nPosIdent:= Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_IDENTB6"})
Local nPosProv := Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_PROVENT"})
Local nMaxArray:= Len(aHeader)+1
Local nX       := 0 
Local lRetorno := .T.
Local lA410PVCL:= ExistBlock("A410PVCL") //O Tratamento deste ponto de entrada pode ser extendido para outros campos.
Local cCodVdBlk:= Space(TamSX3("A1_VEND")[1])
Local cTabela	:= ""
Local cCondPag	:= ""


DEFAULT lInterface := .T.
DEFAULT cLojaV     := ReadVar()
DEFAULT cLoja      := &(ReadVar())
DEFAULT lEntrega   := .F.  //Indicador quando apenas o campo CLIENTE DE ENTREGA eh alterado, em caso de DEV./RETORNO

l410Auto := If (Type("l410Auto") == "U",.f.,l410Auto)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se trocou de cliente e existem documentos originais preenchidos³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cCliAnt := a410ChgCli()

If !Empty(cCliAnt) .And. lInterface
	If Ascan(aCols,{|x| !Empty(x[nPosNfOri]) .And. !x[Len(x)]}) > 0 .And. !lEntrega .And. ((M->C5_CLIENTE+M->C5_LOJACLI) <> cCliAnt)
		lRetorno :=(Aviso(OemToAnsi(STR0014),OemToAnsi(STR0061),{STR0030,STR0031}) == 1)
		If lRetorno 
			For nX := 1 to Len(aCols)       
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Limpa os documentos originais caso troque o cliente e confirme          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !aCols[nX][nMAxArray] .And. (!Empty(aCols[nX][nPosNfOri]) .Or. !Empty(aCols[nX][nPosIdent]))
					aCols[nX][nPosNfOri] := ""
					aCols[nX][nPosSOri]  := ""						
					aCols[nX][nPosItOri] := ""				
					aCols[nX][nPosIdent] := ""						
				Endif	
			Next
		Else
			M->C5_CLIENTE := Left(cCliAnt,Len(M->C5_CLIENTE))
			M->C5_LOJACLI := Right(cCliAnt,Len(M->C5_LOJACLI))			
			M->C5_CLIENT  := Left(cCliAnt,Len(M->C5_CLIENTE))
			M->C5_LOJAENT := Right(cCliAnt,Len(M->C5_LOJACLI))		
		Endif	
	Endif	
Endif	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o pedido corrente foi faturado.                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If lRetorno

	If ( ALTERA .And. !Empty(cLoja) )
		dbSelectArea("SC6")
		dbSetOrder(1)
		If ( MsSeek(xFilial()+M->C5_NUM,.F.) )
			While ( !Eof() .And. xFilial("SC6") == SC6->C6_FILIAL .And.;
					SC6->C6_NUM 	== M->C5_NUM .And.;
					lRetorno )
				If ( SC6->C6_QTDENT > 0 .Or. !Empty(SC6->C6_NOTA) )
					lRetorno := .F.
					Help(" ",1,"A410CLIOK")
					M->C5_LOJACLI := SC5->C5_LOJACLI
					M->C5_LOJAENT := SC5->C5_LOJAENT
				EndIf
				dbSelectArea("SC6")
				dbSkip()
			EndDo
		EndIf
	EndIf

Endif
	
If ( lRetorno )
	dbSelectArea(IIF( M->C5_TIPO $ "DB","SA2","SA1"))
	dbSetOrder(1)
	If ( "C5_LOJACLI" $ cLojaV )
		If ( !MsSeek(xFilial()+M->C5_CLIENTE+cLoja,.F.) )
			Help(" ",1,"C5_LOJACLI")
			lRetorno := .F.
		Else
			lRetorno := RegistroOk(IIF( M->C5_TIPO $ "DB","SA2","SA1"))			
		EndIf
	Else
		If  ( "C5_LOJAENT" $ cLojaV )
			If ( !MsSeek(xFilial()+IIf(!Empty(M->C5_CLIENT),M->C5_CLIENT,M->C5_CLIENTE)+cLoja,.F.) )
				Help(" ",1,"C5_LOJAENT")
				lRetorno := .F.
			Else
				lRetorno := RegistroOk(IIF( M->C5_TIPO $ "DB","SA2","SA1"))
			EndIf			
		EndIf
	EndIf
	If cPaisLoc == "COL" .And. SC5->(FieldPos("C5_CODMUN")) > 0
		If M->C5_TIPO $ "DB"
			M->C5_CODMUN := SA2->A2_COD_MUN // Municipio de Entrega do Fornecedor
		Else
			M->C5_CODMUN := SA1->A1_COD_MUN // Municipio de Entrega do Cliente
		EndIf
	Endif	
	If cPaisLoc =="ARG" .And. SC5->(FieldPos("C5_PROVENT")) > 0
	    cProvAnt := M->C5_PROVENT
		If M->C5_TIPO $ "DB"
			M->C5_PROVENT := SA2->A2_EST // Provincia de Entrega do Fornecedor
	    Else
			M->C5_PROVENT := SA1->A1_EST // Provincia de Entrega do Cliente
		Endif
		
        If nPosProv > 0
   			If cProvAnt <> M->C5_PROVENT
				For nX := 1 to Len(aCols)
					aCols[nx,nPosProv]:= M->C5_PROVENT
				Next
			Endif	
		Endif
	Endif
EndIf
If lRetorno .And. !Empty(cLoja)
	M->C5_TIPOCLI := IIF(M->C5_TIPO $ "DB",IIF(SA2->A2_TIPO=="J","R",SA2->A2_TIPO),SA1->A1_TIPO)
	
	If !("C5_LOJAENT" $ cLojaV)
		M->C5_LOJAENT := IIF( M->C5_TIPO $ "DB", SA2->A2_LOJA, SA1->A1_LOJA )
	
		If !("C5_LOJAENT" $ cLojaV ) .And.	!("C5_CLIENT" $ cLojaV )
			M->C5_LOJACLI := IIF( M->C5_TIPO $ "DB", A2_LOJA, A1_LOJA )
		Endif	

		If lInterface
			nEndereco     := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_LOJAENT" } )
			If nEndereco > 0
				aTela[Val(Subs(aGets[nEndereco],1,2))] ;
					[Val(Subs(aGets[nEndereco],3,1))*2]:= M->C5_LOJAENT
			EndIf
			nEndereco     := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_LOJACLI" } )
			If nEndereco > 0
				aTela[Val(Subs(aGets[nEndereco],1,2))] ;
					[Val(Subs(aGets[nEndereco],3,1))*2] := M->C5_LOJACLI
			EndIf
			nEndereco     := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_TIPOCLI" } )
			If nEndereco > 0
				aTela[Val(Subs(aGets[nEndereco],1,2))] ;
					[Val(Subs(aGets[nEndereco],3,1))*2] := M->C5_TIPOCLI
			EndIf
		EndIf 
	
		If ( !M->C5_TIPO $ "DB" .And. lRetorno )
			M->C5_TRANSP := SA1->A1_TRANSP
			If lA410PVCL
				cCodVdBlk := Execblock("A410PVCL",.F.,.F.,"A1_VEND")
				If ValType(cCodVdBlk) <> TamSX3("A1_VEND")[3] //Se o retorno tiver o tipo e/ou tamanho diferente do campo assume valor Default
					cCodVdBlk := If(Empty(M->C5_MDCONTR),SA1->A1_VEND,M->C5_VEND1)
				Else //Atualiza variavel de memoria
					M->C5_VEND1 := PADR(cCodVdBlk,TamSX3("A1_VEND")[1])// Garante que a informação tenha o tamanho do campo
				EndIf
			Else //Se o ponto nao existir assume valor Default
				M->C5_VEND1 := If(Empty(M->C5_MDCONTR),SA1->A1_VEND,M->C5_VEND1)
			EndIf	
			aSvArea := GetArea()
			dbSelectArea("SA3")
			SA3->(dbSetOrder(1))
			If ( !MsSeek(xFilial("SA3")+M->C5_VEND1) ) 
				M->C5_VEND1 := Space(TamSX3("A1_VEND")[1])
			Else
				If !RegistroOk("SA3",.F.)
					If !l410Auto
						Aviso(STR0038,STR0172 + M->C5_VEND1 + STR0173,{STR0040}) // "Atencao!"##"Codigo do vendedor: "##" utilizado por este cliente esta bloqueado no cadastro de vendedores!"##"Ok"
					EndIf
					M->C5_VEND1 := Space(TamSX3("A1_VEND")[1])
				EndIf
			EndIf
			RestArea(aSvArea)
			M->C5_COMIS1 := If(Empty(M->C5_MDCONTR),SA1->A1_COMIS,M->C5_COMIS1)
			M->C5_CONDPAG := If(Empty(M->C5_MDCONTR),SA1->A1_COND,M->C5_CONDPAG)
			M->C5_TABELA:= IIF(Empty(SA1->A1_TABELA),"   ",SA1->A1_TABELA)

			If Empty(M->C5_TABELA) .Or. Empty(M->C5_CONDPAG)
				cTabela	:= M->C5_TABELA
				cCondPag	:= M->C5_CONDPAG

				A410TabRNg( SA1->A1_COD, SA1->A1_LOJA, @cTabela, @cCondPag )

				M->C5_CONDPAG	:= Iif(Empty(M->C5_CONDPAG),cCondPag,M->C5_CONDPAG)
				M->C5_TABELA	:= IiF(Empty(M->C5_TABELA),cTabela,M->C5_TABELA)
			EndIf

			M->C5_BANCO := SA1->A1_BCO1
			M->C5_TPFRETE := SA1->A1_TPFRET
			M->C5_INCISS := SA1->A1_INCISS
			If !Empty(SA1->A1_DESC)
				M->C5_DESC1 := SA1->A1_DESC
			Else
				M->C5_DESC1 := 0
			EndIf
			If lInterface
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C5_TRANSP" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := SA1->A1_TRANSP
				EndIf
				nEndereco   := Ascan(aGets,{ |x| Subs(x,9,8) == "C5_VEND1" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := Iif(Empty(cCodVdBlk),SA1->A1_VEND,cCodVdBlk)
				EndIf
				nEndereco    := Ascan(aGets,{ |x| Subs(x,9,9) == "C5_COMIS1" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := TransNum("SA1->A1_COMIS")
				EndIf			
				nEndereco     := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_CONDPAG" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := SA1->A1_COND
				EndIf
				nEndereco   := Ascan(aGets,{ |x| Subs(x,9,9) == "C5_TABELA" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := M->C5_TABELA
				EndIf
				nEndereco   := Ascan(aGets,{ |x| Subs(x,9,8) == "C5_BANCO" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := SA1->A1_BCO1
				EndIf
				nEndereco     := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_TPFRETE" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := M->C5_TPFRETE
				EndIf
				nEndereco    := Ascan(aGets,{ |x| Subs(x,9,9) == "C5_INCISS" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := M->C5_INCISS
				EndIf
				nEndereco   := Ascan(aGets,{ |x| Subs(x,9,9) == "C5_DESC1 " } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := Str(M->C5_DESC1,5,2)
				EndIf			
				IF Empty(M->C5_COMIS1).And.!Empty(M->C5_VEND1)
					dbSelectArea("SA3")
					If MsSeek(xFilial()+M->C5_VEND1,.F.)
						M->C5_COMIS1 := A3_COMIS
						nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C5_COMIS1" } )
						If nEndereco > 0
							If ASC(SubStr(aGets[nEndereco],1,1)) > 64
								nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
								nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
							Else
								nPosicao := Val(SubStr(aGets[nEndereco],1,2))
							EndIf
							aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := TransNum("A3_COMIS")
						EndIf
					EndIf
				EndIf
				If !Empty(M->C5_CONDPAG)
					dbSelectArea("SE4")
					If MsSeek(xFilial()+M->C5_CONDPAG,.F.)
						M->C5_ACRSFIN := E4_ACRSFIN
						M->C5_DESCFI  := E4_DESCFIN						
						nEndereco     := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_ACRSFIN" } )
						If nEndereco > 0
							If ASC(SubStr(aGets[nEndereco],1,1)) > 64
								nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
								nPosicao := Iif(ValType(nEndereco)=='C', Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco ), nEndereco )
							Else
								nPosicao := Val(SubStr(aGets[nEndereco],1,2))
							EndIf
							aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := TransNum("E4_ACRSFIN")
						EndIf			
					EndIf
				EndIf
			EndIf
		ElseIf ( M->C5_TIPO $ "DB" .And. lRetorno )
			M->C5_TRANSP  := SA2->A2_TRANSP
			M->C5_CONDPAG := SA2->A2_COND
			If lInterface
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C5_TRANSP" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := SA2->A2_TRANSP
				EndIf
				nEndereco     := Ascan(aGets,{ |x| Subs(x,9,10) == "C5_CONDPAG" } )
				If nEndereco > 0
					If ASC(SubStr(aGets[nEndereco],1,1)) > 64
						nPosicao := Str(ASC(SubStr(aGets[nEndereco],1,1))-55,2)+SubStr(aGets[nEndereco],2,1)
						nPosicao := Iif(ValType(nEndereco)=='C', Val(nEndereco), nEndereco )
					Else
						nPosicao := Val(SubStr(aGets[nEndereco],1,2))
					EndIf
					aTela[nPosicao][Val(Subs(aGets[nEndereco],3,1))*2] := SA2->A2_COND
				EndIf
			EndIf
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Atualiza o Rodape                                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorno .And. lInterface)
	a410ChgCli(M->C5_CLIENTE+M->C5_LOJACLI)
	Ma410Rodap()
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a entrada da rotina                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !lRetorno )
	RestArea(aAreaSA1)
EndIf

RestArea(aArea)

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410VldFab³ Autor ³ Eduardo Riera         ³ Data ³05.01.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao do Fabricante no Mata410                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: Logico                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410VldFab()

Local aArea 	:= GetArea()
Local lRetorno := .F.
Local nPosFab  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_CODFAB"})
Local nPosLoja := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOJAFA"})
Local cRead 	:= ReadVar()
Local cVariavel:= &(ReadVar())

If ( nPosFab > 0 .And. nPosLoja > 0 )
	If ( "_LOJAFA"$cRead )
		dbSelectArea("SA1")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SA1")+aCols[n][nPosFab]+cVariavel) )
			lRetorno := .T.
		EndIf
	Else
		dbSelectArea("SA1")
		dbSetOrder(1)
		If ( SA1->A1_COD == cVariavel .Or. MsSeek(xFilial("SA1")+cVariavel) )
			aCols[n][nPosLoja] := SA1->A1_LOJA
			lRetorno := .T.
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Retorna as condicoes de entrada                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aArea)

If ( !lRetorno )
	Help(" ",1,"REGNOIS")
EndIf

Return(lRetorno)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410SNfOri³ Autor ³Eduardo Riera          ³ Data ³01.03.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula o Saldo da Nota Original informada.                 ³±±
±±³          ³Calcula o Saldo do poder de terceiros.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: Quantidade ja utilizada                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Cliente/Fornecedor                                   ³±±
±±³          ³ExpC2: Loja                                                 ³±±
±±³          ³ExpC3: Nota Fiscal Original                                 ³±±
±±³          ³ExpC4: Serie Original                                       ³±±
±±³          ³ExpC5: Item da Nota Original                                ³±±
±±³          ³ExpC6: Codigo do Produto                                    ³±±
±±³          ³ExpC7: Identificador do Poder de Terceiro                   ³±±
±±³          ³ExpC8: Local Padrao                                         ³±±
±±³          ³ExpC7: Alias do SD1                                    (OPC)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410SNfOri(cCliFor,cLoja,cNfOri,cSerOri,cItemOri,cProduto,cIdentB6,cLocal,cAliasSD1,aPedido,l410ProcDv)

Local aArea 	:= GetArea()
Local aAreaSD1	:= SD1->(GetArea())
Local aAreaSC6	:= SC6->(GetArea())
Local aAreaSF4	:= SF4->(GetArea())
Local aAreaSB6	:= SB6->(GetArea())
Local aStruSC6  := {}
Local aCq       := {}
Local aRetCq    := {}
Local nX        := 0
Local nQuant	:= 0
Local nValor    := 0
Local nPQtdVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"  .Or. AllTrim(x[2])=="D2_QUANT"})
Local nPPrcVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"  .Or. AllTrim(x[2])=="D2_PRCVEN"})
Local nPNfOri 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NFORI"   .Or. AllTrim(x[2])=="D2_NFORI"})
Local nPSerOri	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_SERIORI" .Or. AllTrim(x[2])=="D2_SERIORI"})
Local nPItemOri := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMORI" .Or. AllTrim(x[2])=="D2_ITEMORI"})
Local nPIdentb6 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_IDENTB6" .Or. AllTrim(x[2])=="D2_IDENTB6"})
Local nPTES     := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"     .Or. AllTrim(x[2])=="D2_TES"})
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO" .Or. AllTrim(x[2])=="D2_COD"})
Local nPLote    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE" .Or. AllTrim(x[2])=="D2_NUMLOTE"})
Local nPLocal   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"   .Or. AllTrim(x[2])=="D2_LOCAL"})
Local nUsado	:= 0
Local nCntFor	:= 0
Local cCq       := SuperGetMv("MV_CQ")
Local cQuery    := ""
Local cAliasSC6 := "SC6"
Local lQuery    := .F.
Local aSaldoCQ  := {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
Local nQtdCols  := 0
Local nQtdPed   := 0

DEFAULT aPedido   := {}
DEFAULT cIdentB6  := CriaVar("C6_IDENTB6",.F.)
DEFAULT cAliasSD1 := "SD1"
DEFAULT l410ProcDv:= .F.	//Se for .T., está vindo da rotina de "Retornar" do pedido de vendas (Função: A410ProcDv)

If Type("M->C5_NUM") == "U"
	M->C5_NUM := ""
Endif	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tratamento para devolucao                                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If  ( !Empty(cItemOri) )
	dbSelectArea("SD1")
	dbSetOrder(1)
	If ( xFilial("SD1")+cNfOri+cSerOri+cCliFor+cLoja+cProduto+cItemOri == ;
			(cAliasSD1)->D1_FILIAL+(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_ITEM .Or. ;
			MsSeek(xFilial("SD1")+cNfOri+cSerOri+cCliFor+cLoja+cProduto+cItemOri) )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica quantidade ja faturada independente da TES                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nQuant += (cAliasSD1)->D1_QUANT
		nQuant -= (cAliasSD1)->D1_QTDEDEV
		nValor += (cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC
		nValor -= (cAliasSD1)->D1_VALDEV
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica quantidade no CQ                                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (cAliasSD1)->D1_LOCAL == cCQ
			If __lPyme
				aCQ := fLibRejCQ((cAliasSD1)->D1_COD,(cAliasSD1)->D1_DOC,(cAliasSD1)->D1_SERIE,(cAliasSD1)->D1_FORNECE,(cAliasSD1)->D1_LOJA,Nil,(cAliasSD1)->D1_ITEM)
			Else
				aCQ := fLibRejCQ((cAliasSD1)->D1_COD,(cAliasSD1)->D1_DOC,(cAliasSD1)->D1_SERIE,(cAliasSD1)->D1_FORNECE,(cAliasSD1)->D1_LOJA,(cAliasSD1)->D1_NUMLOTE,(cAliasSD1)->D1_ITEM)				
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a quantidade em  Pedido de Venda                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC6")
		dbSetOrder(5)
		#IFDEF TOP
			lQuery := .T.
			cAliasSC6 := "A410SNFORI"
			aStruSC6  := SC6->(dbStruct())
			cQuery := "SELECT SC6.C6_FILIAL,SC6.C6_CLI,SC6.C6_LOJA,SC6.C6_PRODUTO,"
			cQuery += "SC6.C6_NFORI,SC6.C6_SERIORI,SC6.C6_ITEMORI,SC6.C6_NUM,"
			cQuery += "SC6.C6_QTDVEN,SC6.C6_QTDENT,SC6.C6_QTDEMP,SC6.C6_PRCVEN,"
			cQuery += "SC6.C6_NOTA "
			cQuery += "FROM "+RetSqlName("SC6")+" SC6 "
			cQuery += "WHERE SC6.C6_FILIAL = '"+xFilial("SC6")+"' AND "
			cQuery += "SC6.C6_CLI='"+cCliFor+"' AND "
			cQuery += "SC6.C6_LOJA='"+cLoja+"' AND "
			cQuery += "SC6.C6_PRODUTO='"+cProduto+"' AND "
			cQuery += "SC6.C6_NFORI='"+cNfOri+"' AND "
			cQuery += "SC6.C6_SERIORI='"+cSerOri+"' AND "
			cQuery += "SC6.C6_ITEMORI='"+cItemOri+"' AND "
			cQuery += "SC6.C6_BLQ <> 'R' AND "
			cQuery += "SC6.D_E_L_E_T_=' ' "
			cQuery += "ORDER BY "+SqlOrder(SC6->(IndexKey()))
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC6,.T.,.T.)
			
			For nX := 1 To Len(aStruSC6)
				If FieldPos(aStruSC6[nX][1])<>0 .And. aStruSC6[nX][2]<>"C"
					TcSetField(cAliasSC6,aStruSC6[nX][1],aStruSC6[nX][2],aStruSC6[nX][3],aStruSC6[nX][4])
				EndIf
			Next nX
			
		#ELSE
			MsSeek(xFilial("SC6")+cCliFor+cLoja+cProduto+cNfOri+cSerOri+cItemOri)
		#ENDIF
		While ( !Eof() .And. xFilial("SC6") == (cAliasSC6)->C6_FILIAL .And.;
				cCliFor == (cAliasSC6)->C6_CLI .And.;
				cLoja == (cAliasSC6)->C6_LOJA .And.;
				cProduto == (cAliasSC6)->C6_PRODUTO .And.;
				cNfOri == (cAliasSC6)->C6_NFORI .And.;
				cSerOri == (cAliasSC6)->C6_SERIORI .And.;
				cItemOri == (cAliasSC6)->C6_ITEMORI )
			If ( M->C5_NUM != (cAliasSC6)->C6_NUM )			
				If aScan(aPedido,{|x| x == (cAliasSC6)->C6_NUM}) == 0  .And. (Max((cAliasSC6)->C6_QTDVEN,(cAliasSC6)->C6_QTDEMP)-(cAliasSC6)->C6_QTDENT) > 0
					aAdd(aPedido,(cAliasSC6)->C6_NUM)
				EndIf
				nQuant -= (Max((cAliasSC6)->C6_QTDVEN,(cAliasSC6)->C6_QTDEMP)-(cAliasSC6)->C6_QTDENT)
				nValor -= (cAliasSC6)->C6_PRCVEN*Max((Max((cAliasSC6)->C6_QTDVEN,(cAliasSC6)->C6_QTDEMP)-(cAliasSC6)->C6_QTDENT),IIf(Empty((cAliasSC6)->C6_NOTA).And.(cAliasSC6)->C6_QTDVEN==0,1,0))
			Else
				nQuant += (cAliasSC6)->C6_QTDENT
				nValor += (cAliasSC6)->C6_PRCVEN*Max((cAliasSC6)->C6_QTDENT,IIf(Empty((cAliasSC6)->C6_NOTA).And.(cAliasSC6)->C6_QTDVEN==0,1,0))
			EndIf
			dbSelectArea(cAliasSC6)
			dbSkip()
		EndDo
		If lQuery
			dbSelectArea(cAliasSC6)
			dbCloseArea()
			dbSelectArea("SC6")
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a quantidade no Pedido Atual                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nUsado := Len(aHeader)
		For nCntFor := 1  To Len(aCols)
			If ( !aCols[nCntFor][nUsado+1] .And. nPNfOri != 0 .And.;
					nPSerOri!= 0 .And.;
					nPItemOri!=0 .And. n <> nCntFor)
				If ( aCols[nCntFor][nPNfOri] 		== cNfOri .And.;
						aCols[nCntFor][nPSerOri]	== cSerOri .And.;
						aCols[nCntFor][nPItemOri]	== cItemOri )
					nQuant -= aCols[nCntFor][nPQtdVen]
					nValor -= aCols[nCntFor][nPPrcVen]*aCols[nCntFor][nPQtdVen]
				EndIf
			EndIf
		Next nCntFor
	EndIf
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tratamento para  Poder de Terceiros - nao se deve verificar F4_ESTOQUE  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica o Saldo do Poder de Terceiro no SB6 com identificador          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nQuant := 0
	nValor := 0
	dbSelectArea("SB6")
	dbSetOrder(3)
	If ( MsSeek(xFilial("SB6")+cIdentB6+cProduto+"R",.F.) )
		nQuant := SB6->B6_SALDO - SB6->B6_QULIB
		nValor := ( nQuant * SB6->B6_PRUNIT )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a quantidade em  Pedido de Venda                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC6")
		dbSetOrder(5)
		If ( MsSeek(xFilial("SC6")+cCliFor+cLoja+cProduto+cNfOri+cSerOri) )
			While ( !Eof() .And. xFilial("SC6")	== SC6->C6_FILIAL .And.;
					cCliFor			== SC6->C6_CLI		.And.;
					cLoja				== SC6->C6_LOJA	.And.;
					cProduto			== SC6->C6_PRODUTO.And.;
					cNfOri			== SC6->C6_NFORI	.And.;
					cSerOri			== SC6->C6_SERIORI )
				If  ( cIdentB6 ==  SC6->C6_IDENTB6 )
					dbSelectArea("SF4")
					dbSetOrder(1)
					If ( MsSeek(xFilial("SF4")+SC6->C6_TES) )
						If ( SF4->F4_PODER3 == "D" )
							If ( M->C5_NUM != SC6->C6_NUM )
								If aScan(aPedido,{|x| x == (cAliasSC6)->C6_NUM}) == 0 .And.  (Max((cAliasSC6)->C6_QTDVEN,(cAliasSC6)->C6_QTDEMP)-(cAliasSC6)->C6_QTDENT) > 0
									aAdd(aPedido,(cAliasSC6)->C6_NUM)
								EndIf
								nQuant -= (If(SC6->C6_QTDEMP>0,0,SC6->C6_QTDVEN)-SC6->C6_QTDENT)
								nValor -= ((If(SC6->C6_QTDEMP>0,0,SC6->C6_QTDVEN)-SC6->C6_QTDENT)*SB6->B6_PRUNIT)
								nQtdPed += SC6->C6_QTDVEN
							Else
								nQuant += SC6->C6_QTDENT
								nQuant += SC6->C6_QTDEMP
								nValor += ((SC6->C6_QTDENT)*SB6->B6_PRUNIT)
								nValor += ((SC6->C6_QTDEMP)*SB6->B6_PRUNIT)
								nQtdPed += If(SC6->C6_QTDENT>0,SC6->C6_QTDVEN-SC6->C6_QTDENT,0)
							EndIf
						EndIf
					EndIf
				EndIf
				dbSelectArea("SC6")
				dbSkip()
			EndDo
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a quantidade no Pedido Atual                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nUsado := Len(aHeader)
		For nCntFor := 1  To Len(aCols)
			If ( !aCols[nCntFor][nUsado+1] .And. nPIdentB6 != 0 )
				If ( aCols[nCntFor][nPIdentB6] == cIdentB6 ) .And. cProduto == aCols[nCntFor][nPProduto]
					dbSelectArea("SF4")
					dbSetOrder(1)
					If ( MsSeek(xFilial("SF4")+aCols[nCntFor][nPTes])  )
						If ( SF4->F4_PODER3 == "D" )
							nQuant -= aCols[nCntFor][nPQtdVen]
							nValor += aCols[nCntFor][nPQtdVen]*SB6->B6_PRUNIT
							nQtdCols += aCols[nCntFor][nPQtdVen]
						EndIf
					EndIf
				EndIf
			EndIf
		Next nCntFor
		dbSelectArea("SD1")
		dbSetOrder(4)
		If MsSeek(xFilial("SD1")+SB6->B6_IDENT)
			aSaldoCQ := A175CalcQt(SD1->D1_NUMCQ, SB6->B6_PRODUTO, SB6->B6_LOCAL)
		Endif	
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Nao ha como otimizar o codigo pois pode haver poder de terceiro         ³
		//³gravados c/ identificador ou nao, assim somente eh possivel calcular  o ³
		//³saldo verificando  todas os  pedidos deste  cliente  com este  produto  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SB6")
		dbSetOrder(2)
		MsSeek(xFilial("SB6")+cProduto+cCliFor+cLoja+"R")
		While ( !Eof() .And.	xFilial("SB6")	==	SB6->B6_FILIAL .And.;
				cProduto			== SB6->B6_PRODUTO .And.;
				cCliFor			== SB6->B6_CLIFOR .And.;
				cLoja			 	== SB6->B6_LOJA .And.;
				"R"				==	SB6->B6_PODER3 )
			If !(	( M->C5_TIPO == "B" .And. SB6->B6_TPCF != "F") .Or.;
					( M->C5_TIPO == "N" .And. SB6->B6_TPCF != "C") )
				nQuant += ( SB6->B6_SALDO - SB6->B6_QULIB )
				nValor += ( SB6->B6_SALDO - SB6->B6_QULIB )*SB6->B6_PRUNIT
			EndIf
			dbSelectArea("SB6")
			dbSkip()
		EndDo
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a quantidade em Pedido de Venda                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC6")
		dbSetOrder(5)
		If ( MsSeek(xFilial("SC6")+cCliFor+cLoja+cProduto) )
			While ( !Eof() .And. xFilial("SC6")	== SC6->C6_FILIAL .And.;
					cCliFor	== SC6->C6_CLI	.And.;
					cLoja == SC6->C6_LOJA	.And.;
					cProduto == SC6->C6_PRODUTO )
				dbSelectArea("SF4")
				dbSetOrder(1)
				MsSeek(xFilial("SF4")+SC6->C6_TES)
				If ( SF4->F4_PODER3 == "D" )
					If ( M->C5_NUM != SC6->C6_NUM )
						nQuant -= (SC6->C6_QTDVEN-SC6->C6_QTDENT)
						nValor -= IIf(Empty(SC6->C6_NOTA).And.SC6->C6_QTDVEN==0,1,SC6->C6_QTDVEN-SC6->C6_QTDENT)*SC6->C6_PRCVEN
					Else
						nQuant += SC6->C6_QTDENT
						nValor += IIf(Empty(SC6->C6_NOTA).And.SC6->C6_QTDVEN==0,1,SC6->C6_QTDENT)*SC6->C6_PRCVEN
					EndIf
				EndIf
				dbSelectArea("SC6")
				dbSkip()
			EndDo
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica a quantidade no Pedido Atual                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nUsado := Len(aHeader)
		For nCntFor := 1  To Len(aCols)
			If ( !aCols[nCntFor][nUsado+1] .And. nPIdentB6 != 0 )
				dbSelectArea("SF4")
				dbSetOrder(1)
				If ( MsSeek(xFilial("SF4")+aCols[nCntFor][nPTes])  )
					If ( SF4->F4_PODER3 == "D"  )
						nQuant -= aCols[nCntFor][nPQtdVen]
						nValor -= IIf(Empty(SC6->C6_NOTA).And.SC6->C6_QTDVEN==0,1,aCols[nCntFor][nPQtdVen])*aCols[nCntFor][nPPrcVen]
						nQtdCols += aCols[nCntFor][nPQtdVen]
					EndIf
				EndIf
			EndIf
		Next nCntFor
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Prepara o array com os dados do controle de qualidade                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nCntFor := 1  To Len(aCq)
	If aCq[nCntFor,1] > 0 	.And. aCq[nCntFor,2] > 0
		AADD(aRetCq,{aCq[nCntFor,2],ConvUm(cProduto,aCq[nCntFor,2],0,2),aCq[nCntFor,3]})
	EndIf
Next nCntFor
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a entrada da rotina                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAreaSB6)
RestArea(aAreaSF4)
RestArea(aAreaSC6)
RestArea(aAreaSD1)
RestArea(aArea)
Return({NoRound(nQuant,TamSX3("C6_QTDVEN")[2]),IIf(!l410ProcDv,a410Arred(nValor,"C6_VALOR"),nValor),If(Len(aRetCq)>0,aRetCq,""),aSaldoCQ,nQtdCols,nQtdPed})


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410ChgCli³ Autor ³Henry Fila             ³ Data ³09.06.03  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Armazena o cliente atual do pedido para verificar se houve  ³±±
±±³          ³troca.                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpC1: Codigo do cliente + Loja                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Codigo do Cliente+Loja                               ³±±
±±³          ³       Sendo que se nao passado o parametro a funcao retorna³±±
±±³          ³       o atual, passando o parametro ela armazena o novo    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410ChgCli(cCliLoja)

STATIC _ST_CLIANT := ""

If ValType(cCliLoja) == "C"
	_ST_CLIANT := cCliLoja
Else
	cCliLoja := _ST_CLIANT
Endif

Return(cCliLoja)		


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410EndTra³ Autor ³Henry Fila             ³ Data ³17.06.03  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Traz o endereco padrao da transportadora caso esteja        ³±±
±±³          ³preenchido                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410EndTra()

Local nPEstFis      := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TPESTR"})
Local nPEndPad      := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ENDPAD"})
Local nPLocal       := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPProduto     := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nX            := 0
Local nMaxArray     := Len(aHeader)+1

If !Empty(M->C5_TRANSP)
	SA4->(DbSetOrder(1))
	If SA4->(MsSeek(xFilial("SA4")+M->C5_TRANSP))
		If !Empty(SA4->A4_ESTFIS) .And. !Empty(SA4->A4_ENDPAD) .And. !Empty(SA4->A4_LOCAL) .And.;
			nPEndPad > 0 .And. nPEstFis > 0 .And. nPLocal > 0
			For nX := 1 to Len(aCols)
				If !aCols[nX][nMaxArray].And. !Empty(aCols[nX][nPProduto])
					aCols[nX][nPEndPad] := SA4->A4_ENDPAD
					aCols[nX][nPEstFis] := SA4->A4_ESTFIS
					aCols[nX][nPLocal]  := SA4->A4_LOCAL
				Endif
			Next
		Endif
	Endif
Endif		

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410VldPMS³ Autor ³ Reynaldo Miyashita    ³ Data ³14.06.2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina para validar as colunas do browse de itens no pedido ³±±
±±³          ³ de venda. Colunas de Projeto, EDT e Tarefa referentes      ³±±
±±³          ³ ao sigapms                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lOk - Se as colunas do browse estao certas                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cC6_PROJPMS - projeto a ser validado                       ³±±
±±³          ³ cC6_EDTPMS  - codigo da EDT a ser validada                 ³±±
±±³          ³ cC6_TASKPMS - codigo da tarefa a ser validada              ³±±
±±³          ³ cMovPrj     - movimentacao do projeto(SF4->F4_MOVPRJ)      ³±±
±±³          ³ cC5_TIPO    - tipo do pedido de venda                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a410VldPMS( cC6_PROJPMS ,cC6_EDTPMS ,cC6_TASKPMS, cMovPrj, cC5_TIPO)
Local lOk   := .F.
Local aArea := GetArea()
DEFAULT cMovPrj := "1"

If Empty(cC6_PROJPMS)
	//nao esta amarrado ao projeto
	lOk := .T.
Else
	AF8->(dbSetOrder(1))
	If AF8->(dbSeek(xFilial("AF8")+cC6_PROJPMS ))

		Do Case
			Case (!Empty(cC6_EDTPMS) .AND. !Empty(cC6_TASKPMS))
				//EDT e Tarefa preenchidas
				HELP("   ",1,"VLDPMSFAT",,STR0088 + CRLF + STR0089 ,1) //"Não pode existir referência do Código da" " EDT e Codigo da Tarefa no mesmo item."

			Case (Empty(cC6_EDTPMS) .AND. Empty(cC6_TASKPMS))
				//EDT e Tarefa naum preenchidas
				HELP("   ",1,"VLDTSKEXIST",,STR0110 ,1) //"O item de venda não pode estar amarrado unicamente a um projeto!"

			Case ( cC5_TIPO=="D" .And. !(cMovPrj=="4") )
				//pedido de devolucao de compra e TES nao eh de Devolucao do Projeto
				HELP("   ",1,"VLDPRJDEV",,STR0112,1) //"A TES deve ser de Devolucao de Despesa do projeto! Verifique a TES!"
				
			Case !Empty(cC6_EDTPMS)
				//EDT preenchida
				AFC->(DbSetOrder(1))
				If AFC->(DbSeek(xFilial("AFC")+AF8->AF8_PROJET+AF8->AF8_REVISA+cC6_EDTPMS ))
					// a EDT eh faturavel
					If AFC->AFC_FATURA=="1"
						lOk := .T.
					Else
						HELP("   ",1,"VLDEDTFAT")
					EndIf
				Else
					HELP("   ",1,"VLDEDTEXIST",,STR0090 ,1) //"O Código da EDT informado não existe."
				EndIf

			Case !Empty(cC6_TASKPMS)
				//Tarefa preenchida
	        	AF9->(dbSetOrder(1))
				If AF9->(dbSeek(xFilial("AF9")+AF8->AF8_PROJET+AF8->AF8_REVISA+cC6_TASKPMS ))
					// a TAREFA eh faturavel
					If AF9->AF9_FATURA=="1"
						lOk := .T.	
					Else
						HELP("   ",1,"VLDTSKRFAT") //Esta tarefa nao tem permissao para ser faturada.
					EndIf
				Else
					HELP("   ",1,"VLDTSKEXIST",,STR0091 ,1) //"O Código de Tarefa informado não existe."
				EndIf
		EndCase

	Else
		//O projeto nao existe
		HELP("   ",1,"VLDPRJEXIST",,STR0092 ,1) //"O Código de Projeto informado não existe."
	EndIf
EndIf

RestArea( aArea )

Return( lOk )
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³GetProvEnt³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna Provincia de Entrega para alimentar os itens da     ³±±
±±³          ³ nota e pedidos.                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ cProv - Provincia                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cTab - Tabela                                              ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function GetProvEnt(cTab)

Local cProv := ""

If cPaisLoc == "ARG"
	Do Case
		Case cTab == "SC6"
			If SC5->(FieldPos("C5_PROVENT")) > 0 .And. SC6->(FieldPos("C6_PROVENT")) > 0
				If Type("M->C5_PROVENT") <> "U" 
					cProv := M->C5_PROVENT
				Endif
			Endif
		Case cTab == "SC7"
			If SC7->(FieldPos("C7_PROVENT")) > 0 
				If Type("cA120ProvEnt") == "C"
					cProv := cA120ProvEnt
				Endif
			Endif
		Case cTab == "SC8"
			If SC8->(FieldPos("C8_PROVENT")) > 0 
				If Type("cA150ProvEnt") == "C"
					cProv := cA150ProvEnt
				Endif
			Endif
		Case cTab == "SD1"
			If SF1->(FieldPos("F1_PROVENT")) > 0 .And. SD1->(FieldPos("D1_PROVENT")) > 0
				If Type("M->F1_PROVENT") == "C"
					cProv := M->F1_PROVENT
				Endif
			Endif
		Case cTab == "SD2"
			If SF2->(FieldPos("F2_PROVENT")) > 0 .And. SD2->(FieldPos("D2_PROVENT")) > 0
				If Type("M->F2_PROVENT") == "C"
					cProv := M->F2_PROVENT
				Endif
			Endif
	EndCase
Endif

Return(cProv)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ProvEntPV ³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualiza os itens do Pedido de Venda e Valida Provincia     ³±±
±±³          ³ informada no cabecalho.                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ProvEntPV()

Local lRet := .T.
Local nX   := 0
Local nPosProv := Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_PROVENT"})
Local nPosTes := Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_TES"})
Local cCpo     := ""
Local cProv    := ""
Local cTes     := ""
Local nProv    := 0

lRet := Vazio() .Or. M->C5_PROVENT == "99" .Or. ExistCpo("SX5","12"+M->C5_PROVENT) 
If lRet .And. nPosProv > 0
	cCpo  := ReadVar()
	cProv := &cCpo
	For nX := 1 to Len(aCols)
		cTes := aCols[nX,nPosTes]
		If VerProEnIt(cProv,cTes,.F.,.F.)
			aCols[nX,nPosProv]:= cProv
		Else
			nProv++
		endif
	Next
	If Type('oGetDad:oBrowse')<>"U"
		oGetDad:oBrowse:Refresh()
	Endif
	If nProv > 0
		MsgAlert(STR0117,STR0118)//("Alguns itens não tiveram a província alterada pois possuem impostos gravados em um mesmo campo.","Atenção")
	Endif
Endif 
Return lRet
           
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ProEntItPV³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualiza a provincia de entrega						      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ProEntItPV()
Local lRet := .T.
Local nX   := 0
Local nPosTes := Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_TES"})
Local cCpo     := ""
Local cProv    := ""

If nPosTes > 0
	cCpo  := ReadVar()
	cProv := &cCpo
	lRet  := ValProvEnt(cProv,aCols[n,nPosTes])
Endif
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ProEntItPV³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualiza/Valida o TES									      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ProvTesPV()
Local lRet		:= .T.
Local nPosProv := Ascan(aHeader,{|x| Alltrim(x[2]) == "C6_PROVENT"})
Local cCpo		:= ""
Local cProv		:= ""

cCpo  := ReadVar()
cTes := &cCpo
If nPosProv > 0
	cProv := aCols[n,nPosProv]
	lRet := VerProEnIt(cProv,cTes,.T.,.F.)
Endif
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a410RvPlanºAutor  ³ Daniel Leme        º Data ³  03/21/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se há integração com revisão de Planilha de For-  º±±
±±º          ³ mação de preços através de ligação entre tabela de preço   º±±
±±º          ³ e Publicação de Preços e interpreta a integração           º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410A                                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410RvPlan(cTabPrec,cProduto,lClear,lDeleta)
Local lRet := .T.
Local lSvCols, aSvCols, aSvHead, nSvN, nLin, aCombo, aAreas, nDif
Local nPosQtd, nPosCpo, nPosStatic
Local bError

Default lClear		:= .F.
Default lDeleta	:= .F.

Static a410IntRvPlan
Static aDadRevPlan

If a410IntRvPlan == Nil
	a410IntRvPlan := 	(Type("l410Auto") == "U" .Or. l410Auto == .F.) ;
							.And. (Type("l416Auto") == "U" .Or. l416Auto == .F.) ;
							.And. DA0->(FieldPos("DA0_FILPUB")) > 0	.And. DA0->(FieldPos("DA0_CODPUB")) > 0;
							.And. SuperGetMV("MV_REVPLAN",.F.,.F.) 	.And. FindFunction("MC010FORM2");
							.And. SAX->(FieldPos("AX_CODPLA")) > 0 	.And. SAX->(FieldPos("AX_REVPLA")) > 0;
							.And. SCO->(FieldPos("CO_INTPV")) > 0
EndIf

If a410IntRvPlan .And. Type("n") == "N" .And. n > 0
	
	If lClear .Or. aDadRevPlan == Nil
		aDadRevPlan := {}
	EndIf
		
	If (!aTail(aCols[n]) .Or. (aTail(aCols[n]) .And. aScan( aDadRevPlan, {|x| x[1] == n }) >= 0 ));
		.And. !Empty(cProduto) .And. !Empty(cTabPrec)
		
		aAreas := {	DA0->(GetArea()),;
						SAX->(GetArea()),;
						SCO->(GetArea()),;
						SB1->(GetArea()),;
						SDY->(GetArea()),;
						GetArea()}

		nPosQtd := GdFieldPos("C6_QTDVEN")

		SB1->( DbSetOrder( 1 ) ) //-- B1_FILIAL+B1_COD
		If SB1->( MsSeek( xFilial("SB1") + cProduto ) )
			DA0->( DbSetOrder( 1 ) ) //-- DA0_FILIAL+DA0_CODTAB
			If DA0->(MsSeek( xFilial("DA0") + cTabPrec)) .And. !Empty(DA0->DA0_CODPUB)
		
				SAX->( DbSetOrder( 1 ))
				If SAX->( MsSeek( DA0->(DA0_FILPUB+DA0_CODPUB) ) ) .And. !Empty(SAX->AX_CODPLA)
		
					SCO->( DbSetOrder( 1 ) ) //-- CO_FILIAL+CO_CODIGO+CO_REVISAO+CO_LINHA
					If SCO->( MsSeek( xFilial("SCO",DA0->DA0_FILPUB) + SAX->(AX_CODPLA+AX_REVPLA) + StrZero( 1, TamSX3("CO_LINHA")[1] ) ) )
						
						If !aTail(aCols[n])
		
							Private cArqMemo   := SCO->CO_NOME
							Private lDirecao   := .T.  
							Private nQualCusto := 1
							Private cProg      := "R430"
				
							Pergunte( "MTC010", .F. )  //-- Este pergunte serve para a funcao MC010Forma, sem os MV_PARXX ocorre error log.
							If lSvCols := (Type("aCols") == "A" .And. Type("aHeader") == "A")
								aSvCols	:= aClone( aCols )
								aSvHead	:= aClone( aHeader )
								nSvN		:= n
								n := 1
							EndIf
				
							bError := ErrorBlock( {|| A410RvErr( @lRet, .F. )  } )
							Begin Sequence
								//-- Inicializa conteudo da publicação na Formação
								C010ClrVLine()
								SDY->( DbSetOrder(1)) //-- DY_FILIAL+DY_CODIGO+DY_PRODUTO+DY_SEQUEN
								SDY->( MsSeek( DA0->(DA0_FILPUB+DA0_CODPUB) + cProduto ) )
								Do While SDY->(!Eof()) .And. SDY->(DY_FILIAL+DY_CODIGO+DY_PRODUTO) == DA0->(DA0_FILPUB+DA0_CODPUB) + cProduto
									If !Empty( SDY->DY_LINHA )
										C010SetVLin( Val(SDY->DY_LINHA) + 1, SDY->DY_VALOR )
									Else
										MA317IniPr( SDY->DY_CODPRC, SDY->DY_VALOR ) 
									EndIf

									SDY->(DbSkip())
								EndDo
								
								//-- Faz Chamada ao Cálculo da Planilha de Formação de Preços
								aVet := MC010Form2( "SB1", SB1->( RecNo() ), 98,,, .F. )
			
								//-- Limpa Dados estáticos da Planilha de Formação e do Cadastro de Itens de Precificação x Categoria x Produto
								C010ClrVLine()
								MA317FimPr()

							End Sequence
								
							If lSvCols
								aCols		:= aClone( aSvCols )
								aHeader	:= aClone( aSvHead )
								n			:= nSvN			
							EndIf
							Pergunte("MTA410",.F.)
						EndIf
			
						If lRet
							bError := ErrorBlock( {|| A410RvErr( @lRet, .F. )  } )
							Begin Sequence
								Do While SCO->(!Eof()) .And. SCO->(CO_FILIAL+CO_CODIGO+CO_REVISAO) == xFilial("SCO",DA0->DA0_FILPUB) + SAX->(AX_CODPLA+AX_REVPLA)
									
									nLin := Val(SCO->CO_LINHA) + 1
									If aCombo == Nil
										aCombo := aClone(Mata315Cmb( .T., .T. ))
									EndIf
									
									If !Empty(SCO->CO_INTPV) .And. SCO->CO_INTPV != "0" 
									
										cCampo 		:= aCombo[Val(SCO->CO_INTPV)]
										nPosStatic	:= 0
										nDif			:= 0
										
										If aTail(aCols[n]) .And. (nPosStatic := aScan( aDadRevPlan, {|x| x[1] == n .And. x[2] == nLin  })) > 0

											If Left(cCampo,3) == "C5_"
	
												&("M->"+cCampo) := Max( &("M->"+cCampo)-aDadRevPlan[nPosStatic][3], 0 )
												aDadRevPlan[nPosStatic][3] := 0

											EndIf
											
										ElseIf !aTail(aCols[n]) .And. Len(aVet) >= nLin .And. ValType(aVet[nLin][6]) == "N"

											If (nPosStatic := aScan( aDadRevPlan, {|x| x[1] == n .And. x[2] == nLin  })) == 0
												aAdd( aDadRevPlan,{n,nLin,0,aCols[n][nPosQtd]})
												nPosStatic := Len(aDadRevPlan)
												If !lDeleta
													nDif := aVet[nLin][6] * aCols[n][nPosQtd]
												EndIf
											Else
												nDif := ( aVet[nLin][6] * aCols[n][nPosQtd] ) - aDadRevPlan[nPosStatic][3]
											EndIf
			
											If Left(cCampo,3) == "C5_"
	
												&("M->"+cCampo) := Max( &("M->"+cCampo)+nDif, 0 )
												aDadRevPlan[nPosStatic][3] := aVet[nLin][6] * aCols[n][nPosQtd]
												aDadRevPlan[nPosStatic][4] := aCols[n][nPosQtd]

											ElseIf Left(cCampo,3) == "C6_" .And. lSvCols;
													 .And. n <= Len(aCols) .And. (nPosCpo := GdFieldPos(cCampo)) > 0
													 
												aCols[n][nPosCpo] := aVet[nLin][6]
												aDadRevPlan[nPosStatic][3] := aVet[nLin][6]
												aDadRevPlan[nPosStatic][4] := aCols[n][nPosQtd]
											EndIf
										EndIf
									EndIf
	
									SCO->(DbSkip())
								EndDo
							End Sequence
				
							If lRet 
								If Type("oGetDad") == "O"
									oGetDad:Refresh(.T.)
								EndIf
								If Type("oGetPV") == "O"
									oGetPV:Refresh()
								EndIf	
							EndIf
							
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
		aEval( aAreas, { |x| RestArea(x) } )
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410RvErr ºAutor  ³ Daniel Leme        º Data ³  03/21/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Tratamento de erros                                        º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410A                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410RvErr( uRet, uVal )

If uVal == Nil
	uRet := Nil
Else
	uRet := uVal
EndIf

Break

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410TabRNgºAutor  ³ Daniel Leme        º Data ³  03/21/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Interpreta regra de negócio para sugerir tabela de preço   º±±
±±º          ³ e condição de pagamento a partir desta                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410A                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A410TabRNg( cCliente, cLoja, cParCodTab, cParCondPag )
Local aArea      := GetArea()
Local aAreaACS   := ACS->(GetArea())
Local aAreaACT   := ACT->(GetArea())
Local cCodReg    := ""
Local bCondic    := { || .T. } 

Local cHoraAtual := Left( Time(), 5 )  
Local cDtHrAtual := DToS( dDataBase ) + cHoraAtual 
Local cDataAtual := DToS( dDataBase )

Local cDataVazia := Space( Len( DToS( ACS->ACS_DATATE ) ) ) 
Local cAliasACS  := ""
Local cGrpVen    := ""

Local dDataVazia := CToD( "" )    

Local lContinua  := .T.
Local nLoop      := 0

Local cCondPag   := ""
Local cCodTab    := "" 
Local nPos       := 0
Local aTitulos   := {}
Local aRegras    := {}

//-- Se for sinalizado que deve gatilhar dados a partir da regra de negocio, verifica se é possível.
If SuperGetMv("MV_GREGNEG",,.F.) .And.;
	(Type("l410Auto") == "U" .Or. l410Auto == .F.) .And.;
	(Type("l416Auto") == "U" .Or. l416Auto == .F.) .And.;
	Type("M->C5_TIPO") != "U" .And. M->C5_TIPO == "N"

	#IFDEF TOP
		bCondic := { || .T. }
	#ELSE	
		bCondic := { || ( ACS->ACS_TPHORA == "1" .AND. cDtHrAtual >= DToS( ACS->ACS_DATDE ) + ACS->ACS_HORDE .AND. ;
					( ACS->ACS_DATATE == dDataVazia .OR. cDtHrAtual <= DToS( ACS->ACS_DATATE ) + ACS->ACS_HORATE	) ) .OR. ;	
					( ACS->ACS_TPHORA == "2" .AND. ddatabase >= ACS->ACS_DATDE .AND. ;
					( ACS->ACS_DATATE == dDataVazia .OR. dDataBase <= ACS->ACS_DATATE ) .AND. ;
						cHoraAtual >= ACS->ACS_HORDE .AND. cHoraAtual <= ACS->ACS_HORATE ) }  
	#ENDIF 					

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa a regra para o cliente                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	#IFDEF TOP 
	
		cAliasACS := "QUERYACS" 
		
		cQuery := ""
		cQuery += "SELECT * FROM "  + RetSqlName( "ACS" ) + " " 
		cQuery += "WHERE "	
		cQuery += "ACS_FILIAL='"    + xFilial( "ACS" )    + "' AND " 
		cQuery += "ACS_CODCLI='"    + cCliente            + "' AND " 
		cQuery += "ACS_LOJA='"      + cLoja               + "' AND "
	
		cQuery += "( ( ACS_TPHORA='1' AND ('" + cDataAtual + "'>ACS_DATDE OR ('" + cDataAtual + "'=ACS_DATDE AND '" + cHoraAtual + "'>=ACS_HORDE ) ) AND " 
		cQuery += " ( ACS_DATATE='" + cDataVazia +"' OR ('" + cDataAtual + "'<ACS_DATATE OR ('" + cDataAtual + "'=ACS_DATATE AND '" + cHoraAtual + "'<=ACS_HORATE ) ) ) ) OR " 
		cQuery += "( ACS_TPHORA='2' AND '" + DToS( dDatabase ) + "'>=ACS_DATDE AND ( ACS_DATATE='" + cDataVazia +"' OR "
		cQuery += "'" + DToS( dDataBase ) + "'<=ACS_DATATE ) AND '" + cHoraAtual + "'>=ACS_HORDE AND '" + cHoraAtual + "'<=ACS_HORATE ) ) AND "   
		
		cQuery += "D_E_L_E_T_=' '"  
		
		cQuery := ChangeQuery( cQuery )        
		
		dbUseArea( .T., "TOPCONN", TcGenQry( , , cQuery ), cAliasACS, .F., .T. ) 
	       
	#ELSE           
		
		cAliasACS := "ACS" 
	
		ACS->( DbSetOrder( 2 ) ) 
		ACS->( DbSeek( xFilial("ACS") + cCliente + cLoja ) ) 
		
	#ENDIF 
	
	While !( cAliasACS )->( Eof() ) .AND. xFilial("ACS") == ( cAliasACS )->ACS_FILIAL .AND.;
				cCliente == ( cAliasACS )->ACS_CODCLI .AND.;
				cLoja    == ( cAliasACS )->ACS_LOJA 
		
		If Eval( bCondic ) 
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Avalia se encontrou somente uma regra para o cliente                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ                           
			cCodReg := (cAliasACS)->ACS_CODREG
			Exit
		EndIf 	
			
		( cAliasACS )->( DbSkip() ) 			
	End
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Fecha a area de trabalho da query                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	#IFDEF TOP
		( cAliasACS )->( DbCloseArea() ) 
		DbSelectArea( "ACS" ) 
	#ENDIF 			
	

	lContinua := lContinua .And. Empty(cCodReg)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa a regra para o grupo de clientes                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lContinua                                   
	
		SA1->( DbSetOrder( 1 ) ) 
		SA1->( DbSeek( xFilial( "SA1" ) + cCliente + cLoja ) ) 	
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se o cliente esta inserido em um grupo de clientes            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		cGrpVen := SA1->A1_GRPVEN
		If !Empty( cGrpVen ) 
		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Obtem a estrutura acima do grupo do cliente                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aGrupos := {} 
			MaCliStrUp( cGrpVen, @aGrupos )  
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Percorre todos os grupos para localizar uma regra                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	     		For nLoop := 1 To Len( aGrupos )   
	
				#IFDEF TOP 
				
					cAliasACS := "QUERYACS" 
					
					cQuery := ""
					cQuery += "SELECT * FROM "  + RetSqlName( "ACS" ) + " " 
					cQuery += "WHERE "					
					cQuery += "ACS_FILIAL='"    + xFilial( "ACS" )    + "' AND " 
					cQuery += "ACS_GRPVEN='"    + aGrupos[ nLoop, 1 ] + "' AND " 
					
					cQuery += "( ( ACS_TPHORA='1' AND ('" + cDataAtual + "'>ACS_DATDE OR ('" + cDataAtual + "'=ACS_DATDE AND '" + cHoraAtual + "'>=ACS_HORDE))  AND " 
					cQuery += " ( ACS_DATATE='" + cDataVazia +"' OR ('" + cDataAtual + "'<ACS_DATATE OR ('" + cDataAtual + "'=ACS_DATATE AND '" + cHoraAtual + "'<=ACS_HORATE ) ) ) ) OR " 
					
					cQuery += "( ACS_TPHORA='2' AND '" + DToS( dDatabase ) + "'>=ACS_DATDE AND ( ACS_DATATE='" + cDataVazia +"' OR "
					cQuery += "'" + DToS( dDataBase ) + "'<=ACS_DATATE ) AND '" + cHoraAtual + "'>=ACS_HORDE AND '" + cHoraAtual + "'<=ACS_HORATE ) ) AND "   
											
					cQuery += "D_E_L_E_T_=' '" 
					
					cQuery := ChangeQuery( cQuery ) 
					
					dbUseArea( .T., "TOPCONN", TcGenQry( , , cQuery ), cAliasACS, .F., .T. ) 
				       
				#ELSE           
					
					cAliasACS := "ACS" 
				
					ACS->( DbSetOrder( 3 ) ) 
					ACS->( DbSeek( xFilial("ACS") + aGrupos[ nLoop, 1 ] ) ) 	
						
				#ENDIF 
	   	
				While !( cAliasACS )->( Eof() ) .AND. xFilial("ACS") == ( cAliasACS )->ACS_FILIAL .AND.;
							aGrupos[ nLoop, 1 ] == ( cAliasACS )->ACS_GRPVEN
							
					If Eval( bCondic ) 							
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Avalia a regra para o item                                             ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						cCodReg := (cAliasACS)->ACS_CODREG
						Exit
					EndIf 
	
	
					( cAliasACS )->( DbSkip() )	
				  
				End
	
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Fecha a area de trabalho da query                                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				#IFDEF TOP
					( cAliasACS )->( DbCloseArea() ) 
					DbSelectArea( "ACS" ) 
				#ENDIF 			
				
				If !lContinua 
					Exit
				EndIf 	
	
			Next nLoop 
	
		EndIf 
		
	EndIf 
	
	lContinua := lContinua .And. Empty(cCodReg)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pesquisa a regra para o codigo de clientes e grupo em branco           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lContinua 
	
		#IFDEF TOP 
		
			cAliasACS := "QUERYACS" 
			
			cQuery := ""
			cQuery += "SELECT * FROM "  + RetSqlName( "ACS" )              + " " 
			cQuery += "WHERE "			
			cQuery += "ACS_FILIAL='"    + xFilial( "ACS" )                 + "' AND " 
			cQuery += "ACS_CODCLI='"    + Space( Len( ACS->ACS_CODCLI ) ) + "' AND " 
			cQuery += "ACS_LOJA='"      + Space( Len( ACS->ACS_LOJA   ) ) + "' AND "
			cQuery += "ACS_GRPVEN='"    + Space( Len( ACS->ACS_GRPVEN ) ) + "' AND "
			
			cQuery += "( ( ACS_TPHORA='1' AND ('"+cDataAtual+"'>ACS_DATDE OR ('"+cDataAtual+"'=ACS_DATDE AND '"+cHoraAtual+"'>=ACS_HORDE ) ) AND " 
			cQuery += " ( ACS_DATATE='"+cDataVazia+"' OR ('"+cDataAtual+"'<ACS_DATATE OR ('"+cDataAtual+"'=ACS_DATATE AND '"+cHoraAtual+"'<=ACS_HORATE ) ) ) ) OR " 
			
			cQuery += "( ACS_TPHORA='2' AND '" + DToS( dDatabase ) + "'>=ACS_DATDE AND ( ACS_DATATE='" + cDataVazia +"' OR "
			cQuery += "'" + DToS( dDataBase ) + "'<=ACS_DATATE ) AND '" + cHoraAtual + "'>=ACS_HORDE AND '" + cHoraAtual + "'<=ACS_HORATE ) ) AND "   
					
			cQuery += "D_E_L_E_T_=' '" 
			
			cQuery := ChangeQuery( cQuery ) 
			
			dbUseArea( .T., "TOPCONN", TcGenQry( , , cQuery ), cAliasACS, .F., .T. ) 
			
			bWhile := { || !( cAliasACS )->( Eof() ) } 
		       
		#ELSE           
	   	                                    
		   cSeekACS := xFilial( "ACS" ) + Space( Len( ACS->ACS_GRPVEN + ACS->ACS_CODCLI + ACS->ACS_LOJA ) )  	
		   	
			ACS->( DbSetOrder( 3 ) ) 
			ACS->( DbSeek( cSeekACS )	) 
			
			bWhile := { || !ACS->( Eof() ) .AND. cSeekACS == ACS->ACS_FILIAL + ACS->ACS_GRPVEN + ACS->ACS_CODCLI + ACS->ACS_LOJA }
			     
		#ENDIF 	
			
		While Eval( bWhile ) 
		              
			If Eval( bCondic ) 									              
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Avalia a regra para o item                                             ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cCodReg := (cAliasACS)->ACS_CODREG
				Exit
			EndIf 	
				
			( cAliasACS )->( DbSkip() )	
		  
		End
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Fecha a area de trabalho da query                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			( cAliasACS )->( DbCloseArea() ) 
			DbSelectArea( "ACS" ) 
		#ENDIF 			
		
	
	EndIf
	
	lContinua := !Empty(cCodReg)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Avalia Regras para gatilho                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lContinua
		ACT->( DbSetOrder( 1 ) )
		If ACT->(DbSeek( xFilial("ACT") + cCodReg ))
			Do While ACT->ACT_FILIAL 	== xFilial("ACT") .AND.	;
						ACT->ACT_CODREG	== cCodReg 
						
				If ACT->ACT_TPRGNG == "1" .And. !Empty(ACT->(ACT_CODTAB+ACT_CONDPG))//-- Regra
					aAdd( aRegras, { ACT->ACT_CODTAB, "", ACT->ACT_CONDPG, "" } )
				EndIf 
				ACT->(DbSkip())	
			End
		EndIf
		
		If Len(aRegras) > 0
			If Len(aRegras) == 1
				cCodTab		:= aRegras[1][1]
				cCondPag		:= aRegras[1][3]

				//-- Se foi encontrado apenas uma regra, preenche se estiver vazio
				cParCodTab 	:= Iif( Empty(cParCodTab) .And. !Empty(cCodTab), cCodTab, cParCodTab )
				cParCondPag	:= Iif( Empty(cParCondPag) .And. !Empty(cCondPag), cCondPag, cParCondPag )
			Else
				aTitulos := { 	Posicione('SX3', 2, "ACT_CODTAB"  , 'X3Titulo()'),;
									Posicione('SX3', 2, "ACT_DESTAB"  , 'X3Titulo()'),;
									Posicione('SX3', 2, "ACT_CONDPG"  , 'X3Titulo()'),;
									Posicione('SX3', 2, "ACT_DESCPG"  , 'X3Titulo()')}
				
				aEval( aRegras, {|x| x[2] := Posicione("DA0",1,xFilial("DA0")+x[1],"DA0_DESCRI"),;
											x[4] := Posicione("SE4",1,xFilial("SE4")+x[3],"E4_DESCRI")  })
											
				nPos := TmsF3Array( aTitulos, aRegras, STR0177 ) // "Seleção por Regra de Negódio - Tabela de Preço e Condição de Pagto"
				//-- Se foi selecionado uma regra, assume a regra, se estiver preenchido
				If	nPos > 0
					cCodTab		:= aRegras[nPos][1]
					cCondPag		:= aRegras[nPos][3]

					cParCodTab 	:= Iif( !Empty(cCodTab), cCodTab, cParCodTab )
					cParCondPag	:= Iif( !Empty(cCondPag), cCondPag, cParCondPag )
				EndIf
			EndIf
		EndIf
	EndIf
	
	RestArea(aAreaACT)
	RestArea(aAreaACS)
	RestArea(aArea)

EndIf


Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410BXCG	³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Realiza a baixa do pedido de venda faturado pela 	          ³±±
			 ³	gestão de concessionarias                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Exp1: cCliente //cliente do pedido                         ³±±
±±³          ³ Exp2: cLoja    //Loja do pedido                            ³±±
±±³          ³ Exp3: cC5Num   // Numero do pedido	                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410BxGc(cCliente,cLoja,xC5Num,xC5Nota,xC5Serie)
Local aArea  := GetArea()
Local lRet   := .T.
Local cItem  := ""

Default cCliente 	:= IF(ValType(cCliente)=="C",cCliente,"")
Default cLoja	 	:= IF(ValType(cLoja)=="C",cLoja,"")
Default xC5Num	 	:= IF(ValType(xC5Num)=="C",xC5Num,"")
Default xC5Nota	 	:= IF(ValType(xC5Num)=="C",xC5Nota,"")
Default xC5Serie	:= IF(ValType(xC5Num)=="C",xC5Serie,"")


//Verifica se o cC5Num esta preenchido
If Empty(xC5Num) .OR. Empty(xC5Nota) .OR. Empty(xC5Serie)
	lRet := .F.
	Aviso(STR0153,STR0188,{STR0189}) //Atenção, "Numero do pedido de venda ou Nota ou Serie não foram informadas",OK
EndIf

If lRet
	DbSelectArea("SC5")
	DbSetOrder(3)
	
	If DbSeek(xFilial('SC5')+PADR(cCliente,TAMSX3("C5_CLIENTE")[1])+PADR(cLoja,TamSx3("C5_LOJACLI")[1])+xC5Num)
		If Empty(SC5->C5_NOTA) .OR. SC5->C5_LIBEROK <> 'E' .And. !Empty(SC5->C5_BLQ)
			DbSelectArea("SC6")
			DbSetOrder(1)
			If DbSeek(xFilial('SC6')+xC5Num)
				While !Eof() .And. xFilial('SC6')+ SC6->C6_NUM == xFilial('SC5') + xC5Num
					cItem := SC6->C6_ITEM
					DbSelectArea("SC9")
					DbSetOrder(2)
					If DbSeek(xFilial('SC9')+PADR(cCliente,TAMSX3("C9_CLIENTE")[1])+PADR(cLoja,TamSx3("C9_LOJA")[1])+xC5Num+cItem)
						If Empty(SC9->C9_BLEST) .AND. Empty(SC9->C9_BLCRED) .AND. Empty(SC9->C9_BLOQUEI)	
							RecLock("SC9", .F.)
							REPLACE C9_NFISCAL   WITH xC5Nota
							REPLACE C9_SERIENF	 WITH xC5Serie
							REPLACE C9_BLCRED    WITH '10'
							REPLACE C9_BLEST     WITH '10' 							
							MsUnlock()
						Else  
							Aviso(STR0153,STR0190,{STR0189})  //Atenção,"Pedido de Venda possui algum bloqueio",OK
							lRet := .F.
						EndIf	
					Else
						lRet := .F.
						Aviso(STR0153,STR0190,{STR0189}) //Atenção,"Pedido de Venda possui algum bloqueio",OK	
					EndIf
					If lRet
						RecLock("SC6", .F.)                                 		
						REPLACE C6_NOTA   	 WITH xC5Nota
						REPLACE C6_SERIE	 WITH xC5Serie
						MsUnlock()
					EndIf
					
					SC6->(DbSkip())
				End
			EndIf
				If lRet
					RecLock("SC5", .F.)
					REPLACE C5_NOTA     WITH xC5Nota
					REPLACE C5_SERIE    WITH xC5Serie
					REPLACE C5_LIBEROK  WITH "S" 
					MsUnlock()
				EndIf
		Else
			Aviso(STR0153,STR0191,{STR0189}) //Atenção,"Pedido de Venda já está encerado",OK
			lRet :=.F.		
		EndIf		
	Else
		lRet := .F.
	EndIf
EndIf

RestArea(aArea)

Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MATA410A_VºAutor  ³Andre Anjos         º Data ³  03/05/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Descri‡…o ³ Funcao utilizada para verificar a ultima versao do fonte   ³±±
±±³			 ³ MATA410A.PRW aplicado no rpo do cliente, assim verificando ³±±
±±³			 ³ a necessidade de uma atualizacao neste fonte.              ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FATURAMENTO                    	                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATA410A_V()
Return 20110131

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410SitTribºAutor  ³ Vendas/CRM        º Data ³  06/03/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função utilizada para posicionar as tabelas SB1 e SF4 no   º±±
±±º          ³ X3_VALID dos campos C6_OPER e C6_TES.                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410A                                                   º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410SitTrib()

Local nPProduto	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPTes		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona nas tabelas SB1 e SF4 para o preenchimento correto da ³
//³ classificação fiscal dos itens C6_CLASFIS através dos gatilhos. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aCols[n][nPProduto]) .And. RTrim(aCols[n][nPProduto]) <> RTrim(SB1->B1_COD)
	SB1->(dbSetOrder(1))
	SB1->(dbSeek(xFilial("SB1")+aCols[n][nPProduto]))
EndIf

If !Empty(aCols[n][nPTes]) .And. RTrim(aCols[n][nPTes]) <> RTrim(SF4->F4_CODIGO)
	SF4->(dbSetOrder(1))
	SF4->(dbSeek(xFilial("SF4")+aCols[n][nPTes]))
EndIf

Return .T.




/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³A410VldTes ³ Autor ³ Marco Aurelio - Mano    ³ Data ³13/06/11  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³Valida relacao do campo C6_TES com o campo C5_LIQPROD          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³A410VldTes(ExpL1)                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpL1 = Determina se a chamada foi feita a partir da TudOK     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³MATA410A                                                       ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/             
Function A410VldTes(lTOK) 
Local nPosTES  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"}) 	// Posicao do campo C6_TES no aCols
Local lLiqProd := (SC5->(FieldPos("C5_LIQPROD"))>0)				// Determina se o campo existe na estrutura da tabela
Local aArea    := GetArea()										// Salva ambiente atual para posterior restauracao
Local lRet     := .t.											// Conteudo de retorno
Local cAtuEst  := ""											// Conteudo de retorno

DEFAULT lTOK := .F.

If !aCols[n][Len(aCols[n])] .and. lLiqProd 

	If lTOK
		cAtuEst := Posicione("SF4",1,xFilial("SF4")+aCols[n][nPosTES],"F4_ESTOQUE")
	Else
		cAtuEst := SF4->F4_ESTOQUE
	EndIf
	
	If (M->C5_LIQPROD=="1") .and. ( cAtuEst # "N" ) .And. M->C5_DOCGER == "1"

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³HELP: Para pedidos com o campo "Liquido Prod=Sim" a TES informada não deve permitir atualização de estoque ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
		Help(" ",1,"A410TESINV")
	    lRet := .f.

	EndIf
		
EndIf

RestArea(aArea)

Return(lRet)
